{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/docs/index.mdx"],"names":["Star","link","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","marginTop","marginRight","href","target","src","border","marginBottom","scrolling","width","height","BlueDiv","props","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","fontSize","Input","_props","buttonClass","fontFamily","cursor","padding","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","&:hover","&:active","&:focus","outlineColor","Button","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","type","DemoProfile","_ref","size","concat","layoutProps","MDXLayout","MDXContent","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","_demos__WEBPACK_IMPORTED_MODULE_3__","id","parentName","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-index.cae3f146.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const Star: React.FC = () => {\n  const link = \"https://ghbtns.com/github-btn.html?user=basarat&repo=gls&type=star&count=true\"\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <a\n        style={{ marginRight: '15px' }}\n        href={link}\n        target=\"_blank\">Powered by your ‚≠ês</a>\n      <iframe\n        src={link}\n        style={{ border: 'none', marginBottom: '-3px' }}\n        scrolling=\"0\"\n        width=\"170px\" height=\"20px\" />\n    </div>\n  );\n}\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n\n\nexport const DemoProfile: React.FC<{ size: number }> = ({ size }) => {\n  return (\n    <img\n      style={{\n        borderRadius: '50%',\n        // Explicit size\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n      src={`http://placekitten.com/g/${size}/${size}`} />\n  );\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport * as demos from '../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"general-layout-system\"\n    }}>{`General Layout System`}</h1>\n    <p><inlineCode parentName=\"p\">{`gls`}</inlineCode>{` is a simple (but powerful) general purpose layout system for React üåπ. `}</p>\n    <p>{`Having been a part of a fair share of component libraries, this library isolates the layout system from past efforts. This library allows you to offload the `}<em parentName=\"p\">{`layout`}</em>{` portion of building your team's own component library system ‚ù§Ô∏è.`}</p>\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`Install `}<inlineCode parentName=\"p\">{`gls`}</inlineCode>{` along with its peer dependencies: `}<inlineCode parentName=\"p\">{`react`}</inlineCode>{` (for html) and `}<inlineCode parentName=\"p\">{`typestyle`}</inlineCode>{` (for css):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`npm i gls react typestyle\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"css-principles\"\n    }}>{`CSS principles`}</h1>\n    <p>{`There are a few key CSS principles developed with gls. These ideas are designed to help build maintainable layouts in the world of components:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./principle-spacing/\"\n        }}>{`Spacing principle`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./principle-sizing/\"\n        }}>{`Sizing principle`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"./principle-scrolling/\"\n        }}>{`Scrolling principle`}</a></li>\n    </ul>\n    <h1 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h1>\n    <p>{`All our components are just browser native react tags (default `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`) with atomic CSS generated by typestyle. The layout system is powered by pure (and minimal) CSS resulting in high performance while still providing excellent developer ergonomics.`}</p>\n    <p>{`You can now jump to individual docs and demos using the sidebar. View them in order (recommended üëçüèª) or jump to whatever catches your eye üï∂.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}