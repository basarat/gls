{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/docs/components/containers.mdx"],"names":["BlueDiv","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","width","fontSize","Input","_props","buttonClass","fontFamily","cursor","height","padding","border","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","&:hover","&:active","&:focus","outlineColor","Button","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","type","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","href","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Horizontal","Flex","Content","demos","___WEBPACK_IMPORTED_MODULE_4__","spacing","sizing","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-containers.5b6b8f80.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal, Flex, Content } from '../..'; \nimport * as demos from '../../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"containers\"\n    }}>{`Containers`}</h1>\n    <p>{`We have two general purpose `}<em parentName=\"p\">{`single child`}</em>{` containers `}<inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{`. The ideas of `}<em parentName=\"p\">{`flex`}</em>{` and `}<em parentName=\"p\">{`content`}</em>{` are explained in the `}<a parentName=\"p\" {...{\n        \"href\": \"../principle-sizing/\"\n      }}>{`sizing principle`}</a>{`. If you have more than one child item, you probably want to use something like a `}<a parentName=\"p\" {...{\n        \"href\": \"../vertical/\"\n      }}>{`Vertical`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../horizontal/\"\n      }}>{`Horizontal`}</a>{`.`}</p>\n    <h1 {...{\n      \"id\": \"flex\"\n    }}>{`Flex`}</h1>\n    <p>{`Flexes into the parent container.`}</p>\n    <p>{`In the example below, we have an explicit sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`lightskyblue`}</inlineCode>{`) with an inner `}<inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`darkorange`}</inlineCode>{`). The inner `}<inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` keeps its size to match that of the outer container (observed below as you don't see the background of the parent as it is filled in by the child).`}</p>\n    <Playground __position={0} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Flex style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up all the space from the parent\\n  </Flex>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Flex,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Flex style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Flex\">\n        I'm taking up all the space from the parent\n    </Flex>  \n  </Vertical>\n    </Playground>\n    <p><inlineCode parentName=\"p\">{`sizing?: number`}</inlineCode>{` prop allows you to control the flex ratio (concept covered in `}<a parentName=\"p\" {...{\n        \"href\": \"../principle-sizing/\"\n      }}>{`sizing principle`}</a>{`) eg. a 1,2 ratio (`}<inlineCode parentName=\"p\">{`Horizontal(Flex:1,Flex:2)`}</inlineCode>{`) is shown below:`}</p>\n    <Playground __position={1} __code={'<Horizontal\\n  height={100}\\n  spacing={0}\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <Flex sizing={1} style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking 1\\n  </Flex>\\n  <Flex sizing={2} style={{ backgroundColor: \\'lightpink\\' }}>\\n    I\\'m taking 2\\n  </Flex>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Flex,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal height={100} spacing={0} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Horizontal\">\n    <Flex sizing={1} style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Flex\">\n        I'm taking 1\n    </Flex>  \n    <Flex sizing={2} style={{\n          backgroundColor: \"lightpink\"\n        }} mdxType=\"Flex\">\n        I'm taking 2\n    </Flex>\n  </Horizontal>\n    </Playground>\n    <h1 {...{\n      \"id\": \"content\"\n    }}>{`Content`}</h1>\n    <p>{`Content takes up as much space as needed its child.`}</p>\n    <p>{`In the example below we throw a few `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` items in a `}<inlineCode parentName=\"p\">{`Vertical(Content,Content,Content)`}</inlineCode>{` structure: `}</p>\n    <Playground __position={2} __code={'<Vertical style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Content style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n  <Content style={{ backgroundColor: \\'lightpink\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n  <Content style={{ backgroundColor: \\'limegreen\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Flex,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Content style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n    <Content style={{\n          backgroundColor: \"lightpink\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n    <Content style={{\n          backgroundColor: \"limegreen\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}