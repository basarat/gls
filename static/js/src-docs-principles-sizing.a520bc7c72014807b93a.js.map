{"version":3,"sources":["/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/spacers.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/docs/principles/sizing.mdx","/home/travis/build/basarat/gls/src/index.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/styles/flex.ts"],"names":["__webpack_require__","d","__webpack_exports__","GLSDefaults","react__WEBPACK_IMPORTED_MODULE_0__","n","React","createContext","verticalSpacing","horizontalSpacing","breakpoint","Content","typestyle__WEBPACK_IMPORTED_MODULE_0__","_internal_utils__WEBPACK_IMPORTED_MODULE_1__","_styles_flex__WEBPACK_IMPORTED_MODULE_2__","Flex","props","klass","typestyle","flex","createGLSTag","displayName","content","gridSpaced","topAndBottom","leftAndRight","arguments","length","undefined","vertical","boxUnitToString","horizontal","marginTop","marginLeft","$nest","&>*","Grid","spacing","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","_useGLSDefaults","useGLSDefaults","_spacing","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","horizontallySpaced","margin","marginRight","&>*:last-child","Horizontal","horizontalAlign","verticalAlign","sizing","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","processFlexProp","endJustified","centerJustified","center","end","FlexSpace","className","fx","react__WEBPACK_IMPORTED_MODULE_3__","assign","data-comment","HorizontalSpace","style","width","space","styles","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","display","VerticalSpace","height","verticallySpaced","marginBottom","Vertical","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","___WEBPACK_IMPORTED_MODULE_4__","backgroundColor","isMDXComponent","_components_containers__WEBPACK_IMPORTED_MODULE_1__","_components_vertical__WEBPACK_IMPORTED_MODULE_2__","_components_horizontal__WEBPACK_IMPORTED_MODULE_3__","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollDisable","value","_processPadding","box","paddingTop","paddingRight","paddingBottom","paddingLeft","_box$map","map","_box$map2","slicedToArray","topBottom","leftRight","_box$map3","_box$map4","comment","padding","minHeight","maxHeight","minWidth","maxWidth","scroll","_props$styles","tag","objectWithoutProperties","createElement","name","objectSpread","apply","scrollHelpers","concat","toConsumableArray","prop","_prop$sizing","context","useContext","flexRoot","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent"],"mappings":"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","file":"static/js/src-docs-principles-sizing.0ca42abb.js","sourcesContent":["import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: BoxUnit,\n  horizontalSpacing?: BoxUnit,\n  breakpoint?: number\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24,\n  breakpoint: 480,\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type BoxUnit = number | string;\n\n/** \n * Various versions of providing common shorthand properties\n */\nexport type BoxSet =\n  /** top,right,left,bottom */\n  | BoxUnit\n  /** [topBottom,leftRight] */\n  | [BoxUnit, BoxUnit]\n  /** [top,right,bottom,left] */\n  | [BoxUnit, BoxUnit, BoxUnit, BoxUnit]\n\n/** \n * Specifies sizing interaction\n */\nexport interface SizingProp {\n  /** \n   * Specifies `sizing` interaction\n   */\n  sizing?:\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | number;\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface GLSProps extends PaddingProp, SizeProps, ScrollProp, StylesProp, TagProps {\n  className?: string,\n  style?: React.CSSProperties,\n}\n\n/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: BoxSet,\n}\n\n\n/** \n * Add support for explicit sizing\n */\nexport interface SizeProps {\n  height?: BoxUnit,\n  minHeight?: BoxUnit,\n  maxHeight?: BoxUnit,\n\n  width?: BoxUnit,\n  minWidth?: BoxUnit,\n  maxWidth?: BoxUnit,\n}\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?:\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'disable';\n}\n\n/** \n * Add to add support for mixing in NestedCSSProperties \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps {\n  tag?:\n  {\n    /** name default: div */\n    props: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'div';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'button';\n    props?: Omit<React.HTMLProps<HTMLButtonElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'input';\n    props?: Omit<React.HTMLProps<HTMLInputElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'select';\n    props?: Omit<React.HTMLProps<HTMLSelectElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'section';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'a';\n    props?: Omit<React.HTMLProps<HTMLAnchorElement>, 'className' | 'style'>;\n  }\n  // TODO: heading paragraph\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps } from '../common';\nimport { createGLSTag } from '../internal/utils';\nimport { content, flex } from '../styles/flex';\n\nexport interface FlexProps extends GLSProps {\n  flex?: number;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const klass = typestyle.style(flex(props.flex));\n  return createGLSTag(props, klass, 'Flex');\n};\nFlex.displayName = 'Flex';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<GLSProps> = (props) => {\n  const klass = typestyle.style(content);\n  return createGLSTag(props, klass, 'Content');\n};\nContent.displayName = 'Content';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BoxUnit, GLSProps } from '../common';\nimport { boxUnitToString, createGLSTag, useGLSDefaults } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight = topAndBottom): string {\n  const vertical = boxUnitToString(topAndBottom);\n  const horizontal = boxUnitToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      $nest: {\n        '&>*': {\n          marginTop: vertical,\n          marginLeft: horizontal,\n        }\n      }\n    }\n  );\n};\n\nexport interface GridProps extends GLSProps {\n  spacing?:\n  | BoxUnit\n  | [BoxUnit, BoxUnit]\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { spacing, ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = gridSpaced(verticalSpacing, horizontalSpacing);\n  return (\n    createGLSTag(otherProps, klass, 'Grid')\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, SizingProp, BoxUnit } from '../common';\nimport { createGLSTag, processFlexProp, boxUnitToString, useGLSDefaults } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end } from '../styles/flex';\nimport { types } from 'typestyle';\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface HorizontalProps extends GLSProps, SizingProp {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    sizing: flex,\n    ...otherProps } = props;\n\n  const { horizontalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processFlexProp(props),\n    horizontal,\n    horizontallySpaced(props.spacing == null ? horizontalSpacing : props.spacing),\n    horizontalAlign == 'right' && endJustified,\n    horizontalAlign == 'center' && centerJustified,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n  );\n  return createGLSTag(otherProps, klass, 'Horizontal');\n}\nHorizontal.displayName = 'Horizontal';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BoxUnit } from '../common';\nimport { boxUnitToString, useGLSDefaults } from '../internal/utils';\nimport { flex } from '../styles/flex';\n\nexport interface FlexSpaceProps extends React.HTMLProps<HTMLDivElement> {\n  flex?: number;\n}\n\n/** \n * Flexes into any available space \n */\nexport const FlexSpace: React.FC<FlexSpaceProps> = (props) => {\n  const { className, flex: fx, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(flex(fx))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexSpace' />\n  );\n};\nFlexSpace.displayName = 'FlexSpace';\n\n/** \n * Common interface for space props \n */\nexport interface SpaceProps extends React.HTMLProps<HTMLDivElement> {\n  space?: BoxUnit;\n}\n\n/**\n * Takes a fixed amount of horizontal space\n */\nexport const HorizontalSpace: React.FC<SpaceProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { horizontalSpacing } = useGLSDefaults();\n  const width = boxUnitToString(props.space == null ? horizontalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    display: 'inline-block',\n    width: width,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='HorizontalSpace' />;\n};\nHorizontalSpace.displayName = 'HorizontalSpace';\n\n\n/**\n * Takes a fixed amount of vertical space\n */\nexport const VerticalSpace: React.FC<SpaceProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { verticalSpacing } = useGLSDefaults();\n  const height = boxUnitToString(props.space == null ? verticalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    height: height,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='VerticalSpace' />;\n};\nVerticalSpace.displayName = 'VerticalSpace';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, BoxUnit, SizingProp } from '../common';\nimport { createGLSTag, boxUnitToString, processFlexProp, useGLSDefaults } from '../internal/utils';\nimport { types } from 'typestyle';\nimport { vertical, centerJustified, endJustified, end, center } from '../styles/flex';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface VerticalProps extends GLSProps, SizingProp {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    sizing: flex,\n    ...otherProps\n  } = props;\n\n  const { verticalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processFlexProp(props),\n    vertical,\n    verticallySpaced(props.spacing == null ? verticalSpacing : props.spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'right' && end,\n    horizontalAlign == 'center' && center,\n  );\n  return createGLSTag(otherProps, klass, 'Vertical');\n}\nVertical.displayName = 'Vertical';\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal } from '../..'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"sizing\"\n    }}>{`Sizing`}</h1>\n    <p>{`The ability to control the sizing of a container is what fundamentally makes it possible to mix `}<em parentName=\"p\">{`explicit sized`}</em>{` (simple) / `}<em parentName=\"p\">{`flex sized`}</em>{` (powerful) and `}<em parentName=\"p\">{`flexible`}</em>{` (super-powerful) layout items in your designs. We cover them one by one below.`}</p>\n    <h2 {...{\n      \"id\": \"explicit-sized\"\n    }}>{`Explicit sized`}</h2>\n    <p>{`Driven by explicit `}<inlineCode parentName=\"p\">{`width,height`}</inlineCode>{` arguments. Here we have a simple `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` container with explicit `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`: `}</p>\n    <Playground __position={0} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  Hello world\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    Hello world\n  </Vertical>\n    </Playground>\n    <p>{`This is essentially what you are doing in most design tools out there. Sadly explicit sizing does not scale to `}<em parentName=\"p\">{`real`}</em>{` applications where sizes need to be reactive to either their parent or their content. Fortunately we provide concepts to handle these cases.`}</p>\n    <h2 {...{\n      \"id\": \"flex-sized\"\n    }}>{`Flex sized`}</h2>\n    <p>{`A flex sized component takes up as much space as offered by the parent. `}</p>\n    <p>{`In the example below, we have an explicit sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`lightskyblue`}</inlineCode>{`) with an inner flex sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`darkorange`}</inlineCode>{`). The inner vertical keeps it size to match that of the outer container (observed below as you don't see the background of the parent as it is filled in by the child).`}</p>\n    <Playground __position={1} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Vertical sizing={\\'flex\\'} style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up all the space from the parent\\n  </Vertical>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Vertical sizing={'flex'} style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Vertical\">\n        I'm taking up all the space from the parent\n    </Vertical>  \n  </Vertical>\n    </Playground>\n    <h2 {...{\n      \"id\": \"content-sized\"\n    }}>{`Content sized`}</h2>\n    <p>{`A content sized component takes up as much space as offered by the parent. This is the most common sizing that you want and is therefore the default.`}</p>\n    <p>{`In the example below, we have an explicit sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`lightskyblue`}</inlineCode>{`) with an inner content-sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`darkorange`}</inlineCode>{`). The inner vertical keeps it size to match whatever is needed by its children (observed below as you see the background of the parent where the child ends)`}</p>\n    <Playground __position={2} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Vertical style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up as much space as needed by my children\\n  </Vertical>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Vertical style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Vertical\">\n        I'm taking up as much space as needed by my children\n    </Vertical>  \n  </Vertical>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can set it explicitly as well if you want `}<inlineCode parentName=\"p\">{`sizing={'content'}`}</inlineCode></p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","/** Common */\nexport * from './common';\n\n/** Components */\nexport * from './components/containers';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/responsive';\nexport * from './components/grid';\nexport * from './components/spacers';\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * If you expect a child somewhere down in the tree to scroll\n * you need to tell the browser to prevent a scroll bar. \n * Example use : `parent(scrollDisable) > child(scroll)`\n */\nexport const scrollDisable: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import * as typestyle from 'typestyle';\nimport { BoxUnit, GLSProps, SizingProp, GLSDefaults, BoxSet } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function boxUnitToString(value: BoxUnit): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Utility to unwrap the three ways a padding might be provided \n */\nfunction _processPadding(box: BoxSet)\n  : typestyle.types.NestedCSSProperties {\n  if (typeof box == 'number' || typeof box == 'string') {\n    const value = boxUnitToString(box);\n    return { paddingTop: value, paddingRight: value, paddingBottom: value, paddingLeft: value };\n  } else if (box.length == 2) {\n    const [topBottom, leftRight] = box.map(boxUnitToString);\n    return { paddingTop: topBottom, paddingRight: leftRight, paddingBottom: topBottom, paddingLeft: leftRight };\n  } else {\n    const [top, right, bottom, left] = box.map(boxUnitToString);\n    return { paddingTop: top, paddingRight: right, paddingBottom: bottom, paddingLeft: left };\n  }\n}\n\n/** \n * Creates the appropriate tag\n * - Does any processing of GLSProps if required\n * - Then creates the approvate react tag\n */\nexport function createGLSTag<T extends GLSProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debuggin */\n  comment: string,\n) {\n  const {\n    className,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    scroll,\n    styles = [],\n    tag, ...otherProps } = props;\n\n  return React.createElement(\n    (tag != null && ('name' in tag) && tag.name != null) ? tag.name : 'div',\n    {\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && (\n            scroll == 'disable' ? scrollHelpers.scrollDisable\n              : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n                : scroll == 'vertical' ? scrollHelpers.scrollVertical\n                  : scroll == 'both' ? scrollHelpers.scrollBoth\n                    : null\n          ),\n          /** Padding */\n          padding != null && (_processPadding(padding)),\n          /** Size props */\n          height != null && { height: boxUnitToString(height) },\n          minHeight != null && { minHeight: boxUnitToString(minHeight) },\n          maxHeight != null && { maxHeight: boxUnitToString(maxHeight) },\n          width != null && { width: boxUnitToString(width) },\n          minWidth != null && { minWidth: boxUnitToString(minWidth) },\n          maxWidth != null && { maxWidth: boxUnitToString(maxWidth) },\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n      ...((tag != null && tag.props != null) ? tag.props : {}),\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function processFlexProp(prop: SizingProp): typestyle.types.CSSProperties {\n  const { sizing: fx = 'content' } = prop;\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const context = useContext(GLSDefaults);\n  return {\n    verticalSpacing: context.verticalSpacing == null ? 24 : context.verticalSpacing,\n    horizontalSpacing: context.horizontalSpacing == null ? 24 : context.horizontalSpacing,\n    breakpoint: context.breakpoint == null ? 480 : context.breakpoint,\n  }\n}\n","import { types, extend } from \"typestyle\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\n\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: number = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n"],"sourceRoot":""}