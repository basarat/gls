{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/responsive.tsx","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/spacers.tsx","/home/travis/build/basarat/gls/src/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","BlueDiv","PinkDiv","Label","Input","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","typestyle__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","style","backgroundColor","children","labelClass","typestyle","className","inputClass","width","fontSize","_props","GLSDefaults","React","createContext","verticalSpacing","horizontalSpacing","breakpoint","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollHidden","flexRoot","display","horizontal","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","vertical","content","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","flex","arguments","length","undefined","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","center","end","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent","centerJustified","endJustified","cssLengthToString","value","_processPadding","box","_boxToFullBox","_box$map","map","_box$map2","Object","slicedToArray","topBottom","leftRight","boxToFullBox","_boxToFullBox2","paddingTop","paddingRight","paddingBottom","paddingLeft","createGLSTag","klass","comment","padding","height","minHeight","maxHeight","minWidth","maxWidth","scroll","_props$styles","styles","tag","otherProps","objectWithoutProperties","name","objectSpread","apply","scrollHelpers","concat","toConsumableArray","data-comment","processSizingProp","prop","_prop$sizing","sizing","fx","useGLSDefaults","context","useContext","Flex","displayName","Content","verticallySpaced","margin","&>*","marginBottom","&>*:last-child","Vertical","horizontalAlign","verticalAlign","spacing","horizontallySpaced","marginRight","Horizontal","Responsive","gridSpaced","topAndBottom","leftAndRight","marginTop","marginLeft","$nest","Grid","_useGLSDefaults","_spacing","FlexSpace","react","assign","HorizontalSpace","space","VerticalSpace","containers_Flex","containers_Content","vertical_Vertical","horizontal_Horizontal","responsive_Responsive"],"mappings":"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","file":"static/js/src-docs-components-responsive~src-docs-components-vertical~src-docs-principles-scrolling~src-docs-p~cc891d47.96c53dea.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n *  Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n","import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: CSSLength,\n  horizontalSpacing?: CSSLength,\n  breakpoint?: number\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24,\n  breakpoint: 480,\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type CSSLength = number | string;\n\n/** \n * Various versions of providing common shorthand properties\n */\nexport type CSSBox =\n  /** top,right,left,bottom */\n  | CSSLength\n  /** [top & bottom, left & right] */\n  | [CSSLength, CSSLength]\n  /** [top,right,bottom,left] */\n  | [CSSLength, CSSLength, CSSLength, CSSLength]\n\n/** \n * Specifies sizing interaction\n */\nexport interface SizingProp {\n  /** \n   * Specifies `sizing` interaction\n   */\n  sizing?:\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | number /** A flex ratio */;\n}\n\n/** \n * Specifies children layout options \n */\nexport interface ChildPlacementProps {\n  /** Spacing between each child */\n  spacing?: number,\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface GLSProps extends PaddingProp, SizeProps, ScrollProp, StylesProp, TagProps {\n}\n\n/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: CSSBox,\n}\n\n\n/** \n * Add support for explicit sizing\n */\nexport interface SizeProps {\n  height?: CSSLength,\n  minHeight?: CSSLength,\n  maxHeight?: CSSLength,\n\n  width?: CSSLength,\n  minWidth?: CSSLength,\n  maxWidth?: CSSLength,\n}\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?:\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n}\n\n/** \n * Support for mixing in NestedCSSProperties \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Support for React `style` property\n */\nexport interface StyleProp {\n  style?: React.CSSProperties;\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps extends StyleProp {\n  className?: string,\n\n  tag?:\n  {\n    /** name default: div */\n    props: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'div';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'button';\n    props?: Omit<React.HTMLProps<HTMLButtonElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'input';\n    props?: Omit<React.HTMLProps<HTMLInputElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'select';\n    props?: Omit<React.HTMLProps<HTMLSelectElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'section';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'a';\n    props?: Omit<React.HTMLProps<HTMLAnchorElement>, 'className' | 'style'>;\n  }\n  // TODO: heading paragraph\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * Cuts off the exccess content and disables the scroll bar\n */\nexport const scrollHidden: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\n\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: number = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { CSSLength, GLSProps, SizingProp, GLSDefaults, CSSBox } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function cssLengthToString(value: CSSLength): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Ensures all four members of box are present\n */\nfunction boxToFullBox(box: CSSBox): [CSSLength, CSSLength, CSSLength, CSSLength] {\n  if (typeof box == 'number' || typeof box == 'string') {\n    const value = cssLengthToString(box);\n    return [value, value, value, value];\n  } else if (box.length == 2) {\n    const [topBottom, leftRight] = box.map(cssLengthToString);\n    return [topBottom, leftRight, topBottom, leftRight];\n  } else {\n    return box.map(cssLengthToString) as [CSSLength, CSSLength, CSSLength, CSSLength];\n  }\n}\n\n/** \n * Utility to unwrap the three ways a padding might be provided \n */\nfunction _processPadding(box: CSSBox)\n  : typestyle.types.NestedCSSProperties {\n  const [paddingTop, paddingRight, paddingBottom, paddingLeft] = boxToFullBox(box);\n  return { paddingTop, paddingRight, paddingBottom, paddingLeft };\n}\n\n/** \n * Creates the appropriate tag\n * - Does any processing of GLSProps if required\n * - Then creates the approvate react tag\n */\nexport function createGLSTag<T extends GLSProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debuggin */\n  comment: string,\n) {\n  const {\n    className,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    scroll,\n    styles = [],\n    tag, ...otherProps } = props;\n\n  return React.createElement(\n    (tag != null && ('name' in tag) && tag.name != null) ? tag.name : 'div',\n    {\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && (\n            scroll == 'hidden' ? scrollHelpers.scrollHidden\n              : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n                : scroll == 'vertical' ? scrollHelpers.scrollVertical\n                  : scroll == 'both' ? scrollHelpers.scrollBoth\n                    : null\n          ),\n          /** Padding */\n          padding != null && (_processPadding(padding)),\n          /** Size props */\n          height != null && { height: cssLengthToString(height) },\n          minHeight != null && { minHeight: cssLengthToString(minHeight) },\n          maxHeight != null && { maxHeight: cssLengthToString(maxHeight) },\n          width != null && { width: cssLengthToString(width) },\n          minWidth != null && { minWidth: cssLengthToString(minWidth) },\n          maxWidth != null && { maxWidth: cssLengthToString(maxWidth) },\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n      ...((tag != null && tag.props != null) ? tag.props : {}),\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function processSizingProp(prop: SizingProp): typestyle.types.CSSProperties {\n  const { sizing: fx = 'content' } = prop;\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const context = useContext(GLSDefaults);\n  return {\n    verticalSpacing: context.verticalSpacing == null ? 24 : context.verticalSpacing,\n    horizontalSpacing: context.horizontalSpacing == null ? 24 : context.horizontalSpacing,\n    breakpoint: context.breakpoint == null ? 480 : context.breakpoint,\n  }\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps } from '../common';\nimport { createGLSTag } from '../internal/utils';\nimport { content, flex } from '../styles/flex';\n\nexport interface FlexProps extends GLSProps {\n  sizing?: number;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const klass = typestyle.style(flex(props.sizing));\n  return createGLSTag(props, klass, 'Flex');\n};\nFlex.displayName = 'Flex';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<GLSProps> = (props) => {\n  const klass = typestyle.style(content);\n  return createGLSTag(props, klass, 'Content');\n};\nContent.displayName = 'Content';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, CSSLength, SizingProp, ChildPlacementProps } from '../common';\nimport { createGLSTag, cssLengthToString, processSizingProp, useGLSDefaults } from '../internal/utils';\nimport { types } from 'typestyle';\nimport { vertical, centerJustified, endJustified, end, center } from '../styles/flex';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface VerticalProps extends GLSProps, SizingProp, ChildPlacementProps {\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    sizing,\n    ...otherProps\n  } = props;\n\n  const { verticalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processSizingProp(props),\n    vertical,\n    verticallySpaced(props.spacing == null ? verticalSpacing : props.spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'right' && end,\n    horizontalAlign == 'center' && center,\n  );\n  return createGLSTag(otherProps, klass, 'Vertical');\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, SizingProp, CSSLength, ChildPlacementProps } from '../common';\nimport { createGLSTag, processSizingProp, cssLengthToString, useGLSDefaults } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end } from '../styles/flex';\nimport { types } from 'typestyle';\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface HorizontalProps extends GLSProps, SizingProp, ChildPlacementProps {\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    sizing,\n    ...otherProps } = props;\n\n  const { horizontalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processSizingProp(props),\n    horizontal,\n    horizontallySpaced(props.spacing == null ? horizontalSpacing : props.spacing),\n    horizontalAlign == 'right' && endJustified,\n    horizontalAlign == 'center' && centerJustified,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n  );\n  return createGLSTag(otherProps, klass, 'Horizontal');\n}\nHorizontal.displayName = 'Horizontal';\n","import * as typestyle from 'typestyle';\nimport { GLSProps, SizingProp, StylesProp, ChildPlacementProps, StyleProp } from '../common';\nimport { createGLSTag } from '../internal/utils';\n// import { horizontal, endJustified, centerJustified, center, end } from '../styles/flex';\n\n\n/** \n * Props per mode (vertical/horizontal)\n */\nexport interface ResponsiveModeProps extends\n  StyleProp,\n  StylesProp,\n  /** \n   * Defaults for `ChildPlacementProps` can be provided at the `ResponsiveProps` level \n   **/\n  ChildPlacementProps {\n}\n\n/** \n * Props for the Responsive component\n */\nexport interface ResponsiveProps extends GLSProps, SizingProp, ChildPlacementProps {\n  /** \n   * windowWidth <= breakpoint : it is vertical (mobile)\n   * else                      : it is horizontal (desktop)\n   **/\n  breakpoint?: number;\n\n  /** Vertical mode configuration */\n  vertical?: ResponsiveModeProps;\n\n  /** Horizontal mode configuration */\n  horizontal?: ResponsiveModeProps;\n}\n\n/**\n * Layout out children\n * - vertically till breakpoint\n * - horizontally above breakpoint\n */\nexport const Responsive: React.FC<ResponsiveProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    spacing,\n    sizing,\n    ...otherProps\n  } = props;\n\n  // const { verticalSpacing, horizontalSpacing, breakpoint } = useGLSDefaults();\n\n  const klass = typestyle.style(\n  //   typestyle.media({},\n  //   )\n  //   // processSizingProp(props),\n  //   // vertical,\n  //   // verticallySpaced(props.spacing == null ? verticalSpacing : props.spacing),\n  //   // verticalAlign == 'center' && centerJustified,\n  //   // verticalAlign == 'bottom' && endJustified,\n  //   // horizontalAlign == 'right' && end,\n  //   // horizontalAlign == 'center' && center,\n  );\n  return createGLSTag(otherProps, klass, 'Responsive');\n}\nResponsive.displayName = 'Responsive';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength, GLSProps } from '../common';\nimport { cssLengthToString, createGLSTag, useGLSDefaults } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: CSSLength): string;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight: CSSLength): string;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight = topAndBottom): string {\n  const vertical = cssLengthToString(topAndBottom);\n  const horizontal = cssLengthToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      $nest: {\n        '&>*': {\n          marginTop: vertical,\n          marginLeft: horizontal,\n        }\n      }\n    }\n  );\n};\n\nexport interface GridProps extends GLSProps {\n  spacing?:\n  | CSSLength\n  | [CSSLength, CSSLength]\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { spacing, ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = gridSpaced(verticalSpacing, horizontalSpacing);\n  return (\n    createGLSTag(otherProps, klass, 'Grid')\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength } from '../common';\nimport { cssLengthToString, useGLSDefaults } from '../internal/utils';\nimport { flex } from '../styles/flex';\n\nexport interface FlexSpaceProps extends React.HTMLProps<HTMLDivElement> {\n  flex?: number;\n}\n\n/** \n * Flexes into any available space \n */\nexport const FlexSpace: React.FC<FlexSpaceProps> = (props) => {\n  const { className, flex: fx, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(flex(fx))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexSpace' />\n  );\n};\nFlexSpace.displayName = 'FlexSpace';\n\n/** \n * Common interface for space props \n */\nexport interface SpaceProps extends React.HTMLProps<HTMLDivElement> {\n  space?: CSSLength;\n}\n\n/**\n * Takes a fixed amount of horizontal space\n */\nexport const HorizontalSpace: React.FC<SpaceProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { horizontalSpacing } = useGLSDefaults();\n  const width = cssLengthToString(props.space == null ? horizontalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    display: 'inline-block',\n    width: width,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='HorizontalSpace' />;\n};\nHorizontalSpace.displayName = 'HorizontalSpace';\n\n\n/**\n * Takes a fixed amount of vertical space\n */\nexport const VerticalSpace: React.FC<SpaceProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { verticalSpacing } = useGLSDefaults();\n  const height = cssLengthToString(props.space == null ? verticalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    height: height,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='VerticalSpace' />;\n};\nVerticalSpace.displayName = 'VerticalSpace';\n","/** Common */\nexport * from './common';\n\n/** Components */\nexport * from './components/containers';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/responsive';\nexport * from './components/grid';\nexport * from './components/spacers';\n"],"sourceRoot":""}