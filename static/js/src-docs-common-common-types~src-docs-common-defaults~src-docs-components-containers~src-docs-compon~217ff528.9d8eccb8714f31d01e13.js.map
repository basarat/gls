{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/styles/spacing.ts","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/responsive.tsx","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/spacers.tsx","/home/travis/build/basarat/gls/src/index.tsx"],"names":["Star","link","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","marginTop","marginRight","href","target","src","border","marginBottom","scrolling","width","height","BlueDiv","props","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","fontSize","Input","_props","buttonClass","fontFamily","cursor","padding","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","&:hover","&:active","&:focus","outlineColor","Button","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","type","DemoProfile","_ref","size","concat","GLSDefaults","React","createContext","verticalSpacing","horizontalSpacing","breakpoint","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollHidden","flexRoot","horizontal","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","vertical","wrap","-ms-flex-wrap","-webkit-flex-wrap","flexWrap","content","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","flex","arguments","length","undefined","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","center","end","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent","centerJustified","endJustified","betweenJustified","aroundJustified","cssLengthToString","value","_processPadding","box","name","defineProperty","Array","isArray","_ref2","_box$map","map","_box$map2","slicedToArray","topBottom","leftRight","_ref3","_box$map3","_box$map4","top","right","bottom","left","toReturn","boxToFullBox","_processScroll","scroll","scrollHelpers","createBaseTag","klass","comment","minHeight","maxHeight","minWidth","maxWidth","_props$styles","styles","tag","objectWithoutProperties","objectSpread","apply","toConsumableArray","data-comment","_processSizing","fx","useGLSDefaults","_useContext","useContext","_useContext$verticalS","_useContext$horizonta","_useContext$breakpoin","Flex","sizing","_props$verticalAlign","verticalAlign","_props$horizontalAlig","horizontalAlign","displayName","Content","_props$verticalAlign2","_props$horizontalAlig2","verticallySpaced","margin","&>*","&>*:last-child","horizontallySpaced","gridSpaced","topAndBottom","leftAndRight","marginLeft","Vertical","_props$spacing","spacing","Horizontal","Responsive","_useGLSDefaults","defaultVerticalSpacing","defaultHorizontalSpacing","bp","_props$breakpoint","verticalOptions","horizontalOptions","verticalScroll","horizontalScroll","verticalPadding","horizontalPadding","verticalHeight","horizontalHeight","verticalMinHeight","horizontalMinHeight","verticalMaxHeight","horizontalMaxHeight","verticalWidth","horizontalWidth","verticalMinWidth","horizontalMinWidth","verticalMaxWidth","horizontalMaxWidth","verticalSizing","horizontalSizing","verticalModeVerticalAlign","verticalModeHorizontalAlign","horizontalModeVerticalAlign","horizontalModeHorizontalAlign","Grid","justify","_spacing","FlexSpacer","react","HorizontalSpacer","space","VerticalSpacer","__webpack_require__","d","__webpack_exports__","containers_Flex","containers_Content","vertical_Vertical","horizontal_Horizontal","responsive_Responsive","grid_Grid","spacers_FlexSpacer","spacers_HorizontalSpacer","spacers_VerticalSpacer"],"mappings":"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","file":"static/js/src-docs-common-common-types~src-docs-common-defaults~src-docs-components-containers~src-docs-compon~217ff528.4691bbf9.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const Star: React.FC = () => {\n  const link = \"https://ghbtns.com/github-btn.html?user=basarat&repo=gls&type=star&count=true\"\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <a\n        style={{ marginRight: '15px' }}\n        href={link}\n        target=\"_blank\">Powered by your ⭐s</a>\n      <iframe\n        src={link}\n        style={{ border: 'none', marginBottom: '-3px' }}\n        scrolling=\"0\"\n        width=\"170px\" height=\"20px\" />\n    </div>\n  );\n}\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n\n\nexport const DemoProfile: React.FC<{ size: number }> = ({ size }) => {\n  return (\n    <img\n      style={{\n        borderRadius: '50%',\n        // Explicit size\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n      src={`http://placekitten.com/g/${size}/${size}`} />\n  );\n}\n","import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: CSSLength,\n  horizontalSpacing?: CSSLength,\n  breakpoint?: number\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24,\n  breakpoint: 480,\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type CSSLength = number | string;\n\n/** \n * Various versions of providing common shorthand properties\n */\nexport type CSSBox =\n  /** top,right,left,bottom */\n  | CSSLength\n  /** [top & bottom, left & right] */\n  | [CSSLength, CSSLength]\n  /** [top,right,bottom,left] */\n  | [CSSLength, CSSLength, CSSLength, CSSLength]\n  /** Individual */\n  | { top?: CSSLength, right?: CSSLength, bottom?: CSSLength, left?: CSSLength }\n\nexport type Sizing =\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | number /** A flex ratio */\n\n/** \n * Specifies sizing interaction\n */\nexport interface SizingProp {\n  /** \n   * Specifies `sizing` interaction\n   */\n  sizing?: Sizing,\n}\n\nexport interface SpacingProp {\n  /** Spacing between each child */\n  spacing?: CSSLength,\n}\n\nexport interface AlignmentProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\nexport interface AlignmentInVerticalProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'stretch' /** default */ | 'left' | 'center' | 'right',\n}\n\nexport interface AlignmentInHorizontalProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'stretch' /** default */ | 'top' | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface BaseProps extends\n  ScrollProp,\n  PaddingProp,\n  SizeProps,\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps {\n}\n\n/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: CSSBox,\n}\n\n\n/** \n * Add support for explicit size\n */\nexport interface SizeProps {\n  height?: CSSLength,\n  minHeight?: CSSLength,\n  maxHeight?: CSSLength,\n\n  width?: CSSLength,\n  minWidth?: CSSLength,\n  maxWidth?: CSSLength,\n}\n\nexport type Scroll =\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?: Scroll;\n}\n\n/** \n * Support for mixing in TypeStyle NestedCSSProperties (style function arguments) \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Support for React `style` property\n */\nexport interface StyleProp {\n  style?: React.CSSProperties\n}\n\n/** \n * Support for React `className` property \n */\nexport interface ClassNameProp {\n  className?: string\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps {\n  tag?:\n  {\n    /** name default: div */\n    props: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'div';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'button';\n    props?: Omit<React.HTMLProps<HTMLButtonElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'input';\n    props?: Omit<React.HTMLProps<HTMLInputElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'select';\n    props?: Omit<React.HTMLProps<HTMLSelectElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'section';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'a';\n    props?: Omit<React.HTMLProps<HTMLAnchorElement>, 'className' | 'style'>;\n  }\n  // TODO: heading paragraph\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * Cuts off the exccess content and disables the scroll bar\n */\nexport const scrollHidden: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\nexport const wrap: types.CSSProperties = {\n  '-ms-flex-wrap': 'wrap',\n  '-webkit-flex-wrap': 'wrap',\n  flexWrap: 'wrap'\n} as types.CSSProperties;\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: number = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////////////////////\n// Alignment in main axis - grid specific //\n////////////////////////////////////////////\nexport const betweenJustified = {\n  '-ms-flex-pack': 'justify',\n  '-webkit-justify-content': 'space-between',\n  justifyContent: 'space-between'\n} as types.CSSProperties;\n\nexport const aroundJustified = {\n  '-ms-flex-pack': 'distribute',\n  '-webkit-justify-content': 'space-around',\n  justifyContent: 'space-around'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { CSSLength, BaseProps, GLSDefaults, CSSBox, Scroll, Sizing } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function cssLengthToString(value: CSSLength): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Ensures all four members of box are present\n */\nfunction boxToFullBox(box: CSSBox, name: string): typestyle.types.NestedCSSProperties {\n  if (typeof box == 'number' || typeof box == 'string') {\n    const value = cssLengthToString(box);\n    return {\n      [name + 'Top']: value,\n      [name + 'Right']: value,\n      [name + 'Bottom']: value,\n      [name + 'Left']: value,\n    };\n  } else if (!Array.isArray(box)) {\n    const toReturn: any = {};\n    if (box.top != null) toReturn[name + 'Top'] = cssLengthToString(box.top);\n    if (box.right != null) toReturn[name + 'Right'] = cssLengthToString(box.right);\n    if (box.bottom != null) toReturn[name + 'Bottom'] = cssLengthToString(box.bottom);\n    if (box.left != null) toReturn[name + 'Left'] = cssLengthToString(box.left);\n    return toReturn;\n  } else if (box.length == 2) {\n    const [topBottom, leftRight] = box.map(cssLengthToString);\n    return {\n      [name + 'Top']: topBottom,\n      [name + 'Right']: leftRight,\n      [name + 'Bottom']: topBottom,\n      [name + 'Left']: leftRight,\n    };\n  } else {\n    const [top, right, bottom, left] = box.map(cssLengthToString);\n    return {\n      [name + 'Top']: top,\n      [name + 'Right']: right,\n      [name + 'Bottom']: bottom,\n      [name + 'Left']: left,\n    };\n  }\n}\n\n/** \n * Utility to unwrap the three ways a padding might be provided \n */\nexport function _processPadding(box: CSSBox)\n  : typestyle.types.NestedCSSProperties {\n  return boxToFullBox(box, 'padding');\n}\n\nexport function _processScroll(scroll: Scroll) {\n  return (\n    scroll == 'hidden' ? scrollHelpers.scrollHidden\n      : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n        : scroll == 'vertical' ? scrollHelpers.scrollVertical\n          : scrollHelpers.scrollBoth\n  );\n}\n\n/** \n * Creates the React tag\n * - Does any processing of `BaseProps` if required\n * - Then creates the appropriate tag\n */\nexport function createBaseTag<T extends BaseProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debuggin */\n  comment: string,\n) {\n  const {\n    className,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    scroll,\n    styles = [],\n    tag, ...otherProps } = props;\n\n  return React.createElement(\n    (tag != null && ('name' in tag) && tag.name != null) ? tag.name : 'div',\n    {\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && _processScroll(scroll),\n          /** Padding */\n          padding != null && _processPadding(padding),\n          /** Size props */\n          height != null && { height: cssLengthToString(height) },\n          minHeight != null && { minHeight: cssLengthToString(minHeight) },\n          maxHeight != null && { maxHeight: cssLengthToString(maxHeight) },\n          width != null && { width: cssLengthToString(width) },\n          minWidth != null && { minWidth: cssLengthToString(minWidth) },\n          maxWidth != null && { maxWidth: cssLengthToString(maxWidth) },\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n      ...((tag != null && tag.props != null) ? tag.props : {}),\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function _processSizing(fx: Sizing = 'content'): typestyle.types.CSSProperties {\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const {\n    verticalSpacing = 24,\n    horizontalSpacing = 24,\n    breakpoint = 480\n  } = useContext(GLSDefaults);\n  return {\n    verticalSpacing,\n    horizontalSpacing,\n    breakpoint,\n  }\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, AlignmentProps } from '../common';\nimport { createBaseTag } from '../internal/utils';\nimport { content, flex, centerJustified, endJustified, center, end, vertical, start, startJustified } from '../styles/flex';\n\nexport interface FlexProps extends BaseProps, AlignmentProps {\n  sizing?: number;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const {\n    sizing,\n\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    flex(sizing),\n    vertical,\n    verticalAlign == 'top' && startJustified,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Flex');\n};\nFlex.displayName = 'Flex';\n\nexport interface ContentProps extends BaseProps, AlignmentProps {\n}\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<ContentProps> = (props) => {\n  const {\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    content,\n    vertical,\n    verticalAlign == 'top' && startJustified,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Content');\n};\nContent.displayName = 'Content';\n","import * as typestyle from 'typestyle';\nimport { CSSLength } from \"../common\";\nimport { cssLengthToString } from '../internal/utils';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as typestyle.types.NestedCSSProperties\n  );\n};\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as typestyle.types.CSSProperties\n  );\n};\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight = topAndBottom): typestyle.types.NestedCSSProperties {\n  const verticalSpacing = cssLengthToString(topAndBottom);\n  const horizontalSpacing = cssLengthToString(leftAndRight);\n  return {\n    marginTop: '-' + verticalSpacing + ' !important',\n    marginLeft: '-' + horizontalSpacing + ' !important',\n    $nest: {\n      '&>*': {\n        marginTop: verticalSpacing + ' !important',\n        marginLeft: horizontalSpacing + ' !important',\n      }\n    }\n  };\n};\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, AlignmentInVerticalProps } from '../common';\nimport { createBaseTag, _processSizing, useGLSDefaults } from '../internal/utils';\nimport { vertical, centerJustified, endJustified, end, center, start } from '../styles/flex';\nimport { verticallySpaced } from '../styles/spacing';\n\nexport interface VerticalProps extends BaseProps, SizingProp, SpacingProp, AlignmentInVerticalProps {\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const { verticalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n\n    spacing = verticalSpacing,\n    verticalAlign,\n    horizontalAlign,\n\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    vertical,\n    spacing !== 0 && verticallySpaced(spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Vertical');\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, AlignmentInHorizontalProps } from '../common';\nimport { createBaseTag, _processSizing, useGLSDefaults } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end, start } from '../styles/flex';\nimport { horizontallySpaced } from '../styles/spacing';\n\nexport interface HorizontalProps extends BaseProps, SizingProp, SpacingProp, AlignmentInHorizontalProps {\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const { horizontalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n\n    spacing = horizontalSpacing,\n    verticalAlign,\n    horizontalAlign,\n\n    ...otherProps } = props;\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    horizontal,\n    spacing !== 0 && horizontallySpaced(spacing),\n    horizontalAlign == 'center' && centerJustified,\n    horizontalAlign == 'right' && endJustified,\n    verticalAlign == 'top' && start,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Horizontal');\n}\nHorizontal.displayName = 'Horizontal';\n","import * as typestyle from 'typestyle';\nimport { SizingProp, StylesProp, SpacingProp, AlignmentInVerticalProps, AlignmentInHorizontalProps, PaddingProp, SizeProps, ScrollProp, StyleProp, ClassNameProp, TagProps } from '../common';\nimport { createBaseTag, useGLSDefaults, _processSizing, _processPadding, cssLengthToString, _processScroll } from '../internal/utils';\nimport { vertical, horizontal, centerJustified, endJustified, end, center, start } from '../styles/flex';\nimport { verticallySpaced, horizontallySpaced } from '../styles/spacing';\n\n/** \n * Props that can be specified at\n * - root of `Responsive` \n * - and overridden for `vertical`/`horizontal` modes\n */\nexport interface ResponsiveOverridableProps extends\n  ScrollProp,\n  PaddingProp,\n  SizeProps,\n  SizingProp,\n  SpacingProp {\n}\n\nexport interface BreakpointProp {\n  /** \n   * windowWidth <= breakpoint : it is vertical (mobile)\n   * else                      : it is horizontal (desktop)\n   **/\n  breakpoint?: number;\n}\n\n/** \n * Props for Vertical mode\n */\nexport interface ResponsiveVerticalModeProps extends\n  AlignmentInVerticalProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\n/** \n * Props for Horizontal mode\n */\nexport interface ResponsiveHorizontalModeProps extends\n  AlignmentInHorizontalProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\nexport interface ResponsiveModesProps {\n  /** Vertical mode configuration */\n  vertical?: ResponsiveVerticalModeProps;\n  /** Horizontal mode configuration */\n  horizontal?: ResponsiveHorizontalModeProps;\n}\n\n/** \n * Props that can only be specified at the root of the `Responsive` \n */\nexport interface ResponsiveRootOnlyProps extends\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps,\n  BreakpointProp {\n}\n\n/** \n * Props for the Responsive component\n */\nexport interface ResponsiveProps extends\n  ResponsiveRootOnlyProps,\n  ResponsiveModesProps,\n  ResponsiveOverridableProps {\n}\n\n/**\n * Layout out children\n * - vertically till breakpoint\n * - horizontally above breakpoint\n */\nexport const Responsive: React.FC<ResponsiveProps> = (props) => {\n  const {\n    verticalSpacing: defaultVerticalSpacing,\n    horizontalSpacing: defaultHorizontalSpacing,\n    breakpoint: bp\n  } = useGLSDefaults();\n\n  const {\n    breakpoint = bp,\n    vertical: verticalOptions,\n    horizontal: horizontalOptions,\n\n    /** Overridable */\n    scroll,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    sizing,\n    spacing,\n\n    ...otherProps\n  } = props;\n\n  /** Determine scroll */\n  const verticalScroll = (verticalOptions && verticalOptions.scroll != null) ? verticalOptions.scroll\n    : scroll;\n  const horizontalScroll = (horizontalOptions && horizontalOptions.scroll != null) ? horizontalOptions.scroll\n    : scroll;\n\n  /** Determine paddings */\n  const verticalPadding = (verticalOptions && verticalOptions.padding != null) ? verticalOptions.padding\n    : padding;\n  const horizontalPadding = (horizontalOptions && horizontalOptions.padding != null) ? horizontalOptions.padding\n    : padding;\n\n  /** Determine size */\n  const verticalHeight = (verticalOptions && verticalOptions.height != null) ? verticalOptions.height\n    : height;\n  const horizontalHeight = (horizontalOptions && horizontalOptions.height != null) ? horizontalOptions.height\n    : height;\n  const verticalMinHeight = (verticalOptions && verticalOptions.minHeight != null) ? verticalOptions.minHeight\n    : minHeight;\n  const horizontalMinHeight = (horizontalOptions && horizontalOptions.minHeight != null) ? horizontalOptions.minHeight\n    : minHeight;\n  const verticalMaxHeight = (verticalOptions && verticalOptions.maxHeight != null) ? verticalOptions.maxHeight\n    : maxHeight;\n  const horizontalMaxHeight = (horizontalOptions && horizontalOptions.maxHeight != null) ? horizontalOptions.maxHeight\n    : maxHeight;\n  const verticalWidth = (verticalOptions && verticalOptions.width != null) ? verticalOptions.width\n    : width;\n  const horizontalWidth = (horizontalOptions && horizontalOptions.width != null) ? horizontalOptions.width\n    : width;\n  const verticalMinWidth = (verticalOptions && verticalOptions.minWidth != null) ? verticalOptions.minWidth\n    : minWidth;\n  const horizontalMinWidth = (horizontalOptions && horizontalOptions.minWidth != null) ? horizontalOptions.minWidth\n    : minWidth;\n  const verticalMaxWidth = (verticalOptions && verticalOptions.maxWidth != null) ? verticalOptions.maxWidth\n    : maxWidth;\n  const horizontalMaxWidth = (horizontalOptions && horizontalOptions.maxWidth != null) ? horizontalOptions.maxWidth\n    : maxWidth;\n\n  /** Determine sizings */\n  const verticalSizing = (verticalOptions && verticalOptions.sizing != null)\n    ? verticalOptions.sizing\n    : sizing;\n  const horizontalSizing = (horizontalOptions && horizontalOptions.sizing != null)\n    ? horizontalOptions.sizing\n    : sizing;\n\n  /** Determine spacings  */\n  const verticalSpacing = (verticalOptions && verticalOptions.spacing != null) ? verticalOptions.spacing\n    : spacing != null ? spacing\n      : defaultVerticalSpacing;\n  const horizontalSpacing = (horizontalOptions && horizontalOptions.spacing != null) ? horizontalOptions.spacing\n    : spacing != null ? spacing\n      : defaultHorizontalSpacing;\n\n  /** Determine alignments */\n  const verticalModeVerticalAlign =\n    (verticalOptions && verticalOptions.verticalAlign != null)\n      ? verticalOptions.verticalAlign\n      : null;\n  const verticalModeHorizontalAlign =\n    (verticalOptions && verticalOptions.horizontalAlign != null)\n      ? verticalOptions.horizontalAlign\n      : null;\n  const horizontalModeVerticalAlign =\n    (horizontalOptions && horizontalOptions.verticalAlign != null)\n      ? horizontalOptions.verticalAlign\n      : null;\n  const horizontalModeHorizontalAlign =\n    (horizontalOptions && horizontalOptions.horizontalAlign != null)\n      ? horizontalOptions.horizontalAlign\n      : null;\n\n  const klass = typestyle.style(\n    /** Till breakpoint: Vertical */\n    typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      _processSizing(verticalSizing),\n      verticalPadding != null && _processPadding(verticalPadding),\n      vertical,\n      verticalSpacing !== 0 && verticallySpaced(verticalSpacing),\n      verticalModeVerticalAlign == 'center' && centerJustified,\n      verticalModeVerticalAlign == 'bottom' && endJustified,\n      verticalModeHorizontalAlign == 'left' && start,\n      verticalModeHorizontalAlign == 'right' && end,\n      verticalModeHorizontalAlign == 'center' && center,\n      verticalHeight != null && { height: cssLengthToString(verticalHeight) },\n      verticalMinHeight != null && { minHeight: cssLengthToString(verticalMinHeight) },\n      verticalMaxHeight != null && { maxHeight: cssLengthToString(verticalMaxHeight) },\n      verticalWidth != null && { width: cssLengthToString(verticalWidth) },\n      verticalMinWidth != null && { minWidth: cssLengthToString(verticalMinWidth) },\n      verticalMaxWidth != null && { maxWidth: cssLengthToString(verticalMaxWidth) },\n      verticalScroll != null && _processScroll(verticalScroll),\n    ),\n    verticalOptions && verticalOptions.styles && typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      ...verticalOptions.styles),\n\n    /** Bigger than breakpoint: Horizontal */\n    typestyle.media({ minWidth: breakpoint + 1 },\n      _processSizing(horizontalSizing),\n      horizontalPadding != null && _processPadding(horizontalPadding),\n      horizontal,\n      horizontalSpacing !== 0 && horizontallySpaced(horizontalSpacing),\n      horizontalModeHorizontalAlign == 'right' && endJustified,\n      horizontalModeHorizontalAlign == 'center' && centerJustified,\n      horizontalModeVerticalAlign == 'top' && start,\n      horizontalModeVerticalAlign == 'center' && center,\n      horizontalModeVerticalAlign == 'bottom' && end,\n      horizontalHeight != null && { height: cssLengthToString(horizontalHeight) },\n      horizontalMinHeight != null && { minHeight: cssLengthToString(horizontalMinHeight) },\n      horizontalMaxHeight != null && { maxHeight: cssLengthToString(horizontalMaxHeight) },\n      horizontalWidth != null && { width: cssLengthToString(horizontalWidth) },\n      horizontalMinWidth != null && { minWidth: cssLengthToString(horizontalMinWidth) },\n      horizontalMaxWidth != null && { maxWidth: cssLengthToString(horizontalMaxWidth) },\n      horizontalScroll != null && _processScroll(horizontalScroll),\n    ),\n    horizontalOptions && horizontalOptions.styles && typestyle.media({ minWidth: breakpoint + 1 },\n      ...horizontalOptions.styles),\n  );\n  return createBaseTag(otherProps, klass, 'Responsive');\n}\nResponsive.displayName = 'Responsive';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength, BaseProps, SizingProp } from '../common';\nimport { createBaseTag, useGLSDefaults, _processSizing } from '../internal/utils';\nimport { horizontal, wrap, endJustified, centerJustified, betweenJustified, aroundJustified } from '../styles/flex';\nimport { gridSpaced } from '../styles/spacing';\n\nexport interface GridProps extends BaseProps, SizingProp {\n  /** \n   * Minimum spacing between children\n   */\n  spacing?:\n  | CSSLength\n  | [/** Vertical */ CSSLength, /** Horizontal */ CSSLength]\n\n  /** \n   * Controls how the extra space around the children is handled\n   */\n  justify?:\n  /** Controls by content */\n  | 'left' /** default */\n  | 'center'\n  | 'right'\n  /** Controls by space */\n  | 'space-between'\n  | 'space-around'\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const {\n    sizing,\n    spacing,\n    justify,\n    ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    horizontal, wrap,\n    gridSpaced(verticalSpacing, horizontalSpacing),\n    justify == 'center' && centerJustified,\n    justify == 'right' && endJustified,\n    justify == 'space-between' && betweenJustified,\n    justify == 'space-around' && aroundJustified,\n  );\n  return (\n    createBaseTag(otherProps, klass, 'Grid')\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength } from '../common';\nimport { cssLengthToString, useGLSDefaults } from '../internal/utils';\nimport { flex } from '../styles/flex';\n\nexport interface FlexSpacerProps extends React.HTMLProps<HTMLDivElement> {\n  sizing?: number;\n}\n\n/** \n * Flexes into any available space \n */\nexport const FlexSpacer: React.FC<FlexSpacerProps> = (props) => {\n  const { className, sizing, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(flex(sizing))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexSpacer' />\n  );\n};\nFlexSpacer.displayName = 'FlexSpacer';\n\n/** \n * Common interface for space props \n */\nexport interface SpacerProps extends React.HTMLProps<HTMLDivElement> {\n  space?: CSSLength;\n}\n\n/**\n * Takes a fixed amount of horizontal space\n */\nexport const HorizontalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { horizontalSpacing } = useGLSDefaults();\n  const width = cssLengthToString(props.space == null ? horizontalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    display: 'inline-block',\n    width: width,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='HorizontalSpacer' />;\n};\nHorizontalSpacer.displayName = 'HorizontalSpacer';\n\n\n/**\n * Takes a fixed amount of vertical space\n */\nexport const VerticalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { verticalSpacing } = useGLSDefaults();\n  const height = cssLengthToString(props.space == null ? verticalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    height: height,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='VerticalSpacer' />;\n};\nVerticalSpacer.displayName = 'VerticalSpacer';\n","/** Common */\nexport * from './common';\n\n/** Components */\nexport * from './components/containers';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/responsive';\nexport * from './components/grid';\nexport * from './components/spacers';\n"],"sourceRoot":""}