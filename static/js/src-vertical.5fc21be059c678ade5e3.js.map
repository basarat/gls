{"version":3,"sources":["/home/travis/build/basarat/gls/src/components/common.ts","/home/travis/build/basarat/gls/src/internal/utils.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx","/home/travis/build/basarat/gls/src/demos.tsx","/home/travis/build/basarat/gls/src/vertical.mdx"],"names":["Spacing","vertical","horizontal","grid","boxUnitToString","value","toString","gridSpaced","topAndBottom","leftAndRight","arguments","length","undefined","typestyle","marginTop","marginLeft","&>*","Grid","props","className","otherProps","Object","objectWithoutProperties","spacing","verticalSpacing","horizontalSpacing","klass","classes","react","assign","data-comment","displayName","Vertical","horizontalAlign","verticalAlign","csstips","Horizontal","FlexContainer","ContentContainer","__webpack_require__","d","__webpack_exports__","vertical_Vertical","horizontal_Horizontal","BlueDiv","react_default","a","createElement","style","backgroundColor","children","PinkDiv","layoutProps","MDXLayout","MDXContent","_ref","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","demos","src","demos_BlueDiv","isMDXComponent"],"mappings":"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","file":"static/js/src-vertical.4436dd52.js","sourcesContent":["/** \n * The default spacing used by the layout components \n * You can customize it e.g. \n * ```ts\n * import { Spacing } from 'gls';\n * Spacing.vertical = 30;\n * ```\n */\nexport const Spacing = {\n  vertical: 24,\n  horizontal: 24,\n  grid: {\n    vertical: 24,\n    horizontal: 24,\n  }\n}\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type BoxUnit = number | string;\n","import { BoxUnit } from \"../components/common\";\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function boxUnitToString(value: BoxUnit): string {\n  if (typeof value === 'number') {\n    return value.toString() + 'px';\n  }\n  else {\n    return value;\n  }\n}","import * as typestyle from 'typestyle';\nimport { types, classes } from 'typestyle';\nimport * as React from 'react';\nimport { Spacing, BoxUnit } from './common';\nimport { boxUnitToString } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight = topAndBottom): string {\n  const vertical = boxUnitToString(topAndBottom);\n  const horizontal = boxUnitToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      '&>*': {\n        marginTop: vertical,\n        marginLeft: horizontal,\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport type GridProps = React.HTMLProps<HTMLDivElement> & (\n  | {\n    spacing?: BoxUnit\n  }\n  | {\n    verticalSpacing: BoxUnit\n    horizontalSpacing: BoxUnit\n  }\n)\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { className, ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let vertical!: BoxUnit;\n  let horizontal!: BoxUnit;\n  if ('spacing' in props) {\n    delete (otherProps as any).spacing;\n    horizontal = props.spacing != null ? props.spacing : Spacing.grid.horizontal;\n    vertical = horizontal;\n  } else if ('verticalSpacing' in props) {\n    delete (otherProps as any).verticalSpacing;\n    delete (otherProps as any).horizontalSpacing;\n    horizontal = props.horizontalSpacing != null ? props.horizontalSpacing : Spacing.grid.horizontal;\n    vertical = props.verticalSpacing != null ? props.verticalSpacing : Spacing.grid.vertical;\n  }\n\n  const klass = classes(\n    className,\n    gridSpaced(vertical,horizontal),\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Grid' />\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Vertical \n///////////////////////////////////\n\nexport interface VerticalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n}\n\n/** \n * Layout out children with a vertical margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(\n      csstips.content,\n      csstips.vertical,\n      csstips.verticallySpaced(props.spacing == null ? Spacing.vertical : props.spacing),\n      verticalAlign == 'center' && csstips.centerJustified,\n      verticalAlign == 'bottom' && csstips.endJustified,\n      horizontalAlign == 'right' && csstips.end,\n      horizontalAlign == 'center' && csstips.center,\n    )\n  );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Vertical' />\n  );\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Horizontal\n///////////////////////////////////\n\nexport interface HorizontalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps } = props;\n\n  const klass =\n    typestyle.classes(\n      className,\n      typestyle.style(\n        csstips.content,\n        csstips.horizontal,\n        csstips.horizontallySpaced(props.spacing == null ? Spacing.horizontal : props.spacing),\n        horizontalAlign == 'right' && csstips.endJustified,\n        horizontalAlign == 'center' && csstips.centerJustified,\n        verticalAlign == 'center' && csstips.center,\n        verticalAlign == 'bottom' && csstips.end,\n      )\n    );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Horizontal' />\n  );\n}\nHorizontal.displayName = 'Horizontal';","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const FlexContainer: React.FC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.flex)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexContainer' />\n  );\n};\nFlexContainer.displayName = 'FlexContainer';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const ContentContainer: React.FC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.content)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='ContentContainer' />\n  );\n};\nContentContainer.displayName = 'ContentContainer';\n","export * from './components/common';\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n","/** \n * Demo components for docs \n */\n\nimport React from \"react\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Vertical } from '.'; \nimport * as demos from './demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h1>\n    <p>{`Lays out children in a vertically spaced layout.`}</p>\n    <Playground __position={0} __code={'<Vertical>\\n  <demos.BlueDiv>Hello</demos.BlueDiv>\\n  <div>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Vertical,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.BlueDiv>Hello</demos.BlueDiv>\n    <div>World</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}