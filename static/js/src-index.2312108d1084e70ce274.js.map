{"version":3,"sources":["/home/travis/build/basarat/gls/src/index.mdx","/home/travis/build/basarat/gls/src/components/common.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx"],"names":["name","Flex","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","layoutProps","MDXLayout","MDXContent","_ref","components","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Horizontal","style","backgroundColor","marginBottom","position","bottom","color","textAlign","___WEBPACK_IMPORTED_MODULE_4__","fontSize","padding","width","isMDXComponent","Spacing","vertical","horizontal","grid","Grid","className","otherProps","objectWithoutProperties","klass","classes","typestyle","csstips","spacing","react","data-comment","displayName","horizontalAlign","verticalAlign","FlexContainer","ContentContainer","__webpack_require__","d","__webpack_exports__","vertical_Vertical","horizontal_Horizontal"],"mappings":"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","file":"static/js/src-index.99107f57.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal } from '.'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst Flex = makeShortcode(\"Flex\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"general-layout-system\"\n    }}>{`General Layout System`}</h1>\n    <p><inlineCode parentName=\"p\">{`gls`}</inlineCode>{` is a general purpose maintainable and simple layout componets for react 🌹. `}</p>\n    <h1 {...{\n      \"id\": \"css-concepts\"\n    }}>{`CSS concepts`}</h1>\n    <p>{`There are a few key CSS concepts (not specific to gls) to maintainable layout in the world of components, `}<em parentName=\"p\">{`external airspace`}</em>{`, `}<em parentName=\"p\">{`flexible expansion`}</em>{` and `}<em parentName=\"p\">{`internal airspace`}</em>{`. Lets tackle them one by one: `}</p>\n    <h2 {...{\n      \"id\": \"external-airspace\"\n    }}>{`External Airspace`}</h2>\n    <p>{`A fundamental rule (broken quite commonly in the wild sadly) is that a component only renders stuff in its airspace. That is, it does not bleed out resulting in conflicts with its neighbours. `}</p>\n    <p>{`Consider a simple'ol `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{`. We'll give it a background `}<inlineCode parentName=\"p\">{`lightskyblue`}</inlineCode>{` to denote its airspace. It can render whatever it wants in its airspace: `}</p>\n    <Playground __position={0} __code={'<div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <div style={{\n        backgroundColor: 'lightskyblue'\n      }}>Hello</div>\n    </Playground>\n    <p>{`Now try and layout two of these divs together, a naive way would be to add margins:  `}</p>\n    <Playground __position={1} __code={'<div style={{ backgroundColor: \\'lightskyblue\\', marginBottom: \\'24px\\' }}>\\n  Hello\\n</div>\\n<div style={{ backgroundColor: \\'lightpink\\', marginBottom: \\'24px\\' }}>\\n  World\\n</div>\\n<div style={{ backgroundColor: \\'darkorange\\' }}>Spacing</div>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <div style={{\n        backgroundColor: \"lightskyblue\",\n        marginBottom: '24px'\n      }}>Hello</div>\n  <div style={{\n        backgroundColor: \"lightpink\",\n        marginBottom: '24px'\n      }}>World</div>\n  <div style={{\n        backgroundColor: \"darkorange\"\n      }}>Spacing</div>\n    </Playground>\n    <p>{`A fundamental issue with `}<inlineCode parentName=\"p\">{`<div style={{marginBottom: '24px'}}>Hello</div>`}</inlineCode>{` component, is that its not useable in isolation. If we render it alone, note that its leaking out `}<em parentName=\"p\">{`assuming`}</em>{` its going to be used by something that's going to add another sibling after it: `}</p>\n    <Playground __position={2} __code={'<div style={{ backgroundColor: \\'lightskyblue\\', marginBottom: \\'24px\\' }}>\\n  Hello\\n</div>\\n<i\\n  style={{\\n    position: \\'absolute\\',\\n    bottom: \\'0px\\',\\n    color: \\'lightgrey\\',\\n    textAlign: \\'center\\',\\n  }}\\n>\\n  Notice this excess space at the bottom\\n</i>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <div style={{\n        backgroundColor: \"lightskyblue\",\n        marginBottom: '24px'\n      }}>Hello</div>\n  <i style={{\n        position: 'absolute',\n        bottom: '0px',\n        color: 'lightgrey',\n        textAlign: 'center'\n      }}>Notice this excess space at the bottom</i>\n    </Playground>\n    <p>{`So instead of putting the responsiblity of `}<em parentName=\"p\">{`space seperation`}</em>{` on the component, it can be better managed by the container, e.g. the `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` component provided by gls can drive the margins of its children to create vertical spacing between them.`}</p>\n    <Playground __position={3} __code={'<Vertical>\\n  <div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>World</div>\\n  <div style={{ backgroundColor: \\'darkorange\\' }}>Spacing</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: \"lightskyblue\"\n        }}>Hello</div>\n    <div style={{\n          backgroundColor: \"lightpink\"\n        }}>World</div>\n    <div style={{\n          backgroundColor: \"darkorange\"\n        }}>Spacing</div>\n  </Vertical>\n    </Playground>\n    <p>{`And no leaking margins occur with lesser children:`}</p>\n    <Playground __position={4} __code={'<Vertical>\\n  <div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: \"lightskyblue\"\n        }}>Hello</div>\n    <div style={{\n          backgroundColor: \"lightpink\"\n        }}>World</div>\n  </Vertical>\n    </Playground>\n    <p>{`Furthermore the `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` component itself doesn't bleed into external airspace, allowing you to compose two `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`s seamlessly: `}</p>\n    <Playground __position={5} __code={'<Vertical>\\n  <Vertical>\\n    <div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>World</div>\\n  </Vertical>\\n  <Vertical>\\n    <div style={{ backgroundColor: \\'lightskyblue\\' }}>Second Hello</div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>Second World</div>\\n  </Vertical>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <Vertical mdxType=\"Vertical\">\n      <div style={{\n            backgroundColor: \"lightskyblue\"\n          }}>Hello</div>\n      <div style={{\n            backgroundColor: \"lightpink\"\n          }}>World</div>\n    </Vertical>\n    <Vertical mdxType=\"Vertical\">\n      <div style={{\n            backgroundColor: \"lightskyblue\"\n          }}>Second Hello</div>\n      <div style={{\n            backgroundColor: \"lightpink\"\n          }}>Second World</div>\n    </Vertical>\n  </Vertical>\n    </Playground>\n    <p>{`Because `}<inlineCode parentName=\"p\">{`margin`}</inlineCode>{`s fundamentally result in airspace violation, do not use margins at the root of your components.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`RULE 1: Do not use `}<inlineCode parentName=\"p\">{`margin`}</inlineCode>{` at the root of your component`}</p>\n    </blockquote>\n    <p>{`This rule is also what makes it possible for parents to space children with margins. We also provide a `}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` container to layout children horizontally: `}</p>\n    <Playground __position={6} __code={'<Horizontal>\\n  <div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>World</div>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <div style={{\n          backgroundColor: \"lightskyblue\"\n        }}>Hello</div>\n    <div style={{\n          backgroundColor: \"lightpink\"\n        }}>World</div>\n  </Horizontal>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Component design tip: never use margins at the root of your component. Internally it is fine to move a `}<strong parentName=\"p\">{`static number`}</strong>{` children around with it. If you have `}<strong parentName=\"p\">{`dynamic number`}</strong>{` of children, use our `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` etc. `}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"internal-airspace\"\n    }}>{`Internal Airspace`}</h2>\n    <p>{`We've already talked about how child css selectors can be used to manage the space between children using margins. One final thing worth mentioning is that you can use `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` to seperate the children from the parent. We call these roots as `}<em parentName=\"p\">{`islands`}</em>{` (something with a background). A common island would be `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`. Another example of an `}<em parentName=\"p\">{`island`}</em>{` is a button, which normally has a background. We use padding to seperate its content from its border (internal airspace management):`}</p>\n    <Playground __position={7} __code={'<button\\n  style={{\\n    backgroundColor: \\'lightskyblue\\',\\n    fontSize: \\'24px\\',\\n    padding: \\'24px\\',\\n  }}\\n>\\n  Hello world\\n</button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} style={{\n      textAlign: 'center'\n    }} mdxType=\"Playground\">\n  <button style={{\n        backgroundColor: 'lightskyblue',\n        fontSize: '24px',\n        padding: '24px'\n      }}>\n    Hello world\n  </button>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`RULE 2: Use `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` explicitly for internal `}<em parentName=\"p\">{`border`}</em>{` airspace`}</p>\n    </blockquote>\n    <p>{`Similarly `}<em parentName=\"p\">{`islands`}</em>{` exist commonly in root level content containers (close children of `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`). For example we are putting a `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` on the root `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` below to seperate it from its children (sub `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` layouts):`}</p>\n    <Playground __position={8} __code={'{/** Island */}\\n<Vertical style={{ padding: \\'24px\\' }}>\\n  <Vertical>\\n    <div style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>World</div>\\n  </Vertical>\\n  <Horizontal>\\n    <Flex style={{ backgroundColor: \\'lightskyblue\\' }}>Second Hello</Flex>\\n    <Flex style={{ backgroundColor: \\'lightpink\\' }}>Second World</Flex>\\n  </Horizontal>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  {\n        /** Island */\n      }\n  <Vertical style={{\n        padding: '24px'\n      }} mdxType=\"Vertical\">\n    <Vertical mdxType=\"Vertical\">\n      <div style={{\n            backgroundColor: \"lightskyblue\"\n          }}>Hello</div>\n      <div style={{\n            backgroundColor: \"lightpink\"\n          }}>World</div>\n    </Vertical>\n    <Horizontal mdxType=\"Horizontal\">\n      <Flex style={{\n            backgroundColor: \"lightskyblue\"\n          }} mdxType=\"Flex\">Second Hello</Flex>\n      <Flex style={{\n            backgroundColor: \"lightpink\"\n          }} mdxType=\"Flex\">Second World</Flex>\n    </Horizontal>\n  </Vertical>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Component design tip: `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` can be used in any components that have an explict border (e.g buttons, user profile cards) as well as layout containers that might have implicit borders, due to color seperation (e.g. form containers).`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"flexible-expansion\"\n    }}>{`Flexible expansion`}</h2>\n    <p>{`A common horizontal layout paradigm is a 12 column layout, used by various frameworks, most notably bootstrap and its inspired derivatives. It worked great back when UI's were not as dynamic as they are today. `}</p>\n    <p>{`Let's simplify 12 down and think of a simple `}<inlineCode parentName=\"p\">{`4`}</inlineCode>{` column layout. If you have an input and two buttons, you might do a `}<inlineCode parentName=\"p\">{`50%,25%,25%`}</inlineCode>{` split, commonly named with class names like `}<inlineCode parentName=\"p\">{`take-2,take-1,take-1`}</inlineCode>{`. Here is an example: `}</p>\n    <Playground __position={9} __code={'<Horizontal>\\n  <input style={{ width: \\'50%\\' }} />\\n  <button style={{ width: \\'25%\\' }}>Action Foo</button>\\n  <button style={{ width: \\'25%\\' }}>Action Bar</button>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <input style={{\n          width: '50%'\n        }} />\n    <button style={{\n          width: '25%'\n        }}>Action Foo</button>\n    <button style={{\n          width: '25%'\n        }}>Action Bar</button>\n  </Horizontal>\n    </Playground>\n    <ul>\n      <li parentName=\"ul\">{`TODO: Talk about column grid driven layouts, show their issue and then talk about flex allowing for dynamic displays. `}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`RULE 3: Don't add explicit styles / classes that need to toggle based on external factors (like neighbours).`}</p>\n    </blockquote>\n    <h1 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h1>\n    <p>{`All our components are just `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` elements with atom CSS generated by typestyle. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`They support `}<em parentName=\"li\">{`all`}</em>{` the properties supported by a `}<inlineCode parentName=\"li\">{`div`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`They take some additional prxzoperties as needed e.g. `}<inlineCode parentName=\"li\">{`spacing`}</inlineCode>{` is a common one for layout parents.`}</li>\n    </ul>\n    <p>{`You can now jump to individual docs for the components (like `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` etc.) using the sidebar 👍🏻.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  ","/** \n * The default spacing used by the layout components \n * You can customize it e.g. \n * ```ts\n * import { Spacing } from 'gls';\n * Spacing.vertical = 30;\n * ```\n */\nexport const Spacing = {\n  vertical: 24,\n  horizontal: 24,\n  grid: {\n    vertical: 24,\n    horizontal: 24,\n  }\n}\n","import * as typestyle from 'typestyle';\nimport { types, classes } from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// GRID \n///////////////////////////////////\n\nexport interface GridProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.SFC<GridProps> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = classes(\n    className,\n    typestyle.style(csstips.gridSpaced(\n      props.spacing == null ? Spacing.grid.vertical : props.spacing\n    )),\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Grid' />\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Vertical \n///////////////////////////////////\n\nexport interface VerticalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n}\n\n/** \n * Layout out children with a vertical margin between them\n */\nexport const Vertical: React.SFC<VerticalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(\n      csstips.content,\n      csstips.vertical,\n      csstips.verticallySpaced(props.spacing == null ? Spacing.vertical : props.spacing),\n      verticalAlign == 'center' && csstips.centerJustified,\n      verticalAlign == 'bottom' && csstips.endJustified,\n      horizontalAlign == 'right' && csstips.end,\n      horizontalAlign == 'center' && csstips.center,\n    )\n  );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Vertical' />\n  );\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Horizontal\n///////////////////////////////////\n\nexport interface HorizontalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\nexport const Horizontal: React.SFC<HorizontalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps } = props;\n\n  const klass =\n    typestyle.classes(\n      className,\n      typestyle.style(\n        csstips.content,\n        csstips.horizontal,\n        csstips.horizontallySpaced(props.spacing == null ? Spacing.horizontal : props.spacing),\n        horizontalAlign == 'right' && csstips.endJustified,\n        horizontalAlign == 'center' && csstips.centerJustified,\n        verticalAlign == 'center' && csstips.center,\n        verticalAlign == 'bottom' && csstips.end,\n      )\n    );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Horizontal' />\n  );\n}\nHorizontal.displayName = 'Horizontal';","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const FlexContainer: React.SFC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.flex)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexContainer' />\n  );\n};\nFlexContainer.displayName = 'FlexContainer';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const ContentContainer: React.SFC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.content)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='ContentContainer' />\n  );\n};\nContentContainer.displayName = 'ContentContainer';\n","export * from './components/common';\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n"],"sourceRoot":""}