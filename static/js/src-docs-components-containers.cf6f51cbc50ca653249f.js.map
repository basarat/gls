{"version":3,"sources":["/home/travis/build/basarat/gls/src/docs/components/containers.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Vertical","Horizontal","Stretch","Content","Box","demos","height","style","backgroundColor","spacing","sizing","wrapInSpan","verticalAlign","horizontalAlign","width","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-containers.17a2c4d6.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal, Stretch, Content, Box } from '../..'; \nimport * as demos from '../../demos'; \n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"containers\"\n    }}>{`Containers`}</h1>\n    <p>{`We have two general purpose `}<em parentName=\"p\">{`single child`}</em>{` containers `}<inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{`. The ideas of `}<em parentName=\"p\">{`stretch`}</em>{` and `}<em parentName=\"p\">{`content`}</em>{` are explained in the `}<a parentName=\"p\" {...{\n        \"href\": \"../principle-sizing/\"\n      }}>{`sizing principle`}</a>{`. If you have more than one child item, you probably want to use something like a `}<a parentName=\"p\" {...{\n        \"href\": \"../vertical/\"\n      }}>{`Vertical`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"../horizontal/\"\n      }}>{`Horizontal`}</a>{`.`}</p>\n    <p>{`Here are few reasons why you should use these containers:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Allow you to work with the stretch / content sizing principle.`}</li>\n      <li parentName=\"ul\">{`Allow you to control their child alignment.`}</li>\n      <li parentName=\"ul\">{`They support `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`BaseProps`}</a>{`.`}</li>\n    </ul>\n    <p>{`These containers behave the same as a `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`horizontalAlign='left'`}</inlineCode>{` (instead of the default `}<inlineCode parentName=\"p\">{`stretch`}</inlineCode>{`) and `}<inlineCode parentName=\"p\">{`spacing={0}`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"stretch\"\n    }}>{`Stretch`}</h2>\n    <p>{`Stretch into the parent container.`}</p>\n    <p>{`In the example below, we have an explicit sized `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`lightskyblue`}</inlineCode>{`) with an inner `}<inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{` (background `}<inlineCode parentName=\"p\">{`darkorange`}</inlineCode>{`). The inner `}<inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{` keeps its size to match that of the outer container (observed below as you don't see the background of the parent-lightskyblue as it is filled in by the child-darkorange).`}</p>\n    <Playground __position={1} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Stretch style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up all the space from the parent\\n  </Stretch>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Stretch style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Stretch\">\n        I'm taking up all the space from the parent\n    </Stretch>  \n  </Vertical>\n    </Playground>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`sizing?: number`}</inlineCode>{` prop allows you to control the stretch ratio (concept covered in `}<a parentName=\"li\" {...{\n          \"href\": \"../principle-sizing/\"\n        }}>{`sizing principle`}</a>{`) eg. a 1,2 ratio (`}<inlineCode parentName=\"li\">{`Horizontal(Stretch:1,Stretch:2)`}</inlineCode>{`) is shown below:`}</li>\n    </ul>\n    <Playground __position={2} __code={'<Horizontal\\n  height={100}\\n  spacing={0}\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <Stretch sizing={1} style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking 1\\n  </Stretch>\\n  <Stretch sizing={2} style={{ backgroundColor: \\'lightpink\\' }}>\\n    I\\'m taking 2\\n  </Stretch>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal height={100} spacing={0} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Horizontal\">\n    <Stretch sizing={1} style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Stretch\">\n        I'm taking 1\n    </Stretch>  \n    <Stretch sizing={2} style={{\n          backgroundColor: \"lightpink\"\n        }} mdxType=\"Stretch\">\n        I'm taking 2\n    </Stretch>\n  </Horizontal>\n    </Playground>\n    <h2 {...{\n      \"id\": \"content\"\n    }}>{`Content`}</h2>\n    <p>{`Content takes up as much space as needed its child.`}</p>\n    <p>{`In the example below we throw a few `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` items in a `}<inlineCode parentName=\"p\">{`Vertical(Content,Content,Content)`}</inlineCode>{` structure: `}</p>\n    <Playground __position={3} __code={'<Vertical style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Content style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n  <Content style={{ backgroundColor: \\'lightpink\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n  <Content style={{ backgroundColor: \\'limegreen\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Content>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Content style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n    <Content style={{\n          backgroundColor: \"lightpink\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n    <Content style={{\n          backgroundColor: \"limegreen\"\n        }} mdxType=\"Content\">\n        I'm taking up as much space as needed by this text\n    </Content>\n  </Vertical>\n    </Playground>\n    <p>{`If you want to have multiple children e.g. `}<inlineCode parentName=\"p\">{`<Content><b>Hello</b> is it me you are looking for</Content>`}</inlineCode>{` you can use `}<inlineCode parentName=\"p\">{`wrapInSpan`}</inlineCode>{` to ensure flexbox sees a single child and flex-direction properies don't mess with children.`}</p>\n    <Playground __position={4} __code={'<Content style={{ backgroundColor: \\'darkorange\\' }} wrapInSpan>\\n  <b>Hello</b> is it me you are looking for.\\n  <b>Hello</b> is it me you are looking for.\\n  <b>Hello</b> is it me you are looking for.\\n  <b>Hello</b> is it me you are looking for.\\n  <b>Hello</b> is it me you are looking for.\\n</Content>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Content style={{\n        backgroundColor: \"darkorange\"\n      }} wrapInSpan mdxType=\"Content\">\n    <b>Hello</b> is it me you are looking for.\n    <b>Hello</b> is it me you are looking for.\n    <b>Hello</b> is it me you are looking for.\n    <b>Hello</b> is it me you are looking for.\n    <b>Hello</b> is it me you are looking for.\n  </Content>\n    </Playground>\n    <h2 {...{\n      \"id\": \"box\"\n    }}>{`Box`}</h2>\n    <p>{`A more general purpose `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component exists that supports the `}<inlineCode parentName=\"p\">{`sizing`}</inlineCode>{` property allowing you to dynamically switch between `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{` based on your requirement.`}</p>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`<Box sizing='stretch'/>`}</inlineCode>{` same as `}<inlineCode parentName=\"p\">{`<Stretch/>`}</inlineCode>{`: `}</p>\n    <Playground __position={5} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Box sizing=\\\"stretch\\\" style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up all the space from the parent\\n  </Box>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Box sizing='stretch' style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Box\">\n        I'm taking up all the space from the parent\n    </Box>  \n  </Vertical>\n    </Playground>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`<Box sizing='content'/>`}</inlineCode>{` same as `}<inlineCode parentName=\"p\">{`<Content/>`}</inlineCode>{`: `}</p>\n    <Playground __position={6} __code={'<Vertical height={100} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Box sizing=\\\"content\\\" style={{ backgroundColor: \\'darkorange\\' }}>\\n    I\\'m taking up as much space as needed by this text\\n  </Box>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={100} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Box sizing='content' style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Box\">\n        I'm taking up as much space as needed by this text\n    </Box>  \n  </Vertical>\n    </Playground>\n    <h2 {...{\n      \"id\": \"baseprops\"\n    }}>{`BaseProps`}</h2>\n    <p><inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"../common-types/\"\n      }}>{`support all `}<inlineCode parentName=\"a\">{`BaseProps`}</inlineCode></a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"alignment\"\n    }}>{`Alignment`}</h2>\n    <p><inlineCode parentName=\"p\">{`Stretch`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Content`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` support the same alignment as `}<a parentName=\"p\" {...{\n        \"href\": \"../vertical/\"\n      }}><inlineCode parentName=\"a\">{`Vertical`}</inlineCode></a>{`. `}</p>\n    <p>{`Example `}<inlineCode parentName=\"p\">{`center,center`}</inlineCode>{`: `}</p>\n    <Playground __position={7} __code={'<Content\\n  height=\\\"100px\\\"\\n  verticalAlign=\\\"center\\\"\\n  horizontalAlign=\\\"center\\\"\\n  style={{ backgroundColor: \\'darkorange\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightskyblue\\' }}>\\n    I\\'m just a div in a orange Content(center,center)\\n  </div>\\n</Content>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Content height=\"100px\" verticalAlign=\"center\" horizontalAlign=\"center\" style={{\n        backgroundColor: \"darkorange\"\n      }} mdxType=\"Content\">\n    <div style={{\n          backgroundColor: 'lightskyblue'\n        }}>I'm just a div in a orange Content(center,center)</div>\n  </Content>\n    </Playground>\n    <h2 {...{\n      \"id\": \"example-use-case-table\"\n    }}>{`Example use case: Table`}</h2>\n    <p>{`It is common to have a table of items with some fixed width, some stretch items. `}</p>\n    <p>{`Below we power the table with a `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` containing rows of `}<inlineCode parentName=\"p\">{`Horizontal(Content(width=explicit),Stretch(1),Stretch(2))`}</inlineCode>{`:`}</p>\n    <Playground __position={8} __code={'<Vertical spacing={10} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <Horizontal height={100} spacing={10}>\\n    <Content width={100} style={{ backgroundColor: \\'limegreen\\' }}>\\n      Exactly 100px\\n    </Content>\\n    <Stretch sizing={1} style={{ backgroundColor: \\'darkorange\\' }}>\\n      I\\'m taking 1 from remainder\\n    </Stretch>\\n    <Stretch sizing={2} style={{ backgroundColor: \\'lightpink\\' }}>\\n      I\\'m taking 2 from remainder\\n    </Stretch>\\n  </Horizontal>\\n  <Horizontal height={100} spacing={10}>\\n    <Content width={100} style={{ backgroundColor: \\'limegreen\\' }}>\\n      Row 2\\n    </Content>\\n    <Stretch sizing={1} style={{ backgroundColor: \\'darkorange\\' }}>\\n      Row 2\\n    </Stretch>\\n    <Stretch sizing={2} style={{ backgroundColor: \\'lightpink\\' }}>\\n      Row 2\\n    </Stretch>\\n  </Horizontal>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Stretch,\n      Content,\n      Box,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical spacing={10} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <Horizontal height={100} spacing={10} mdxType=\"Horizontal\">\n      <Content width={100} style={{\n            backgroundColor: \"limegreen\"\n          }} mdxType=\"Content\">Exactly 100px</Content>\n      <Stretch sizing={1} style={{\n            backgroundColor: \"darkorange\"\n          }} mdxType=\"Stretch\">\n          I'm taking 1 from remainder\n      </Stretch>  \n      <Stretch sizing={2} style={{\n            backgroundColor: \"lightpink\"\n          }} mdxType=\"Stretch\">\n          I'm taking 2 from remainder\n      </Stretch>\n    </Horizontal>\n    <Horizontal height={100} spacing={10} mdxType=\"Horizontal\">\n      <Content width={100} style={{\n            backgroundColor: \"limegreen\"\n          }} mdxType=\"Content\">Row 2</Content>\n      <Stretch sizing={1} style={{\n            backgroundColor: \"darkorange\"\n          }} mdxType=\"Stretch\">\n          Row 2\n      </Stretch>  \n      <Stretch sizing={2} style={{\n            backgroundColor: \"lightpink\"\n          }} mdxType=\"Stretch\">\n          Row 2\n      </Stretch>\n    </Horizontal>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}