{"version":3,"sources":["/home/travis/build/basarat/gls/src/components/common.ts","/home/travis/build/basarat/gls/src/internal/utils.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx","/home/travis/build/basarat/gls/src/demos.tsx","/home/travis/build/basarat/gls/src/vertical.mdx"],"names":["Spacing","vertical","horizontal","grid","boxUnitToString","value","toString","gridSpaced","topAndBottom","leftAndRight","arguments","length","undefined","typestyle","marginTop","marginLeft","&>*","Grid","props","className","otherProps","Object","objectWithoutProperties","spacing","klass","classes","react","assign","data-comment","displayName","Vertical","horizontalAlign","verticalAlign","csstips","Horizontal","FlexContainer","ContentContainer","__webpack_require__","d","__webpack_exports__","vertical_Vertical","horizontal_Horizontal","BlueDiv","react_default","a","createElement","style","backgroundColor","children","PinkDiv","layoutProps","MDXLayout","MDXContent","_ref","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","demos","src","demos_BlueDiv","isMDXComponent"],"mappings":"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","file":"static/js/src-vertical.b9d312de.js","sourcesContent":["/** \n * The default spacing used by the layout components \n * You can customize it e.g. \n * ```ts\n * import { Spacing } from 'gls';\n * Spacing.vertical = 30;\n * ```\n */\nexport const Spacing = {\n  vertical: 24,\n  horizontal: 24,\n  grid: {\n    vertical: 24,\n    horizontal: 24,\n  }\n}\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type BoxUnit = number | string;\n","import { BoxUnit } from \"../components/common\";\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function boxUnitToString(value: BoxUnit): string {\n  if (typeof value === 'number') {\n    return value.toString() + 'px';\n  }\n  else {\n    return value;\n  }\n}","import * as typestyle from 'typestyle';\nimport { types, classes } from 'typestyle';\nimport * as React from 'react';\nimport { Spacing, BoxUnit } from './common';\nimport { boxUnitToString } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight = topAndBottom): string {\n  const vertical = boxUnitToString(topAndBottom);\n  const horizontal = boxUnitToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      '&>*': {\n        marginTop: vertical,\n        marginLeft: horizontal,\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface GridProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?:\n  | BoxUnit\n  | {\n    vertical: BoxUnit\n    horizontal: BoxUnit\n  }\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { className, ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let horizontal!: BoxUnit;\n  let vertical!: BoxUnit;\n  if ('spacing' in props && props.spacing != null) {\n    delete (otherProps as any).spacing;\n    if (typeof props.spacing == 'number' || typeof props.spacing == 'string') {\n      horizontal = props.spacing;\n      vertical = horizontal;\n    } else {\n      horizontal = props.spacing.horizontal;\n      vertical = props.spacing.vertical;\n    }\n  }\n\n  const klass = classes(\n    className,\n    gridSpaced(vertical, horizontal),\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Grid' />\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Vertical \n///////////////////////////////////\n\nexport interface VerticalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n}\n\n/** \n * Layout out children with a vertical margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(\n      csstips.content,\n      csstips.vertical,\n      csstips.verticallySpaced(props.spacing == null ? Spacing.vertical : props.spacing),\n      verticalAlign == 'center' && csstips.centerJustified,\n      verticalAlign == 'bottom' && csstips.endJustified,\n      horizontalAlign == 'right' && csstips.end,\n      horizontalAlign == 'center' && csstips.center,\n    )\n  );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Vertical' />\n  );\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Horizontal\n///////////////////////////////////\n\nexport interface HorizontalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps } = props;\n\n  const klass =\n    typestyle.classes(\n      className,\n      typestyle.style(\n        csstips.content,\n        csstips.horizontal,\n        csstips.horizontallySpaced(props.spacing == null ? Spacing.horizontal : props.spacing),\n        horizontalAlign == 'right' && csstips.endJustified,\n        horizontalAlign == 'center' && csstips.centerJustified,\n        verticalAlign == 'center' && csstips.center,\n        verticalAlign == 'bottom' && csstips.end,\n      )\n    );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Horizontal' />\n  );\n}\nHorizontal.displayName = 'Horizontal';","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const FlexContainer: React.FC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.flex)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexContainer' />\n  );\n};\nFlexContainer.displayName = 'FlexContainer';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const ContentContainer: React.FC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.content)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='ContentContainer' />\n  );\n};\nContentContainer.displayName = 'ContentContainer';\n","export * from './components/common';\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n","/** \n * Demo components for docs \n */\n\nimport React from \"react\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Vertical } from '.'; \nimport * as demos from './demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h1>\n    <p>{`Lays out children in a vertically spaced layout.`}</p>\n    <Playground __position={0} __code={'<Vertical>\\n  <demos.BlueDiv>Hello</demos.BlueDiv>\\n  <div>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Vertical,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.BlueDiv>Hello</demos.BlueDiv>\n    <div>World</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}