{"version":3,"sources":["/home/travis/build/basarat/gls/src/components/common.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx","/home/travis/build/basarat/gls/src/demos.tsx","/home/travis/build/basarat/gls/src/vertical.mdx"],"names":["Spacing","vertical","horizontal","grid","Grid","props","className","otherProps","Object","objectWithoutProperties","klass","classes","typestyle","csstips","spacing","react","assign","data-comment","displayName","Vertical","horizontalAlign","verticalAlign","Horizontal","FlexContainer","ContentContainer","__webpack_require__","d","__webpack_exports__","vertical_Vertical","horizontal_Horizontal","BlueDiv","react_default","a","createElement","style","backgroundColor","children","PinkDiv","layoutProps","MDXLayout","MDXContent","_ref","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","demos","src","demos_BlueDiv","isMDXComponent"],"mappings":"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","file":"static/js/src-vertical.6c2b0627.js","sourcesContent":["/** \n * The default spacing used by the layout components \n * You can customize it e.g. \n * ```ts\n * import { Spacing } from 'gls';\n * Spacing.vertical = 30;\n * ```\n */\nexport const Spacing = {\n  vertical: 24,\n  horizontal: 24,\n  grid: {\n    vertical: 24,\n    horizontal: 24,\n  }\n}\n","import * as typestyle from 'typestyle';\nimport { types, classes } from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// GRID \n///////////////////////////////////\n\nexport interface GridProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.SFC<GridProps> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = classes(\n    className,\n    typestyle.style(csstips.gridSpaced(\n      props.spacing == null ? Spacing.grid.vertical : props.spacing\n    )),\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Grid' />\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Vertical \n///////////////////////////////////\n\nexport interface VerticalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n}\n\n/** \n * Layout out children with a vertical margin between them\n */\nexport const Vertical: React.SFC<VerticalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(\n      csstips.content,\n      csstips.vertical,\n      csstips.verticallySpaced(props.spacing == null ? Spacing.vertical : props.spacing),\n      verticalAlign == 'center' && csstips.centerJustified,\n      verticalAlign == 'bottom' && csstips.endJustified,\n      horizontalAlign == 'right' && csstips.end,\n      horizontalAlign == 'center' && csstips.center,\n    )\n  );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Vertical' />\n  );\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\nimport { Spacing } from './common';\n\n///////////////////////////////////\n// Horizontal\n///////////////////////////////////\n\nexport interface HorizontalProps extends React.HTMLProps<HTMLDivElement> {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'right' | 'center',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\nexport const Horizontal: React.SFC<HorizontalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    ...otherProps } = props;\n\n  const klass =\n    typestyle.classes(\n      className,\n      typestyle.style(\n        csstips.content,\n        csstips.horizontal,\n        csstips.horizontallySpaced(props.spacing == null ? Spacing.horizontal : props.spacing),\n        horizontalAlign == 'right' && csstips.endJustified,\n        horizontalAlign == 'center' && csstips.centerJustified,\n        verticalAlign == 'center' && csstips.center,\n        verticalAlign == 'bottom' && csstips.end,\n      )\n    );\n\n  return (\n    <div {...otherProps} className={klass} data-comment='Horizontal' />\n  );\n}\nHorizontal.displayName = 'Horizontal';","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport * as csstips from 'csstips';\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const FlexContainer: React.SFC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.flex)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexContainer' />\n  );\n};\nFlexContainer.displayName = 'FlexContainer';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const ContentContainer: React.SFC<React.HTMLProps<HTMLDivElement>> = (props) => {\n  const { className, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(csstips.content)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='ContentContainer' />\n  );\n};\nContentContainer.displayName = 'ContentContainer';\n","/**\n * This is a level above csstips\n *  - It wraps up the csstips primitives into React components\n *  - Allows you to write cleaner react code (instead of div.className soup)\n */\nexport * from './components/common';\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n","/** \n * Demo components for docs \n */\n\nimport React from \"react\";\n\nexport const BlueDiv: React.SFC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.SFC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Vertical } from '.'; \nimport * as demos from './demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h1>\n    <p>{`Lays out children in a vertically spaced layout.`}</p>\n    <Playground __position={0} __code={'<Vertical>\\n  <demos.BlueDiv>Hello</demos.BlueDiv>\\n  <div>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Vertical,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.BlueDiv>Hello</demos.BlueDiv>\n    <div>World</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}