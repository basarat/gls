(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"./src/docs/components/responsive.mdx":function(e,o,n){"use strict";n.r(o),n.d(o,"default",function(){return a});var t=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),s=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),i=n("./node_modules/docz/dist/index.esm.js"),l=n("./src/index.tsx"),p=n("./src/demos/index.tsx"),r={},b="wrapper";function a(e){var o=e.components,n=Object(t.a)(e,["components"]);return Object(s.b)(b,Object.assign({},r,n,{components:o,mdxType:"MDXLayout"}),Object(s.b)(p.Star,null),Object(s.b)("h1",{id:"responsive"},"Responsive"),Object(s.b)("p",null,"Lays out children in a vertically or horizontally spaced layout based on given breakpoint (default is 480). "),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"You'll have to resize the browser window to see the following examples in action \ud83d\udc4d")),Object(s.b)("p",null,"As an example, resize your browser window to see the following layout change from horizontal to vertical at 600px:"),Object(s.b)(i.c,{__position:1,__code:"<Responsive breakpoint={600}>\n  <Flex style={{ backgroundColor: 'lightskyblue' }}>Hello</Flex>\n  <Flex style={{ backgroundColor: 'lightpink' }}>World</Flex>\n</Responsive>",__scope:{props:this?this.props:n,Playground:i.c,Responsive:l.h,Flex:l.b,Horizontal:l.f,demos:p},mdxType:"Playground"},Object(s.b)(l.h,{breakpoint:600,mdxType:"Responsive"},Object(s.b)(l.b,{style:{backgroundColor:"lightskyblue"},mdxType:"Flex"},"Hello"),Object(s.b)(l.b,{style:{backgroundColor:"lightpink"},mdxType:"Flex"},"World"))),Object(s.b)("p",null,"Another example is a common left right layout with buttons: "),Object(s.b)(i.c,{__position:2,__code:'<Responsive breakpoint={650} minWidth={250}>\n  <Horizontal sizing="flex">\n    <demos.Button>Back 1</demos.Button>\n    <demos.Button>Back 2</demos.Button>\n  </Horizontal>\n  <Horizontal sizing="flex" horizontalAlign="right">\n    <demos.Button>Next 1</demos.Button>\n    <demos.Button>Next 2</demos.Button>\n  </Horizontal>\n</Responsive>',__scope:{props:this?this.props:n,Playground:i.c,Responsive:l.h,Flex:l.b,Horizontal:l.f,demos:p},mdxType:"Playground"},Object(s.b)(l.h,{breakpoint:650,minWidth:250,mdxType:"Responsive"},Object(s.b)(l.f,{sizing:"flex",mdxType:"Horizontal"},Object(s.b)(p.Button,null,"Back 1"),Object(s.b)(p.Button,null,"Back 2")),Object(s.b)(l.f,{sizing:"flex",horizontalAlign:"right",mdxType:"Horizontal"},Object(s.b)(p.Button,null,"Next 1"),Object(s.b)(p.Button,null,"Next 2")))),Object(s.b)("h2",{id:"baseprops"},"BaseProps"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Responsive")," ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"../common-types/"}),"supports all ",Object(s.b)("inlineCode",{parentName:"a"},"BaseProps")),"."),Object(s.b)("h2",{id:"sizingprop"},"SizingProp"),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"Responsive")," supports the ",Object(s.b)("inlineCode",{parentName:"p"},"sizing")," prop as explained in the ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"../principle-sizing/"}),"sizing principle"),"."))}a&&a===Object(a)&&Object.isExtensible(a)&&Object.defineProperty(a,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/components/responsive.mdx"}}),a.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-components-responsive.d0cafa6e999b0c24e4f9.js.map