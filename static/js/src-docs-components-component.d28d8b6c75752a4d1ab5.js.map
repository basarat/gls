{"version":3,"sources":["/home/travis/build/basarat/gls/src/docs/components/component.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","_demos__WEBPACK_IMPORTED_MODULE_5__","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Horizontal","demos","placeholder","href","___WEBPACK_IMPORTED_MODULE_4__","sizing","className","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-component.f594c3b1.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal } from '../..'; \nimport * as demos from '../../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"component\"\n    }}>{`Component`}</h1>\n    <p>{`GLS can easily work with components without any special requirements, so you can bring your own or add explicit support for `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{`. We cover these below.`}</p>\n    <h2 {...{\n      \"id\": \"bring-your-own\"\n    }}>{`Bring your own`}</h2>\n    <p>{`For example, here is a simple `}<inlineCode parentName=\"p\">{`<input/>`}</inlineCode>{` without any gls use: `}</p>\n    <Playground __position={1} __code={'<input placeholder=\\\"Example\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  <input placeholder='Example' />\n    </Playground>\n    <p>{`You can easily place these (raw `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{`s) in a `}<a parentName=\"p\" {...{\n        \"href\": \"../vertical/\"\n      }}>{`vertical`}</a>{` and you can see that they get nicely vertically-spaced, and `}<inlineCode parentName=\"p\">{`stretch`}</inlineCode>{` nicely (thanks to `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`'s default `}<inlineCode parentName=\"p\">{`horizontalAlignment`}</inlineCode>{`):`}</p>\n    <Playground __position={2} __code={'<Vertical>\\n  <input placeholder=\\\"Example\\\" />\\n  <input placeholder=\\\"Example\\\" />\\n  <input placeholder=\\\"Example\\\" />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <input placeholder='Example' />\n    <input placeholder='Example' />\n    <input placeholder='Example' />\n  </Vertical>\n    </Playground>\n    <p>{`You can even have a `}<em parentName=\"p\">{`single`}</em>{` input in a `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` and it essentially stretches (horizontally) to match the parent: `}</p>\n    <Playground __position={3} __code={'<Vertical>\\n  <input placeholder=\\\"Example\\\" />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <input placeholder='Example' />\n  </Vertical>\n    </Playground>\n    <p>{`This allows you to create a reusable (`}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{`) pair that you can provide various `}<a parentName=\"p\" {...{\n        \"href\": \"../common-types/\"\n      }}>{`BaseProps`}</a>{` for (using the `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{` pair).`}</p>\n    <p>{`E.g. you can `}<inlineCode parentName=\"p\">{`flex`}</inlineCode>{` (as explained in the `}<a parentName=\"p\" {...{\n        \"href\": \"../princile-sizing/\"\n      }}>{`sizing principle`}</a>{`) two `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{`s in a Horziontal: `}</p>\n    <Playground __position={4} __code={'<Horizontal>\\n  <Vertical sizing=\\\"flex\\\">\\n    <input placeholder=\\\"Example\\\" />\\n  </Vertical>\\n  <Vertical sizing=\\\"flex\\\">\\n    <input placeholder=\\\"Example\\\" />\\n  </Vertical>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <Vertical sizing=\"flex\" mdxType=\"Vertical\">\n      <input placeholder='Example' />\n    </Vertical>\n    <Vertical sizing=\"flex\" mdxType=\"Vertical\">\n      <input placeholder='Example' />\n    </Vertical>\n  </Horizontal>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`of course you can create a component out of the `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{` pair.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"componentprops\"\n    }}>{`ComponentProps`}</h2>\n    <p><inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` is a grouping of a set of common props that allow you to hook into the layout principles provided by gls:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ClassNameProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Allows you to pass in CSS class names`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ScrollProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify scrolling behaviours`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`PaddingProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specifies padding`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SizingProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify implicit size control`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SizeProps`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify explicit size control`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StylesProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Allows you to use TypeStyle CSS mixins`}</a>{`. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"component-1\"\n    }}>{`component`}</h2>\n    <p>{`There is a `}<inlineCode parentName=\"p\">{`gls.component`}</inlineCode>{` function that takes any set of these props and returns a set of props with any `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` omitted and a `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` that you can use to power to root of your component.`}</p>\n    <p>{`We look at examples below.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-component\"\n    }}>{`Creating a component`}</h2>\n    <p>{`You can use any partial set of `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` in your component e.g: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface OnlySomeProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.SizeProps {\n}\n\nexport const OnlySomePropsButton: React.FC<OnlySomeProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n`}</code></pre>\n    <p>{`or you can use all the `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{`: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface AllTheProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.ComponentProps {\n}\nexport const AllThePropsButton: React.FC<AllTheProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n`}</code></pre>\n    <p>{`Any props tht are not a part of `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` are yours to handle and returned as is from `}<inlineCode parentName=\"p\">{`gls.component`}</inlineCode>{` e.g.: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface LimitedButtonProps extends\n  gls.ComponentProps {\n  /** Turns red if in error state */\n  error?: boolean\n}\nexport const LimitedButton: React.FC<LimitedButtonProps> = (props) => {\n  /** \n   * Generate a className from component props \n   * + take out any props you want to handle \n   **/\n  const {className, error} = gls.component(props);\n  \n  /** Handle the error */\n  const errorStyle = error ? { backgroundColor: 'red' } : {};\n  \n  return <button className={className} style={errorStyle} />;\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}