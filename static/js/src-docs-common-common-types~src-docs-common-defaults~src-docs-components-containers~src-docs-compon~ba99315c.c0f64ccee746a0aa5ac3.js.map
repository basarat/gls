{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/styles/spacing.ts","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/responsive.tsx","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/spacers.tsx","/home/travis/build/basarat/gls/src/index.tsx"],"names":["Star","link","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","marginTop","marginRight","href","target","src","border","marginBottom","scrolling","width","height","BlueDiv","props","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","fontSize","Input","_props","buttonClass","fontFamily","cursor","padding","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","&:hover","&:active","&:focus","outlineColor","Button","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","type","GLSDefaults","React","createContext","verticalSpacing","horizontalSpacing","breakpoint","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollHidden","flexRoot","horizontal","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","vertical","wrap","-ms-flex-wrap","-webkit-flex-wrap","flexWrap","content","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","flex","arguments","length","undefined","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","center","end","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent","centerJustified","endJustified","betweenJustified","aroundJustified","cssLengthToString","value","_processPadding","box","_boxToFullBox","_box$map","map","_box$map2","slicedToArray","topBottom","leftRight","boxToFullBox","_boxToFullBox2","paddingTop","paddingRight","paddingBottom","paddingLeft","createBagTag","klass","comment","minHeight","maxHeight","minWidth","maxWidth","scroll","_props$styles","styles","tag","objectWithoutProperties","name","objectSpread","apply","scrollHelpers","concat","toConsumableArray","data-comment","processSizingProp","prop","_prop$sizing","sizing","fx","useGLSDefaults","context","useContext","Flex","_props$verticalAlign","verticalAlign","_props$horizontalAlig","horizontalAlign","displayName","Content","_props$verticalAlign2","_props$horizontalAlig2","verticallySpaced","margin","&>*","&>*:last-child","horizontallySpaced","gridSpaced","topAndBottom","leftAndRight","marginLeft","Vertical","_props$spacing","spacing","Horizontal","Responsive","_useGLSDefaults","defaultVerticalSpacing","defaultHorizontalSpacing","bp","_props$breakpoint","verticalOptions","horizontalOptions","verticalSizing","horizontalSizing","verticalModeVerticalAlign","verticalModeHorizontalAlign","horizontalModeVerticalAlign","horizontalModeHorizontalAlign","Grid","justify","_spacing","FlexSpacer","react","HorizontalSpacer","space","VerticalSpacer","__webpack_require__","d","__webpack_exports__","containers_Flex","containers_Content","vertical_Vertical","horizontal_Horizontal","responsive_Responsive","grid_Grid","spacers_FlexSpacer","spacers_HorizontalSpacer","spacers_VerticalSpacer"],"mappings":"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","file":"static/js/src-docs-common-common-types~src-docs-common-defaults~src-docs-components-containers~src-docs-compon~ba99315c.957e1fca.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const Star: React.FC = () => {\n  const link = \"https://ghbtns.com/github-btn.html?user=basarat&repo=gls&type=star&count=true\"\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <a\n        style={{ marginRight: '15px' }}\n        href={link}\n        target=\"_blank\">Powered by your ⭐s</a>\n      <iframe\n        src={link}\n        style={{ border: 'none', marginBottom: '-3px' }}\n        scrolling=\"0\"\n        width=\"170px\" height=\"20px\" />\n    </div>\n  );\n}\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n","import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: CSSLength,\n  horizontalSpacing?: CSSLength,\n  breakpoint?: number\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24,\n  breakpoint: 480,\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type CSSLength = number | string;\n\n/** \n * Various versions of providing common shorthand properties\n */\nexport type CSSBox =\n  /** top,right,left,bottom */\n  | CSSLength\n  /** [top & bottom, left & right] */\n  | [CSSLength, CSSLength]\n  /** [top,right,bottom,left] */\n  | [CSSLength, CSSLength, CSSLength, CSSLength]\n\n/** \n * Specifies sizing interaction\n */\nexport interface SizingProp {\n  /** \n   * Specifies `sizing` interaction\n   */\n  sizing?:\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | number /** A flex ratio */;\n}\n\nexport interface SpacingProp {\n  /** Spacing between each child */\n  spacing?: CSSLength,\n}\n\nexport interface AlignmentProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\nexport interface AlignmentInVerticalProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'stretch' /** default */ | 'left' | 'center' | 'right',\n}\n\nexport interface AlignmentInHorizontalProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'stretch' /** default */ | 'top' | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface BaseProps extends\n  PaddingProp,\n  SizeProps,\n  ScrollProp,\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps {\n}\n\n/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: CSSBox,\n}\n\n\n/** \n * Add support for explicit size\n */\nexport interface SizeProps {\n  height?: CSSLength,\n  minHeight?: CSSLength,\n  maxHeight?: CSSLength,\n\n  width?: CSSLength,\n  minWidth?: CSSLength,\n  maxWidth?: CSSLength,\n}\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?:\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n}\n\n/** \n * Support for mixing in TypeStyle NestedCSSProperties (style function arguments) \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Support for React `style` property\n */\nexport interface StyleProp {\n  style?: React.CSSProperties\n}\n\n/** \n * Support for React `className` property \n */\nexport interface ClassNameProp { \n  className?: string\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps {\n  tag?:\n  {\n    /** name default: div */\n    props: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'div';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'button';\n    props?: Omit<React.HTMLProps<HTMLButtonElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'input';\n    props?: Omit<React.HTMLProps<HTMLInputElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'select';\n    props?: Omit<React.HTMLProps<HTMLSelectElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'section';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'>;\n  }\n  | {\n    name: 'a';\n    props?: Omit<React.HTMLProps<HTMLAnchorElement>, 'className' | 'style'>;\n  }\n  // TODO: heading paragraph\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * Cuts off the exccess content and disables the scroll bar\n */\nexport const scrollHidden: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\nexport const wrap: types.CSSProperties = {\n  '-ms-flex-wrap': 'wrap',\n  '-webkit-flex-wrap': 'wrap',\n  flexWrap: 'wrap'\n} as types.CSSProperties;\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: number = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////////////////////\n// Alignment in main axis - grid specific //\n////////////////////////////////////////////\nexport const betweenJustified = {\n  '-ms-flex-pack': 'justify',\n  '-webkit-justify-content': 'space-between',\n  justifyContent: 'space-between'\n} as types.CSSProperties;\n\nexport const aroundJustified = {\n  '-ms-flex-pack': 'distribute',\n  '-webkit-justify-content': 'space-around',\n  justifyContent: 'space-around'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { CSSLength, BaseProps, SizingProp, GLSDefaults, CSSBox } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function cssLengthToString(value: CSSLength): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Ensures all four members of box are present\n */\nfunction boxToFullBox(box: CSSBox): [CSSLength, CSSLength, CSSLength, CSSLength] {\n  if (typeof box == 'number' || typeof box == 'string') {\n    const value = cssLengthToString(box);\n    return [value, value, value, value];\n  } else if (box.length == 2) {\n    const [topBottom, leftRight] = box.map(cssLengthToString);\n    return [topBottom, leftRight, topBottom, leftRight];\n  } else {\n    return box.map(cssLengthToString) as [CSSLength, CSSLength, CSSLength, CSSLength];\n  }\n}\n\n/** \n * Utility to unwrap the three ways a padding might be provided \n */\nfunction _processPadding(box: CSSBox)\n  : typestyle.types.NestedCSSProperties {\n  const [paddingTop, paddingRight, paddingBottom, paddingLeft] = boxToFullBox(box);\n  return { paddingTop, paddingRight, paddingBottom, paddingLeft };\n}\n\n/** \n * Creates the React tag\n * - Does any processing of `BaseProps` if required\n * - Then creates the appropriate tag\n */\nexport function createBagTag<T extends BaseProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debuggin */\n  comment: string,\n) {\n  const {\n    className,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    scroll,\n    styles = [],\n    tag, ...otherProps } = props;\n\n  return React.createElement(\n    (tag != null && ('name' in tag) && tag.name != null) ? tag.name : 'div',\n    {\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && (\n            scroll == 'hidden' ? scrollHelpers.scrollHidden\n              : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n                : scroll == 'vertical' ? scrollHelpers.scrollVertical\n                  : scroll == 'both' ? scrollHelpers.scrollBoth\n                    : null\n          ),\n          /** Padding */\n          padding != null && (_processPadding(padding)),\n          /** Size props */\n          height != null && { height: cssLengthToString(height) },\n          minHeight != null && { minHeight: cssLengthToString(minHeight) },\n          maxHeight != null && { maxHeight: cssLengthToString(maxHeight) },\n          width != null && { width: cssLengthToString(width) },\n          minWidth != null && { minWidth: cssLengthToString(minWidth) },\n          maxWidth != null && { maxWidth: cssLengthToString(maxWidth) },\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n      ...((tag != null && tag.props != null) ? tag.props : {}),\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function processSizingProp(prop: SizingProp): typestyle.types.CSSProperties {\n  const { sizing: fx = 'content' } = prop;\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const context = useContext(GLSDefaults);\n  return {\n    verticalSpacing: context.verticalSpacing == null ? 24 : context.verticalSpacing,\n    horizontalSpacing: context.horizontalSpacing == null ? 24 : context.horizontalSpacing,\n    breakpoint: context.breakpoint == null ? 480 : context.breakpoint,\n  }\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, AlignmentProps } from '../common';\nimport { createBagTag } from '../internal/utils';\nimport { content, flex, centerJustified, endJustified, center, end, vertical, start, startJustified } from '../styles/flex';\n\nexport interface FlexProps extends BaseProps, AlignmentProps {\n  sizing?: number;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const {\n    sizing,\n\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    flex(sizing),\n    vertical,\n    verticalAlign == 'top' && startJustified,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBagTag(otherProps, klass, 'Flex');\n};\nFlex.displayName = 'Flex';\n\nexport interface ContentProps extends BaseProps, AlignmentProps {\n}\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<ContentProps> = (props) => {\n  const {\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    content,\n    vertical,\n    verticalAlign == 'top' && startJustified,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBagTag(otherProps, klass, 'Content');\n};\nContent.displayName = 'Content';\n","import * as typestyle from 'typestyle';\nimport { CSSLength } from \"../common\";\nimport { cssLengthToString } from '../internal/utils';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as typestyle.types.NestedCSSProperties\n  );\n};\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as typestyle.types.CSSProperties\n  );\n};\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight = topAndBottom): typestyle.types.NestedCSSProperties {\n  const verticalSpacing = cssLengthToString(topAndBottom);\n  const horizontalSpacing = cssLengthToString(leftAndRight);\n  return {\n    marginTop: '-' + verticalSpacing + ' !important',\n    marginLeft: '-' + horizontalSpacing + ' !important',\n    $nest: {\n      '&>*': {\n        marginTop: verticalSpacing + ' !important',\n        marginLeft: horizontalSpacing + ' !important',\n      }\n    }\n  };\n};\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, AlignmentInVerticalProps } from '../common';\nimport { createBagTag, processSizingProp, useGLSDefaults } from '../internal/utils';\nimport { vertical, centerJustified, endJustified, end, center, start } from '../styles/flex';\nimport { verticallySpaced } from '../styles/spacing';\n\nexport interface VerticalProps extends BaseProps, SizingProp, SpacingProp, AlignmentInVerticalProps {\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const { verticalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n\n    spacing = verticalSpacing,\n    verticalAlign,\n    horizontalAlign,\n\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.style(\n    processSizingProp(props),\n    vertical,\n    spacing !== 0 && verticallySpaced(spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBagTag(otherProps, klass, 'Vertical');\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, AlignmentInHorizontalProps } from '../common';\nimport { createBagTag, processSizingProp, useGLSDefaults } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end, start } from '../styles/flex';\nimport { horizontallySpaced } from '../styles/spacing';\n\nexport interface HorizontalProps extends BaseProps, SizingProp, SpacingProp, AlignmentInHorizontalProps {\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const { horizontalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n\n    spacing = horizontalSpacing,\n    verticalAlign,\n    horizontalAlign,\n\n    ...otherProps } = props;\n\n  const klass = typestyle.style(\n    processSizingProp(props),\n    horizontal,\n    spacing !== 0 && horizontallySpaced(spacing),\n    horizontalAlign == 'center' && centerJustified,\n    horizontalAlign == 'right' && endJustified,\n    verticalAlign == 'top' && start,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n  );\n  return createBagTag(otherProps, klass, 'Horizontal');\n}\nHorizontal.displayName = 'Horizontal';\n","import * as typestyle from 'typestyle';\nimport { BaseProps, SizingProp, StylesProp, SpacingProp, AlignmentInVerticalProps, AlignmentInHorizontalProps } from '../common';\nimport { createBagTag, useGLSDefaults, processSizingProp } from '../internal/utils';\nimport { vertical, horizontal, centerJustified, endJustified, end, center, start } from '../styles/flex';\nimport { verticallySpaced, horizontallySpaced } from '../styles/spacing';\n\n\n/** \n * Props that can be specified at root of `Responsive` and overridden for `vertical`/`horizontal` options\n */\nexport interface ResponsiveOverridableProps extends\n  SizingProp, SpacingProp {\n}\n\n/** \n * Props for Vertical mode\n */\nexport interface ResponsiveVerticalModeProps extends\n  AlignmentInVerticalProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\n/** \n * Props for Horizontal mode\n */\nexport interface ResponsiveHorizontalModeProps extends\n  AlignmentInHorizontalProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\n/** \n * Props for the Responsive component\n */\nexport interface ResponsiveProps extends BaseProps, ResponsiveOverridableProps {\n  /** \n   * windowWidth <= breakpoint : it is vertical (mobile)\n   * else                      : it is horizontal (desktop)\n   **/\n  breakpoint?: number;\n\n  /** Vertical mode configuration */\n  vertical?: ResponsiveVerticalModeProps;\n\n  /** Horizontal mode configuration */\n  horizontal?: ResponsiveHorizontalModeProps;\n}\n\n/**\n * Layout out children\n * - vertically till breakpoint\n * - horizontally above breakpoint\n */\nexport const Responsive: React.FC<ResponsiveProps> = (props) => {\n  const {\n    verticalSpacing: defaultVerticalSpacing,\n    horizontalSpacing: defaultHorizontalSpacing,\n    breakpoint: bp\n  } = useGLSDefaults();\n\n  const {\n    breakpoint = bp,\n    vertical: verticalOptions,\n    horizontal: horizontalOptions,\n\n    /** Overridable */\n    sizing,\n    spacing,\n\n    ...otherProps\n  } = props;\n\n  /** Determine sizings */\n  const verticalSizing = (verticalOptions && verticalOptions.sizing != null)\n    ? verticalOptions.sizing\n    : sizing;\n  const horizontalSizing = (horizontalOptions && horizontalOptions.sizing != null)\n    ? horizontalOptions.sizing\n    : sizing;\n\n  /** Determine spacings  */\n  const verticalSpacing = (verticalOptions && verticalOptions.spacing != null) ? verticalOptions.spacing\n    : spacing != null ? spacing\n      : defaultVerticalSpacing;\n  const horizontalSpacing = (horizontalOptions && horizontalOptions.spacing != null) ? horizontalOptions.spacing\n    : spacing != null ? spacing\n      : defaultHorizontalSpacing;\n\n  /** Determine alignments */\n  const verticalModeVerticalAlign =\n    (verticalOptions && verticalOptions.verticalAlign != null)\n      ? verticalOptions.verticalAlign\n      : null;\n  const verticalModeHorizontalAlign =\n    (verticalOptions && verticalOptions.horizontalAlign != null)\n      ? verticalOptions.horizontalAlign\n      : null;\n  const horizontalModeVerticalAlign =\n    (horizontalOptions && horizontalOptions.verticalAlign != null)\n      ? horizontalOptions.verticalAlign\n      : null;\n  const horizontalModeHorizontalAlign =\n    (horizontalOptions && horizontalOptions.horizontalAlign != null)\n      ? horizontalOptions.horizontalAlign\n      : null;\n\n  const klass = typestyle.style(\n    /** Till breakpoint: Vertical */\n    typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      processSizingProp({ sizing: verticalSizing }),\n      vertical,\n      verticalSpacing !== 0 && verticallySpaced(verticalSpacing),\n      verticalModeVerticalAlign == 'center' && centerJustified,\n      verticalModeVerticalAlign == 'bottom' && endJustified,\n      verticalModeHorizontalAlign == 'left' && start,\n      verticalModeHorizontalAlign == 'right' && end,\n      verticalModeHorizontalAlign == 'center' && center,\n    ),\n    verticalOptions && verticalOptions.styles && typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      ...verticalOptions.styles),\n\n    /** Bigger than breakpoint: Horizontal */\n    typestyle.media({ minWidth: breakpoint + 1 },\n      processSizingProp({ sizing: horizontalSizing }),\n      horizontal,\n      horizontalSpacing !== 0 && horizontallySpaced(horizontalSpacing),\n      horizontalModeHorizontalAlign == 'right' && endJustified,\n      horizontalModeHorizontalAlign == 'center' && centerJustified,\n      horizontalModeVerticalAlign == 'top' && start,\n      horizontalModeVerticalAlign == 'center' && center,\n      horizontalModeVerticalAlign == 'bottom' && end,\n    ),\n    horizontalOptions && horizontalOptions.styles && typestyle.media({ minWidth: breakpoint + 1 },\n      ...horizontalOptions.styles),\n  );\n  return createBagTag(otherProps, klass, 'Responsive');\n}\nResponsive.displayName = 'Responsive';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength, BaseProps, SizingProp } from '../common';\nimport { createBagTag, useGLSDefaults, processSizingProp } from '../internal/utils';\nimport { horizontal, wrap, endJustified, centerJustified, betweenJustified, aroundJustified } from '../styles/flex';\nimport { gridSpaced } from '../styles/spacing';\n\nexport interface GridProps extends BaseProps, SizingProp {\n  /** \n   * Minimum spacing between children\n   */\n  spacing?:\n  | CSSLength\n  | [/** Vertical */ CSSLength, /** Horizontal */ CSSLength]\n\n  /** \n   * Controls how the extra space around the children is handled\n   */\n  justify?:\n  /** Controls by content */\n  | 'left' /** default */\n  | 'center'\n  | 'right'\n  /** Controls by space */\n  | 'space-between'\n  | 'space-around'\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const {\n    sizing,\n    spacing,\n    justify,\n    ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = typestyle.style(\n    processSizingProp(props),\n    horizontal, wrap,\n    gridSpaced(verticalSpacing, horizontalSpacing),\n    justify == 'center' && centerJustified,\n    justify == 'right' && endJustified,\n    justify == 'space-between' && betweenJustified,\n    justify == 'space-around' && aroundJustified,\n  );\n  return (\n    createBagTag(otherProps, klass, 'Grid')\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength } from '../common';\nimport { cssLengthToString, useGLSDefaults } from '../internal/utils';\nimport { flex } from '../styles/flex';\n\nexport interface FlexSpacerProps extends React.HTMLProps<HTMLDivElement> {\n  sizing?: number;\n}\n\n/** \n * Flexes into any available space \n */\nexport const FlexSpacer: React.FC<FlexSpacerProps> = (props) => {\n  const { className, sizing, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(flex(sizing))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='FlexSpacer' />\n  );\n};\nFlexSpacer.displayName = 'FlexSpacer';\n\n/** \n * Common interface for space props \n */\nexport interface SpacerProps extends React.HTMLProps<HTMLDivElement> {\n  space?: CSSLength;\n}\n\n/**\n * Takes a fixed amount of horizontal space\n */\nexport const HorizontalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { horizontalSpacing } = useGLSDefaults();\n  const width = cssLengthToString(props.space == null ? horizontalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    display: 'inline-block',\n    width: width,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='HorizontalSpacer' />;\n};\nHorizontalSpacer.displayName = 'HorizontalSpacer';\n\n\n/**\n * Takes a fixed amount of vertical space\n */\nexport const VerticalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { verticalSpacing } = useGLSDefaults();\n  const height = cssLengthToString(props.space == null ? verticalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    height: height,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='VerticalSpacer' />;\n};\nVerticalSpacer.displayName = 'VerticalSpacer';\n","/** Common */\nexport * from './common';\n\n/** Components */\nexport * from './components/containers';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/responsive';\nexport * from './components/grid';\nexport * from './components/spacers';\n"],"sourceRoot":""}