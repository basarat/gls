{"version":3,"sources":["/home/travis/build/basarat/gls/src/docs/principles/scrolling.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Vertical","Content","Horizontal","demos","height","style","backgroundColor","scroll","spacing","textAlign","fontSize","sizing","position","borderRadius","right","bottom","src","isMDXComponent"],"mappings":"sdAUMA,EAAc,GAIL,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,YAAC,OAAD,MACA,iBAAQ,CACN,GAAM,aADR,aAGA,4BAAW,0BAAYC,WAAW,KAAvB,UAAX,sIACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,+IAWL,iBAAQ,CACN,GAAM,YADR,YAGA,2BAAU,kBAAIA,WAAW,KAAf,WAAV,0KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uaAAgbC,QAAS,CAC1dL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cAIb,YAAC,IAAD,CAAUW,OAAQ,GAAIC,MAAO,CACvBC,gBAAiB,gBAChBb,QAAQ,YACb,mBAAKY,MAAO,CACNC,gBAAiB,cADvB,uCAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,uCAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,yCAKA,8BACE,iBAAGZ,WAAW,cAAd,sEAAkG,kBAAIA,WAAW,KAAf,6BAAlG,oBAA4K,+BAAGA,WAAW,KAAQ,CAC9L,KAAQ,yBADgK,oBAA5K,iHAIF,iBAAQ,CACN,GAAM,8BADR,gCAGA,4BAAW,0BAAYA,WAAW,KAAvB,6CAAX,iEACA,6DACA,sBACE,kBAAIA,WAAW,MAAf,mEACA,kBAAIA,WAAW,MAAf,0DAEF,kHAAiG,0BAAYA,WAAW,KAAvB,iBAAjG,OACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,yPAA8PC,QAAS,CACxSL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cAIb,YAAC,IAAD,CAAUW,OAAQ,GAAIG,OAAO,OAAOF,MAAO,CACrCC,gBAAiB,gBAChBb,QAAQ,YACb,mBAAKY,MAAO,CACNC,gBAAiB,cADvB,0CAKA,yEACA,YAAC,IAAD,CAAYX,WAAY,EAAGC,OAAQ,kcAA2cC,QAAS,CACrfL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cAIb,YAAC,IAAD,CAAUW,OAAQ,GAAIG,OAAO,OAAOF,MAAO,CACrCC,gBAAiB,gBAChBb,QAAQ,YACb,mBAAKY,MAAO,CACNC,gBAAiB,cADvB,uCAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,uCAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,yCAKA,0IACA,YAAC,IAAD,CAAYX,WAAY,EAAGC,OAAQ,qxCAA8yCC,QAAS,CACx1CL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cACb,YAAC,IAAD,CAAUW,OAAQ,IAAKI,QAAS,EAAGH,MAAO,CACpCC,gBAAiB,gBAChBb,QAAQ,YAIT,YAAC,IAAD,CAASY,MAAO,CACdC,gBAAiB,aACjBG,UAAW,SACXL,OAAQ,OACRM,SAAU,QACTjB,QAAQ,WALX,UAUA,YAAC,IAAD,CAAUc,OAAO,OAAOI,OAAO,UAAUlB,QAAQ,YACvD,mBAAKY,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,sDAGA,mBAAKD,MAAO,CACFC,gBAAiB,cAD3B,yDAME,iBAAQ,CACN,GAAM,UADR,UAGA,qIACA,YAAC,IAAD,CAAYX,WAAY,EAAGC,OAAQ,4gBAAqhBC,QAAS,CAC/jBL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cAIb,YAAC,IAAD,CAAUW,OAAQ,GAAIG,OAAO,SAASF,MAAO,CACvCC,gBAAiB,gBAChBb,QAAQ,YACb,mBAAKY,MAAO,CACNC,gBAAiB,cADvB,+DAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,+DAGA,mBAAKD,MAAO,CACNC,gBAAiB,cADvB,iEAKA,+GACA,YAAC,IAAD,CAAYX,WAAY,EAAGC,OAAQ,ggBAA+gBC,QAAS,CACzjBL,MAAOM,KAAOA,KAAKN,MAAQA,EAC3BO,eACAC,aACAC,YACAC,eACAC,SACCV,QAAQ,cAIb,YAAC,IAAD,CAAUW,OAAQ,IAAKG,OAAO,SAASF,MAAO,CACxCC,gBAAiB,eACjBM,SAAU,YACTnB,QAAQ,YAHf,wBAKE,mBAAKY,MAAO,CACNQ,aAAc,MACdD,SAAU,WACVE,MAAO,OACPC,OAAQ,SACPC,IAAI,oCAEb,YAAC,IAAD,CAAUZ,OAAQ,IAAKC,MAAO,CACxBC,gBAAiB,aAChBb,QAAQ,YAFf,kB,uLAUFH,EAAW2B,gBAAiB","file":"static/js/src-docs-principles-scrolling.d7131f4e.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Content, Horizontal } from '../..'; \nimport * as demos from '../../demos'; \n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"scrolling\"\n    }}>{`Scrolling`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`scroll`}</inlineCode>{` prop can be used to set up when a scroll bar should show. We provide the following scrolling options on our container components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface ScrollProp {\n  scroll?:\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overflow\"\n    }}>{`overflow`}</h2>\n    <p>{`By `}<em parentName=\"p\">{`default`}</em>{` content will overflow its container. In the example below we force the container to be small (with explicit sizing 80px) and then throw a bunch of content inside it.`}</p>\n    <Playground __position={1} __code={'{/* force a small size container */}\\n<Vertical height={80} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n  </Vertical>\n    </Playground>\n    <blockquote>\n      <p parentName=\"blockquote\">{`There is no need to be alarmed by this default value. You normally `}<em parentName=\"p\">{`don't use explicit sizing`}</em>{` (covered in the `}<a parentName=\"p\" {...{\n          \"href\": \"../principle-sizing/\"\n        }}>{`sizing principle`}</a>{`). Content will overflow to the body, and the browser will add a scrollbar on the body for you (by default).`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"both--vertical--horizontal\"\n    }}>{`both | vertical | horizontal`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`scroll: 'both'| 'vertical' | 'horizontal'`}</inlineCode>{` to finely control where you want your scroll bar to appear. `}</p>\n    <p>{`Some configuration handled for you: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`The scrollbar will only show if the content actually overflows.`}</li>\n      <li parentName=\"ul\">{`The scrolling section is touch-smooth-scroll enabled.`}</li>\n    </ul>\n    <p>{`Here is an example where content doesn't overflow (and you don't see a scroll bar despite `}<inlineCode parentName=\"p\">{`scroll='both'`}</inlineCode>{`): `}</p>\n    <Playground __position={2} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"both\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Not enough content to cause overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='both' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Not enough content to cause overflow</div>\n  </Vertical>\n    </Playground>\n    <p>{`Here is an example where content does overflow: `}</p>\n    <Playground __position={3} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"both\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='both' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n  </Vertical>\n    </Playground>\n    <p>{`You can use it to fine tune the scroll bar location e.g. below we want the header to stay outside the scroll bar:`}</p>\n    <Playground __position={4} __code={'<Vertical\\n  height={200}\\n  spacing={0}\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  {/* You want this header to stick to top */}\\n  <Content\\n    style={{\\n      backgroundColor: \\'darkorange\\',\\n      textAlign: \\'center\\',\\n      height: \\'50px\\',\\n      fontSize: \\'35px\\',\\n    }}\\n  >\\n    Header\\n  </Content>\\n\\n  {/* You only want this section to scroll */}\\n  <Vertical scroll=\\\"both\\\" sizing=\\\"stretch\\\">\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n  </Vertical>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={200} spacing={0} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n        {\n          /* You want this header to stick to top */\n        }\n        <Content style={{\n          backgroundColor: 'darkorange',\n          textAlign: 'center',\n          height: '50px',\n          fontSize: '35px'\n        }} mdxType=\"Content\">Header</Content>\n\n        {\n          /* You only want this section to scroll */\n        }\n        <Vertical scroll='both' sizing='stretch' mdxType=\"Vertical\">\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n        </Vertical>\n  </Vertical>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hidden\"\n    }}>{`hidden`}</h2>\n    <p>{`It behaves exactly like you would expect, cutting off overflowing content and not letting you scroll to it: `}</p>\n    <Playground __position={5} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"hidden\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='hidden' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n  </Vertical>\n    </Playground>\n    <p>{`Example use case - Clipping an image at the border, a common pattern in landing pages:`}</p>\n    <Playground __position={6} __code={'{/* use scroll hidden to clip the image at the bottom of this section */}\\n<Vertical\\n  height={100}\\n  scroll=\\\"hidden\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\', position: \\'relative\\' }}\\n>\\n  Cute kitten at bottom\\n  <img\\n    style={{\\n      borderRadius: \\'50%\\',\\n      position: \\'absolute\\',\\n      right: \\'20px\\',\\n      bottom: \\'-20px\\',\\n    }}\\n    src=\\\"http://placekitten.com/g/80/80\\\"\\n  />\\n</Vertical>\\n<Vertical height={100} style={{ backgroundColor: \\'lightpink\\' }}>\\n  Next section\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      Horizontal,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* use scroll hidden to clip the image at the bottom of this section */\n      }\n  <Vertical height={100} scroll='hidden' style={{\n        backgroundColor: \"lightskyblue\",\n        position: 'relative'\n      }} mdxType=\"Vertical\">\n    Cute kitten at bottom\n    <img style={{\n          borderRadius: '50%',\n          position: 'absolute',\n          right: '20px',\n          bottom: '-20px'\n        }} src='http://placekitten.com/g/80/80' />\n  </Vertical>\n  <Vertical height={100} style={{\n        backgroundColor: \"lightpink\"\n      }} mdxType=\"Vertical\">\n    Next section\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}