{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/docs/components/spacers.mdx"],"names":["BlueDiv","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","width","fontSize","Input","_props","buttonClass","fontFamily","cursor","height","padding","border","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","&:hover","&:active","&:focus","outlineColor","Button","otherProps","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","type","layoutProps","MDXLayout","MDXContent","_ref","components","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Horizontal","FlexSpace","VerticalSpace","HorizontalSpace","demos","_demos__WEBPACK_IMPORTED_MODULE_5__","marginTop","href","___WEBPACK_IMPORTED_MODULE_4__","space","horizontalAlign","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-spacers.258efb4b.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal, FlexSpace, VerticalSpace, HorizontalSpace } from '../..'; \nimport * as demos from '../../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"spacers\"\n    }}>{`Spacers`}</h1>\n    <p>{`Spacers are used to add `}<em parentName=\"p\">{`space`}</em>{` to your designs. Spacers should not be abused, but they can be super handy. Consider a simple button on the screen: `}</p>\n    <Playground __position={0} __code={'<demos.Button>Just a button minding its own business</demos.Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <demos.Button>\n    Just a button minding its own business\n  </demos.Button>\n    </Playground>  \n    <p>{`Let's say the design wants you to add some space on top of the button. You can do that easily with `}<inlineCode parentName=\"p\">{`margin-top`}</inlineCode>{`: `}</p>\n    <Playground __position={1} __code={'<demos.Button style={{ marginTop: \\'25px\\' }}>\\n  Just a button minding its own business\\n</demos.Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <demos.Button style={{\n        marginTop: '25px'\n      }}>\n    Just a button minding its own business\n  </demos.Button>\n    </Playground>  \n    <p>{`We've covered issues with using margin (specifically their collapsing nature which makes them hard to manage and maintain reliably) in our `}<a parentName=\"p\" {...{\n        \"href\": \"../principle-spacing/\"\n      }}>{`spacing-principle`}</a>{`. Another issue is in the future this `}<inlineCode parentName=\"p\">{`marginTop`}</inlineCode>{` can easily get lost in code reviews. `}</p>\n    <p>{`So instead you can use a simple `}<inlineCode parentName=\"p\">{`VerticalSpace`}</inlineCode>{`, which doesn't collapse (i.e. magically disappear), and shows up in code reviews: `}</p>\n    <Playground __position={2} __code={'<VerticalSpace space={25} />\\n<demos.Button>Just a button minding its own business</demos.Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <VerticalSpace space={25} mdxType=\"VerticalSpace\" />\n  <demos.Button>\n    Just a button minding its own business\n  </demos.Button>\n    </Playground>  \n    <h1 {...{\n      \"id\": \"horizontalspace\"\n    }}>{`HorizontalSpace`}</h1>\n    <p>{`Takes the `}<inlineCode parentName=\"p\">{`space?:CSSLength`}</inlineCode>{` prop to generate a horizontal space. e.g. you can see the button pushed a bit to the right by a `}<inlineCode parentName=\"p\">{`HorizontalSpace`}</inlineCode>{`: `}</p>\n    <Playground __position={3} __code={'<HorizontalSpace space={25} />\\n<demos.Button>Just a button minding its own business</demos.Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <HorizontalSpace space={25} mdxType=\"HorizontalSpace\" />\n  <demos.Button>\n    Just a button minding its own business\n  </demos.Button>\n    </Playground>  \n    <h1 {...{\n      \"id\": \"verticalspace\"\n    }}>{`VerticalSpace`}</h1>\n    <p>{`Takes the `}<inlineCode parentName=\"p\">{`space?:CSSLength`}</inlineCode>{` prop to generate a vertical space. e.g. you can see the button pushed a bit to the bottom by a `}<inlineCode parentName=\"p\">{`VerticalSpace`}</inlineCode>{`: `}</p>\n    <Playground __position={4} __code={'<VerticalSpace space={25} />\\n<demos.Button>Just a button minding its own business</demos.Button>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <VerticalSpace space={25} mdxType=\"VerticalSpace\" />\n  <demos.Button>\n    Just a button minding its own business\n  </demos.Button>\n    </Playground>  \n    <h1 {...{\n      \"id\": \"flexspace\"\n    }}>{`FlexSpace`}</h1>\n    <p>{`Takes the `}<inlineCode parentName=\"p\">{`flex?:number`}</inlineCode>{` prop (`}<a parentName=\"p\" {...{\n        \"href\": \"../principle-sizing/\"\n      }}>{`flex ratio concept covered in sizing principle`}</a>{`) to generate a flex amount of space.`}</p>\n    <p><inlineCode parentName=\"p\">{`FlexSpace`}</inlineCode>{` comes really handy when you want to split items to the sides (left & right) with a flex space in between as shown below:`}</p>\n    <Playground __position={5} __code={'<Horizontal>\\n  <demos.Button>On left</demos.Button>\\n  <FlexSpace />\\n  <demos.Button>On right</demos.Button>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <demos.Button>\n      On left\n    </demos.Button>\n    <FlexSpace mdxType=\"FlexSpace\" />\n    <demos.Button>\n      On right\n    </demos.Button>\n  </Horizontal>\n    </Playground>\n    <p>{`Here is a button pushed to the bottom of its parent `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` by a preceding `}<inlineCode parentName=\"p\">{`FlexSpace`}</inlineCode>{`: `}</p>\n    <Playground __position={6} __code={'<Vertical height={100}>\\n  <FlexSpace />\\n  <demos.Button>Just a button minding its own business</demos.Button>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={100} mdxType=\"Vertical\">\n    <FlexSpace mdxType=\"FlexSpace\" />\n    <demos.Button>\n      Just a button minding its own business\n    </demos.Button>\n  </Vertical>\n    </Playground>  \n    <p>{`And here is a button pushed to the right of its parent `}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` by a preceding `}<inlineCode parentName=\"p\">{`FlexSpace`}</inlineCode>{`: `}</p>\n    <Playground __position={7} __code={'<Horizontal>\\n  <FlexSpace />\\n  <demos.Button>Just a button minding its own business</demos.Button>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <FlexSpace mdxType=\"FlexSpace\" />\n    <demos.Button>\n      Just a button minding its own business\n    </demos.Button>\n  </Horizontal>\n    </Playground>\n    <p>{`Note that when don't want to split items (all child items are grouped together), you can use the `}<a parentName=\"p\" {...{\n        \"href\": \"../common-types/\"\n      }}>{`alignment properties`}</a>{` on `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`Horizontal`}</inlineCode>{` to achieve the same effect (no `}<inlineCode parentName=\"p\">{`FlexSpace`}</inlineCode>{` in the below example):`}</p>\n    <Playground __position={8} __code={'<Horizontal horizontalAlign=\\\"right\\\">\\n  <demos.Button>Just a button minding its own business</demos.Button>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      FlexSpace,\n      VerticalSpace,\n      HorizontalSpace,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal horizontalAlign='right' mdxType=\"Horizontal\">\n    <demos.Button>\n      Just a button minding its own business\n    </demos.Button>\n  </Horizontal>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}