{"version":3,"sources":["/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.ts","/home/travis/build/basarat/gls/src/styles/box.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx","/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/vertical.mdx"],"names":["React","createContext","VerticalSpacingProvider","Provider","VerticalSpacingConsumer","Consumer","HorizontalSpacingProvider","HorizontalSpacingConsumer","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollDisabled","flexRoot","display","horizontal","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","vertical","content","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","flex","arguments","length","undefined","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","center","end","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent","centerJustified","endJustified","boxUnitToString","value","processGLSProps","props","scroll","_props$styles","styles","otherProps","Object","objectWithoutProperties","objectSpread","className","typestyle","apply","scrollHelpers","concat","toConsumableArray","processFlexProp","prop","_prop$flex","fx","createBoxFunction","mapFromBox","a","b","c","d","padding","top","right","bottom","left","paddingTop","paddingRight","paddingBottom","paddingLeft","border","borderTop","borderRight","borderBottom","borderLeft","width","height","gridSpaced","topAndBottom","leftAndRight","marginTop","marginLeft","$nest","&>*","Grid","_processGLSProps","spacing","_props$spacing","slicedToArray","klass","classes","react","assign","data-comment","displayName","verticallySpaced","margin","marginBottom","&>*:last-child","Vertical","horizontalAlign","verticalAlign","verticalSpacing","horizontallySpaced","marginRight","Horizontal","horizontalSpacing","Flex","Content","_processGLSProps2","__webpack_require__","__webpack_exports__","vertical_Vertical","horizontal_Horizontal","containers_Flex","BlueDiv","react_default","createElement","style","backgroundColor","children","PinkDiv","layoutProps","MDXLayout","MDXContent","_ref","components","index_es","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","demos","src","demos_BlueDiv","isMDXComponent"],"mappings":"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","file":"static/js/src-vertical.c3fbdda3.js","sourcesContent":["import { types } from \"typestyle\";\nimport React from 'react';\n\n/** \n * Default spacing used in the Vertical axis\n */\nexport const {\n  Provider: VerticalSpacingProvider,\n  Consumer: VerticalSpacingConsumer\n} = React.createContext(24);\n\n/** \n * Default spacing used in the Horizontal axis\n */\nexport const {\n  Provider: HorizontalSpacingProvider,\n  Consumer: HorizontalSpacingConsumer\n} = React.createContext(24);\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type BoxUnit = number | string;\n\n/**\n * A box function is something that can take:\n * - all\n * - topAndBottom + leftRight\n * - top + right + bottom + left\n */\nexport interface BoxFunction<T> {\n  (all: BoxUnit): T;\n  (topAndBottom: BoxUnit, leftAndRight: BoxUnit): T;\n  (top: BoxUnit, right: BoxUnit, bottom: BoxUnit, left: BoxUnit): T;\n}\n\n/** \n * Props accepted by all our components \n */\nexport interface GLSProps extends React.HTMLProps<HTMLDivElement> {\n  scroll?: 'both' | 'vertical' | 'horizontal' | 'disabled';\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Constrained set of supported flex ratios\n */\nexport type FlexGrow =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12;\n\n/** \n * Specifies `flex` interaction with parent \n */\nexport interface FlexProp {\n  /** \n   * Specifies `flex` interaction with parent \n   */\n  flex?:\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | FlexGrow;\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * If you expect a child somewhere down in the tree to scroll\n * you need to tell the browser to prevent a scroll bar. \n * Example use : `parent(scrollDisabled) > child(scroll)`\n */\nexport const scrollDisabled: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\nimport { FlexGrow } from \"../common\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\n\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: FlexGrow = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { BoxUnit, GLSProps, FlexProp } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function boxUnitToString(value: BoxUnit): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Converts common suppoted props into a `klass` + remainder \n */\nexport function processGLSProps<T extends GLSProps>(props: T): Omit<T, 'scroll' | 'styles'> {\n  const { scroll, styles = [], ...otherProps } = props;\n\n  return {\n    ...otherProps,\n    className: typestyle.classes(\n      props.className,\n      typestyle.style(\n        /** Scroll */\n        props.scroll != null && (\n          props.scroll == 'disabled' ? scrollHelpers.scrollDisabled\n            : props.scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n              : props.scroll == 'vertical' ? scrollHelpers.scrollVertical\n                : scrollHelpers.scrollBoth\n        ),\n        /** Any user customizations */\n        ...styles,\n      )\n    ),\n  }\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function processFlexProp(prop: FlexProp): typestyle.types.CSSProperties {\n  const { flex: fx = 'content' } = prop;\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n","import { BoxFunction, BoxUnit } from \"../common\";\nimport { boxUnitToString } from \"../internal/utils\";\n\n/**\n * @param mapFromBox function that expects a full `BoxUnit` set\n * @returns a function that can work with any partial `BoxUnit`\n */\nfunction createBoxFunction<T>(mapFromBox: (a: BoxUnit, b: BoxUnit, c: BoxUnit, d: BoxUnit) => T): BoxFunction<T> {\n  const result: BoxFunction<T> = (a: BoxUnit, b?: BoxUnit, c?: BoxUnit, d?: BoxUnit) => {\n    if (b === undefined && c === undefined && d === undefined) {\n      b = c = d = a;\n    }\n    else if (c === undefined && d === undefined) {\n      c = a;\n      d = b;\n    }\n\n    return mapFromBox(\n      boxUnitToString(a),\n      boxUnitToString(b!),\n      boxUnitToString(c!),\n      boxUnitToString(d!)\n    );\n  }\n  return result;\n}\n\n/** \n * Padding \n */\nexport const padding = createBoxFunction((top, right, bottom, left) => {\n  return {\n    paddingTop: top,\n    paddingRight: right,\n    paddingBottom: bottom,\n    paddingLeft: left\n  };\n});\n\n/** \n * Border \n */\nexport const border = createBoxFunction((top, right, bottom, left) => {\n  return {\n    borderTop: top,\n    borderRight: right,\n    borderBottom: bottom,\n    borderLeft: left\n  };\n});\n\n/** \n * Width \n */\nexport const width = (value: BoxUnit) => {\n  return { width: boxUnitToString(value) };\n}\n\n/** \n * Height\n */\nexport const height = (value: BoxUnit) => {\n  return { height: boxUnitToString(value) };\n}\n","import * as typestyle from 'typestyle';\nimport { classes } from 'typestyle';\nimport * as React from 'react';\nimport { BoxUnit, GLSProps, VerticalSpacingConsumer, HorizontalSpacingConsumer } from '../common';\nimport { boxUnitToString, processGLSProps } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight = topAndBottom): string {\n  const vertical = boxUnitToString(topAndBottom);\n  const horizontal = boxUnitToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      $nest: {\n        '&>*': {\n          marginTop: vertical,\n          marginLeft: horizontal,\n        }\n      }\n    }\n  );\n};\n\nexport interface GridProps extends GLSProps {\n  spacing?:\n  | BoxUnit\n  | [BoxUnit, BoxUnit]\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { className, ...otherProps } = processGLSProps(props);\n\n  /** \n   * Figure out the spacing requested \n   */\n  let horizontal!: BoxUnit;\n  let vertical!: BoxUnit;\n  if (props.spacing != null) {\n    delete (otherProps as any).spacing;\n    if (typeof props.spacing == 'number' || typeof props.spacing == 'string') {\n      horizontal = props.spacing;\n      vertical = horizontal;\n    } else {\n      [vertical, horizontal] = props.spacing;\n    }\n    const klass = classes(\n      className,\n      gridSpaced(vertical, horizontal),\n    );\n    return (\n      <div {...otherProps} className={klass} data-comment='Grid' />\n    );\n  } else {\n    return (<VerticalSpacingConsumer>{\n      (vertical) => {\n        return (\n          <HorizontalSpacingConsumer>\n            {(horizontal) => {\n              const klass = classes(\n                className,\n                gridSpaced(vertical, horizontal),\n              );\n              return (\n                <div {...otherProps} className={klass} data-comment='Grid' />\n              );\n            }}\n          </HorizontalSpacingConsumer>\n        )\n      }\n    }</VerticalSpacingConsumer>);\n  }\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, VerticalSpacingConsumer, BoxUnit, FlexProp } from '../common';\nimport { processGLSProps, boxUnitToString, processFlexProp } from '../internal/utils';\nimport { types } from 'typestyle';\nimport { vertical, centerJustified, endJustified, end, center } from '../styles/flex';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface VerticalProps extends GLSProps, FlexProp {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    flex,\n    ...otherProps\n  } = processGLSProps(props);\n\n  return (\n    <VerticalSpacingConsumer>{\n      (verticalSpacing) => {\n        const klass = typestyle.classes(\n          className,\n          typestyle.style(\n            processFlexProp(props),\n            vertical,\n            verticallySpaced(props.spacing == null ? verticalSpacing : props.spacing),\n            verticalAlign == 'center' && centerJustified,\n            verticalAlign == 'bottom' && endJustified,\n            horizontalAlign == 'right' && end,\n            horizontalAlign == 'center' && center,\n          )\n        );\n        return <div {...otherProps} className={klass} data-comment='Vertical' />\n      }\n    }</VerticalSpacingConsumer>\n  );\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, HorizontalSpacingConsumer, FlexProp, BoxUnit } from '../common';\nimport { processGLSProps, processFlexProp, boxUnitToString } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end } from '../styles/flex';\nimport { types } from 'typestyle';\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface HorizontalProps extends GLSProps, FlexProp {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    className,\n    horizontalAlign,\n    verticalAlign,\n    flex,\n    ...otherProps } = processGLSProps(props);\n\n  return (\n    <HorizontalSpacingConsumer>{\n      (horizontalSpacing) => {\n        const klass =\n          typestyle.classes(\n            className,\n            typestyle.style(\n              processFlexProp(props),\n              horizontal,\n              horizontallySpaced(props.spacing == null ? horizontalSpacing : props.spacing),\n              horizontalAlign == 'right' && endJustified,\n              horizontalAlign == 'center' && centerJustified,\n              verticalAlign == 'center' && center,\n              verticalAlign == 'bottom' && end,\n            )\n          );\n        return <div {...otherProps} className={klass} data-comment='Horizontal' />\n      }\n    }</HorizontalSpacingConsumer>\n  );\n}\nHorizontal.displayName = 'Horizontal';","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, FlexGrow } from '../common';\nimport { processGLSProps } from '../internal/utils';\nimport { content, flex } from '../styles/flex';\n\nexport interface FlexProps extends GLSProps {\n  flex?: FlexGrow;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const { className, ...otherProps } = processGLSProps(props);\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(flex(props.flex))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Flex' />\n  );\n};\nFlex.displayName = 'Flex';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<GLSProps> = (props) => {\n  const { className, ...otherProps } = processGLSProps(props);\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(content)\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='Content' />\n  );\n};\nContent.displayName = 'Content';\n","/** Common */\nexport * from './common';\n\n/** Styles */\nexport * from './styles/box';\nexport * from './styles/scroll';\n\n/** Components */\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n","/** \n * Demo components for docs \n */\n\nimport React from \"react\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Vertical } from '.'; \nimport * as demos from './demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h1>\n    <p>{`Lays out children in a vertically spaced layout.`}</p>\n    <Playground __position={0} __code={'<Vertical>\\n  <demos.BlueDiv>Hello</demos.BlueDiv>\\n  <div>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Vertical,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.BlueDiv>Hello</demos.BlueDiv>\n    <div>World</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}