{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/docs/principles/scrolling.mdx"],"names":["__webpack_require__","r","__webpack_exports__","d","BlueDiv","PinkDiv","Label","Input","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","typestyle__WEBPACK_IMPORTED_MODULE_1__","props","a","createElement","style","backgroundColor","children","labelClass","typestyle","className","inputClass","width","fontSize","_props","layoutProps","MDXLayout","MDXContent","_ref","components","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Content","demos","___WEBPACK_IMPORTED_MODULE_4__","height","href","scroll","spacing","textAlign","sizing","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-principles-scrolling.b46a8541.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n *  Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Content } from '../..'; \nimport * as demos from '../../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"scrolling\"\n    }}>{`Scrolling`}</h1>\n    <p>{`Setting up when a scroll bar should show is not particularly hard, but worth covering. We provide the following scrolling options as a prop to our container components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface ScrollProp {\n  scroll?:\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"overflow\"\n    }}>{`overflow`}</h2>\n    <p>{`By default content will overflow its container. In the example below we force the container to be small (with explicit sizing 80px) and then throw a bunch of content inside it.`}</p>\n    <Playground __position={0} __code={'{/* force a small size container */}\\n<Vertical height={80} style={{ backgroundColor: \\'lightskyblue\\' }}>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n  </Vertical>\n    </Playground>\n    <p>{`There is no need to be alarmed by this default value. You normally `}<em parentName=\"p\">{`don't use explicit sizing`}</em>{` (covered in the `}<a parentName=\"p\" {...{\n        \"href\": \"../principle-sizing/\"\n      }}>{`sizing principle`}</a>{`). Content will overflow to the body, and the browser will add a scrollbar on the body for you (by default).`}</p>\n    <h2 {...{\n      \"id\": \"both--vertical--horizontal\"\n    }}>{`both | vertical | horizontal`}</h2>\n    <p>{`Add `}<inlineCode parentName=\"p\">{`scroll: 'both'| 'vertical' | 'horizontal'`}</inlineCode>{` to finely control where you want your scroll bar to appear. `}</p>\n    <p>{`Some configuration handled for you: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`The scrollbar will only show if the content actually overflow.`}</li>\n      <li parentName=\"ul\">{`The scrolling section is touch-smooth-scroll enabled.`}</li>\n    </ul>\n    <p>{`Here is an example where content doesn't overflow: `}</p>\n    <Playground __position={1} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"both\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Not enough content to cause overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='both' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Not enough content to cause overflow</div>\n  </Vertical>\n    </Playground>\n    <p>{`Here is an example where content does overflow: `}</p>\n    <Playground __position={2} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"both\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='both' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow</div>\n  </Vertical>\n    </Playground>\n    <p>{`You can use it to fine tune the scroll bar location e.g. below we want the header to stay outside the scroll bar:`}</p>\n    <Playground __position={3} __code={'<Vertical\\n  height={200}\\n  spacing={0}\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  {/* You want this header to stick to top */}\\n  <Content\\n    style={{\\n      backgroundColor: \\'darkorange\\',\\n      textAlign: \\'center\\',\\n      height: \\'50px\\',\\n      fontSize: \\'35px\\',\\n    }}\\n  >\\n    Header\\n  </Content>\\n\\n  {/* You only want this section to scroll */}\\n  <Vertical scroll=\\\"both\\\" sizing=\\\"flex\\\">\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n    <div style={{ backgroundColor: \\'lightpink\\' }}>\\n      Main section with lots of text to make it overflow\\n    </div>\\n  </Vertical>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical height={200} spacing={0} style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n        {\n          /* You want this header to stick to top */\n        }\n        <Content style={{\n          backgroundColor: 'darkorange',\n          textAlign: 'center',\n          height: '50px',\n          fontSize: '35px'\n        }} mdxType=\"Content\">Header</Content>\n\n        {\n          /* You only want this section to scroll */\n        }\n        <Vertical scroll='both' sizing='flex' mdxType=\"Vertical\">\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n  <div style={{\n            backgroundColor: 'lightpink'\n          }}>Main section with lots of text to make it overflow</div>\n        </Vertical>\n  </Vertical>\n    </Playground>\n    <h2 {...{\n      \"id\": \"hidden\"\n    }}>{`hidden`}</h2>\n    <p>{`It behaves exactly like you would expect, cutting off overflowing content and not letting you scroll to it: `}</p>\n    <Playground __position={4} __code={'{/* force a small size container */}\\n<Vertical\\n  height={80}\\n  scroll=\\\"hidden\\\"\\n  style={{ backgroundColor: \\'lightskyblue\\' }}\\n>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n  <div style={{ backgroundColor: \\'lightpink\\' }}>\\n    Lots of content to make it overflow, but it will get hidden\\n  </div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Content,\n      demos\n    }} mdxType=\"Playground\">\n  {\n        /* force a small size container */\n      }\n  <Vertical height={80} scroll='hidden' style={{\n        backgroundColor: \"lightskyblue\"\n      }} mdxType=\"Vertical\">\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n    <div style={{\n          backgroundColor: 'lightpink'\n        }}>Lots of content to make it overflow, but it will get hidden</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}