(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"./src/docs/common/commonTypes.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",function(){return l});var a=n("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),o=(n("./node_modules/react/index.js"),n("./node_modules/@mdx-js/react/dist/index.es.js")),i=n("./node_modules/docz/dist/index.esm.js"),p=n("./src/index.tsx"),r={},s="wrapper";function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(s,Object.assign({},r,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"common-types-and-props"},"Common Types and Props"),Object(o.b)("p",null,"We have a common set of props that are supported by a number of components. These will be mentioned in the docs for the individual components as well. We present them below with a reference component."),Object(o.b)("p",null,"Before we do that, we present some common types referenced by the props."),Object(o.b)("h2",{id:"csslength"},"CSSLength"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"type CSSLength = number | string"),". "),Object(o.b)("p",null,"Examples: "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"5 (implies 5px)"),Object(o.b)("li",{parentName:"ul"},"'5rem'")),Object(o.b)("h2",{id:"cssbox"},"CSSBox"),Object(o.b)("p",null,"Various versions of providing common shorthand properties"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"export type CSSBox =\n  /** top,right,left,bottom */\n  | CSSLength\n  /** [top & bottom, left & right] */\n  | [CSSLength, CSSLength]\n  /** [top,right,bottom,left] */\n  | [CSSLength, CSSLength, CSSLength, CSSLength]\n")),Object(o.b)("p",null,"e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"5")," (means ",Object(o.b)("inlineCode",{parentName:"p"},"5px")," top,right,left,bottom), ",Object(o.b)("inlineCode",{parentName:"p"},"['5rem','10px']")," (means ",Object(o.b)("inlineCode",{parentName:"p"},"5rem")," top & bottom, ",Object(o.b)("inlineCode",{parentName:"p"},"10px")," left & right), ",Object(o.b)("inlineCode",{parentName:"p"},"[10,5,'10rem', 15]")," (means ",Object(o.b)("inlineCode",{parentName:"p"},"10px")," top, ",Object(o.b)("inlineCode",{parentName:"p"},"5px")," right, ",Object(o.b)("inlineCode",{parentName:"p"},"10rem")," bottom, ",Object(o.b)("inlineCode",{parentName:"p"},"15px")," left)."),Object(o.b)("h2",{id:"spacingprop"},"SpacingProp"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"export interface SpacingProp {\n  /** Spacing between each child */\n  spacing?: CSSLength,\n}\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"spacing?: CSSLength")," Controls spacing between children (",Object(o.b)("a",Object.assign({parentName:"li"},{href:"../principle-spacing/"}),"concepts covered in spacing principle"),"). e.g. ",Object(o.b)("inlineCode",{parentName:"li"},"spacing={10}")," gives us:")),Object(o.b)(i.c,{__position:0,__code:"<Vertical spacing={10}>\n  <div style={{ backgroundColor: 'lightskyblue' }}>Hello</div>\n  <div style={{ backgroundColor: 'lightpink' }}>World</div>\n  <div style={{ backgroundColor: 'darkorange' }}>Again</div>\n</Vertical>",__scope:{props:this?this.props:n,Playground:i.c,Vertical:p.h},mdxType:"Playground"},Object(o.b)(p.h,{spacing:10,mdxType:"Vertical"},Object(o.b)("div",{style:{backgroundColor:"lightskyblue"}},"Hello"),Object(o.b)("div",{style:{backgroundColor:"lightpink"}},"World"),Object(o.b)("div",{style:{backgroundColor:"darkorange"}},"Again"))),Object(o.b)("h2",{id:"sizeprops"},"SizeProps"),Object(o.b)("p",null,"The size props (",Object(o.b)("inlineCode",{parentName:"p"},"height,minHeight,maxHeight,width,minWidth,maxWidth"),") allow for explicit size control as covered in the ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"../principle-sizing/"}),"sizing principle")," section."),Object(o.b)("h2",{id:"sizingprop"},"SizingProp"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"sizing")," prop is covered in the ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"../principle-sizing/"}),"sizing principle")," section."),Object(o.b)("h2",{id:"paddingprop"},"PaddingProp"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: CSSBox,\n}\n")),Object(o.b)("p",null,"Allows you to specifiy padding as a ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"#cssbox"}),"CSSBox"),". Using padding effectively is covered in the ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"../principle-spacing/"}),"spacing principle")," section."),Object(o.b)("h2",{id:"scrollprop"},"ScrollProp"),Object(o.b)("p",null,"Contains ",Object(o.b)("inlineCode",{parentName:"p"},"scroll?")," member. Type definition and effective use is coverd in the ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"../principle-scrolling/"}),"scrolling principle")," section."),Object(o.b)("h2",{id:"stylesprop"},"StylesProp"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/** \n * Support for mixing in TypeStyle NestedCSSProperties (style function arguments) \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"styles")," props is an array that gets passed as arguments to the ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://typestyle.github.io/#/core/style"}),Object(o.b)("inlineCode",{parentName:"a"},"typestyle.style")," function"),"."),Object(o.b)("p",null,"E.g you can customize the hover color: "),Object(o.b)(i.c,{__position:1,__code:"<Vertical\n  height={100}\n  styles={[\n    {\n      transition: '.3s',\n      backgroundColor: 'limegreen',\n      $nest: {\n        '&:hover': { backgroundColor: 'gold' },\n      },\n    },\n  ]}\n/>",__scope:{props:this?this.props:n,Playground:i.c,Vertical:p.h},mdxType:"Playground"},Object(o.b)(p.h,{height:100,styles:[{transition:".3s",backgroundColor:"limegreen",$nest:{"&:hover":{backgroundColor:"gold"}}}],mdxType:"Vertical"})),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Any falsy array members will be safely ignored just like the ",Object(o.b)("inlineCode",{parentName:"p"},"typestyle.style")," function.")),Object(o.b)("h2",{id:"styleprop"},"StyleProp"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/** \n * Support for React `style` property\n */\nexport interface StyleProp {\n  style?: React.CSSProperties\n}\n")),Object(o.b)("p",null,"Any custom react ",Object(o.b)("inlineCode",{parentName:"p"},"style")," you want to pass in. "),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note that React ",Object(o.b)("inlineCode",{parentName:"p"},"style")," doesn't support things not supported by the html style attribute (e.g. media queries or pseudo elements). For that you can use ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"#stylesprop"}),"StylesProp"),".")),Object(o.b)("h2",{id:"classnameprop"},"ClassNameProp"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/** \n * Support for React `className` property \n */\nexport interface ClassNameProp { \n  className?: string\n}\n")),Object(o.b)("p",null,"Allows you to add your own CSS classnames to the element."),Object(o.b)("h2",{id:"tagprops"},"TagProps"),Object(o.b)("pre",null,Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-ts"}),"/** \n * Props supported by the underlying tag \n */\nexport interface TagProps {\n  tag?: {\n    name?: 'div' /** default */ | 'a' | 'button' // etc.\n    props?: React.HTMLProps // props passed to the tag\n  }\n}\n")),Object(o.b)("p",null,"Gives you direct access to the underlying react tag for any customization you might want e.g. generate a ",Object(o.b)("inlineCode",{parentName:"p"},"Vertical")," as a ",Object(o.b)("inlineCode",{parentName:"p"},"section")," tag (instead of the default ",Object(o.b)("inlineCode",{parentName:"p"},"div")," tag):"),Object(o.b)(i.c,{__position:2,__code:"<Vertical\n  tag={{ name: 'section' }}\n  height={100}\n  style={{ backgroundColor: 'limegreen' }}\n/>",__scope:{props:this?this.props:n,Playground:i.c,Vertical:p.h},mdxType:"Playground"},Object(o.b)(p.h,{tag:{name:"section"},height:100,style:{backgroundColor:"limegreen"},mdxType:"Vertical"})),Object(o.b)("h2",{id:"baseprops"},"BaseProps"),Object(o.b)("p",null,"Objective: A consistent set of customization options. Collects the following props into a common type:"),Object(o.b)("p",null,"Members:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"PaddingProp"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#paddingprop"}),"Specifies padding"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ScrollProp"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#scrollprop"}),"Specify scrolling behaviours"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"SizeProps"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#sizeprops"}),"Sepecify explicit size control"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"StylesProp"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#stylesprop"}),"Allows you to use TypeStyle CSS mixins"),". "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"StyleProp"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#styleprop"}),"Allows you to specify React.CSSProperties"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"ClassNameProp"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#classnameprop"}),"Allows you to pass in CSS class names"),"."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"TagProps"),": ",Object(o.b)("a",Object.assign({parentName:"li"},{href:"#tagprops"}),"Allows tag control"),".")))}l&&l===Object(l)&&Object.isExtensible(l)&&Object.defineProperty(l,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/docs/common/commonTypes.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=src-docs-common-common-types.fbf16aa72cdb4f602ee2.js.map