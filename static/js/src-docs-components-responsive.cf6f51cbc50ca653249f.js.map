{"version":3,"sources":["/home/travis/build/basarat/gls/src/docs/components/responsive.mdx"],"names":["layoutProps","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","this","Playground","Responsive","Stretch","Horizontal","Vertical","GLSDefaults","demos","breakpoint","style","backgroundColor","minWidth","sizing","horizontalAlign","fontSize","Provider","value","spacing","vertical","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-responsive.859386cc.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Responsive, Stretch, Horizontal, Vertical, GLSDefaults } from '../..'; \nimport * as demos from '../../demos'; \n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"responsive\"\n    }}>{`Responsive`}</h1>\n    <p>{`Lays out children in a vertically or horizontally spaced layout based on given breakpoint (`}<a parentName=\"p\" {...{\n        \"href\": \"../defaults/\"\n      }}>{`default is 480`}</a>{`). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You'll have to resize the browser window to see the following examples in action üëç`}</p>\n    </blockquote>\n    <p>{`As an example, resize your browser window to see the following layout change from horizontal to vertical at 600px:`}</p>\n    <Playground __position={1} __code={'<Responsive breakpoint={600}>\\n  <Stretch style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</Stretch>\\n  <Stretch style={{ backgroundColor: \\'lightpink\\' }}>World</Stretch>\\n</Responsive>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Responsive,\n      Stretch,\n      Horizontal,\n      Vertical,\n      GLSDefaults,\n      demos\n    }} mdxType=\"Playground\">\n  <Responsive breakpoint={600} mdxType=\"Responsive\">\n    <Stretch style={{\n          backgroundColor: \"lightskyblue\"\n        }} mdxType=\"Stretch\">Hello</Stretch>\n    <Stretch style={{\n          backgroundColor: \"lightpink\"\n        }} mdxType=\"Stretch\">World</Stretch>\n  </Responsive>\n    </Playground>\n    <p>{`Here is an example with left and right buttons collapsing into two rows at breakpoint: `}</p>\n    <Playground __position={2} __code={'<Responsive breakpoint={650} minWidth={250}>\\n  <Horizontal sizing=\\\"stretch\\\">\\n    <demos.Button>Back 1</demos.Button>\\n    <demos.Button>Back 2</demos.Button>\\n  </Horizontal>\\n  <Horizontal sizing=\\\"stretch\\\" horizontalAlign=\\\"right\\\">\\n    <demos.Button>Next 1</demos.Button>\\n    <demos.Button>Next 2</demos.Button>\\n  </Horizontal>\\n</Responsive>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Responsive,\n      Stretch,\n      Horizontal,\n      Vertical,\n      GLSDefaults,\n      demos\n    }} mdxType=\"Playground\">\n  <Responsive breakpoint={650} minWidth={250} mdxType=\"Responsive\">\n    <Horizontal sizing=\"stretch\" mdxType=\"Horizontal\">\n      <demos.Button>Back 1</demos.Button>\n      <demos.Button>Back 2</demos.Button>\n    </Horizontal>\n    <Horizontal sizing=\"stretch\" horizontalAlign=\"right\" mdxType=\"Horizontal\">\n      <demos.Button>Next 1</demos.Button>\n      <demos.Button>Next 2</demos.Button>\n    </Horizontal>\n  </Responsive>\n    </Playground>\n    <p>{`Another similar example is a common layout in designs is tabular data that collapses:`}</p>\n    <Playground __position={3} __code={'<Vertical style={{ fontSize: \\'24px\\' }}>\\n  <GLSDefaults.Provider value={{ breakpoint: 650 }}>\\n    <Responsive>\\n      <Horizontal sizing=\\\"stretch\\\">Price</Horizontal>\\n      <Horizontal sizing=\\\"stretch\\\" horizontalAlign=\\\"right\\\">\\n        12.34\\n      </Horizontal>\\n    </Responsive>\\n    <Responsive>\\n      <Horizontal sizing=\\\"stretch\\\">GST</Horizontal>\\n      <Horizontal sizing=\\\"stretch\\\" horizontalAlign=\\\"right\\\">\\n        1.23\\n      </Horizontal>\\n    </Responsive>\\n  </GLSDefaults.Provider>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Responsive,\n      Stretch,\n      Horizontal,\n      Vertical,\n      GLSDefaults,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical style={{\n        fontSize: '24px'\n      }} mdxType=\"Vertical\">\n    <GLSDefaults.Provider value={{\n          breakpoint: 650\n        }}>\n      <Responsive mdxType=\"Responsive\">\n        <Horizontal sizing=\"stretch\" mdxType=\"Horizontal\">Price</Horizontal>\n        <Horizontal sizing=\"stretch\" horizontalAlign=\"right\" mdxType=\"Horizontal\">12.34</Horizontal>\n      </Responsive>\n      <Responsive mdxType=\"Responsive\">\n        <Horizontal sizing=\"stretch\" mdxType=\"Horizontal\">GST</Horizontal>\n        <Horizontal sizing=\"stretch\" horizontalAlign=\"right\" mdxType=\"Horizontal\">1.23</Horizontal>\n      </Responsive>\n    </GLSDefaults.Provider>\n  </Vertical>\n    </Playground>\n    <p>{`Another example is form inputs: `}</p>\n    <Playground __position={4} __code={'<Responsive breakpoint={600}>\\n  <Vertical sizing=\\\"stretch\\\" spacing={5}>\\n    <demos.Label>First name</demos.Label>\\n    <demos.Input />\\n  </Vertical>\\n  <Vertical sizing=\\\"stretch\\\" spacing={5}>\\n    <demos.Label>Last name</demos.Label>\\n    <demos.Input />\\n  </Vertical>\\n</Responsive>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Responsive,\n      Stretch,\n      Horizontal,\n      Vertical,\n      GLSDefaults,\n      demos\n    }} mdxType=\"Playground\">\n  <Responsive breakpoint={600} mdxType=\"Responsive\">\n    <Vertical sizing='stretch' spacing={5} mdxType=\"Vertical\">\n      <demos.Label>First name</demos.Label>\n      <demos.Input />\n    </Vertical>\n    <Vertical sizing='stretch' spacing={5} mdxType=\"Vertical\">\n      <demos.Label>Last name</demos.Label>\n      <demos.Input />\n    </Vertical>\n  </Responsive>\n    </Playground>\n    <h1 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h1>\n    <p>{`Responsive props are categorized into `}<em parentName=\"p\">{`RootOnly`}</em>{`, `}<em parentName=\"p\">{`Modes`}</em>{` (vertical/horizontal mode) and `}<em parentName=\"p\">{`Overridable`}</em>{`.`}</p>\n    <h2 {...{\n      \"id\": \"responsiverootonlyprops\"\n    }}>{`ResponsiveRootOnlyProps`}</h2>\n    <p>{`These are props that impact the root tag generated by the `}<inlineCode parentName=\"p\">{`Responsive`}</inlineCode>{`. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`/** \n * Props that can only be specified at the root of the \\`Responsive\\` \n */\nexport interface ResponsiveRootOnlyProps extends\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps,\n  BreakpointProp {\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`StylesProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`StyleProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ClassNameProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`TagProps`}</inlineCode>{` are all covered `}<a parentName=\"p\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`in the common props section`}</a>{`.`}</p>\n    </blockquote>\n    <p><inlineCode parentName=\"p\">{`BreakpointProp`}</inlineCode>{` is defined as: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface BreakpointProp {\n  /** \n   * windowWidth <= breakpoint : it is vertical (mobile)\n   * else                      : it is horizontal (desktop)\n   **/\n  breakpoint?: number;\n}\n`}</code></pre>\n    <p>{`The default `}<inlineCode parentName=\"p\">{`breakpoint`}</inlineCode>{` is 480 `}<a parentName=\"p\" {...{\n        \"href\": \"../defaults/\"\n      }}>{`and can be configured`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"responsivemodesprops\"\n    }}>{`ResponsiveModesProps`}</h2>\n    <p><inlineCode parentName=\"p\">{`ResponsiveModesProps`}</inlineCode>{` consists of `}<inlineCode parentName=\"p\">{`vertical`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`horizontal`}</inlineCode>{` mode customizations: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface ResponsiveModesProps {\n  /** Vertical mode configuration */\n  vertical?: ResponsiveVerticalModeProps;\n  /** Horizontal mode configuration */\n  horizontal?: ResponsiveHorizontalModeProps;\n}\n`}</code></pre>\n    <p>{`The alignment options differ by mode: `}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`vertical`}</inlineCode>{` supports the same alignment options offered the `}<a parentName=\"li\" {...{\n          \"href\": \"../vertical/\"\n        }}>{`Vertical component`}</a>{`. `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`horizontal`}</inlineCode>{` supports the same alignment options offered the `}<a parentName=\"li\" {...{\n          \"href\": \"../horizontal/\"\n        }}>{`Horizontal component`}</a>{`.`}</li>\n    </ul>\n    <p>{`Both modes support the following common props: `}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StylesProp`}</inlineCode>{`: allowing you to provide custom `}<inlineCode parentName=\"li\">{`styles`}</inlineCode>{` (as covered in `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`common props`}</a>{`) per mode.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResponsiveOverridableProps`}</inlineCode>{`: Overridable props (covered in its own section below).`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"responsiveoverridableprops\"\n    }}>{`ResponsiveOverridableProps`}</h2>\n    <p>{`You can specify these props at the root, and optionally change their values for the specific mode. Some ways you could use these props:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Only at the root (used for both modes).`}</li>\n      <li parentName=\"ul\">{`For specfic modes (used only in those mode).`}</li>\n      <li parentName=\"ul\">{`Combination: root + override-in-specific-mode.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`/** \n * Props that can be specified at\n * - root of \\`Responsive\\` \n * - and overridden for \\`vertical\\`/\\`horizontal\\` modes\n */\nexport interface ResponsiveOverridableProps extends\n  ScrollProp,\n  PaddingProp,\n  SizeProps,\n  SizingProp,\n  SpacingProp {\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\"><inlineCode parentName=\"p\">{`ScrollProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`PaddingProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`SizeProps`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`SizingProp`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`SpacingProp`}</inlineCode>{` are all covered `}<a parentName=\"p\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`in the common props section`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`As an example, below we have a responsive with a default spacing of `}<inlineCode parentName=\"p\">{`30px`}</inlineCode>{` but in vertical mode it has it changed to `}<inlineCode parentName=\"p\">{`10px`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`<Responsive spacing=30 vertical={spacing:10}/>`}</inlineCode>{`): `}</p>\n    <Playground __position={5} __code={'<Responsive\\n  breakpoint={600}\\n  style={{ backgroundColor: \\'gold\\' }}\\n  spacing={30}\\n  vertical={{ spacing: 10 }}\\n>\\n  <Stretch style={{ backgroundColor: \\'lightskyblue\\' }}>Hello</Stretch>\\n  <Stretch style={{ backgroundColor: \\'darkorange\\' }}>World</Stretch>\\n</Responsive>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Responsive,\n      Stretch,\n      Horizontal,\n      Vertical,\n      GLSDefaults,\n      demos\n    }} mdxType=\"Playground\">\n  <Responsive breakpoint={600} style={{\n        backgroundColor: 'gold'\n      }} spacing={30} vertical={{\n        spacing: 10\n      }} mdxType=\"Responsive\">\n    <Stretch style={{\n          backgroundColor: \"lightskyblue\"\n        }} mdxType=\"Stretch\">Hello</Stretch>\n    <Stretch style={{\n          backgroundColor: \"darkorange\"\n        }} mdxType=\"Stretch\">World</Stretch>\n  </Responsive>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}