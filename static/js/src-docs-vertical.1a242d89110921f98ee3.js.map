{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/docs/vertical.mdx","/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/styles/box.ts","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/index.tsx"],"names":["BlueDiv","props","react_default","a","createElement","style","backgroundColor","children","PinkDiv","layoutProps","MDXLayout","MDXContent","_ref","components","Object","objectWithoutProperties","index_es","assign","mdxType","id","index_esm","__position","__code","__scope","this","Playground","Props","Vertical","demos","src","demos_BlueDiv","isMDXComponent","GLSDefaults","React","createContext","verticalSpacing","horizontalSpacing","scrollBoth","-webkit-overflow-scrolling","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollDisabled","flexRoot","display","horizontal","extend","-ms-flex-direction","-webkit-flex-direction","flexDirection","vertical","content","-ms-flex-negative","-webkit-flex-shrink","flexShrink","flexBasis","flex","arguments","length","undefined","-ms-flex","-webkit-flex","start","-ms-flex-align","-webkit-align-items","alignItems","center","end","startJustified","-ms-flex-pack","-webkit-justify-content","justifyContent","centerJustified","endJustified","boxUnitToString","value","createGLSTag","klass","comment","className","scroll","_props$styles","styles","_props$tag","tag","otherProps","name","objectSpread","typestyle","apply","scrollHelpers","concat","toConsumableArray","data-comment","processFlexProp","prop","_prop$flex","fx","useGLSDefaults","context","useContext","createBoxFunction","mapFromBox","b","c","d","padding","top","right","bottom","left","paddingTop","paddingRight","paddingBottom","paddingLeft","border","borderTop","borderRight","borderBottom","borderLeft","width","height","gridSpaced","topAndBottom","leftAndRight","marginTop","marginLeft","$nest","&>*","Grid","spacing","_useGLSDefaults","_spacing","slicedToArray","displayName","verticallySpaced","margin","marginBottom","&>*:last-child","horizontalAlign","verticalAlign","horizontallySpaced","marginRight","Horizontal","Flex","Content","__webpack_require__","__webpack_exports__","vertical_Vertical","horizontal_Horizontal","containers_Flex"],"mappings":"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","file":"static/js/src-docs-vertical.f343d099.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { Vertical } from '..'; \nimport * as demos from '../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"vertical\"\n    }}>{`Vertical`}</h1>\n    <p>{`Lays out children in a vertically spaced layout.`}</p>\n    <Playground __position={0} __code={'<Vertical>\\n  <demos.BlueDiv>Hello</demos.BlueDiv>\\n  <div>World</div>\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      Vertical,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.BlueDiv>Hello</demos.BlueDiv>\n    <div>World</div>\n  </Vertical>\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  ","import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: BoxUnit,\n  horizontalSpacing?: BoxUnit,\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type BoxUnit = number | string;\n\n/**\n * A box function is something that can take:\n * - all\n * - topAndBottom + leftRight\n * - top + right + bottom + left\n */\nexport interface BoxFunction<T> {\n  (all: BoxUnit): T;\n  (topAndBottom: BoxUnit, leftAndRight: BoxUnit): T;\n  (top: BoxUnit, right: BoxUnit, bottom: BoxUnit, left: BoxUnit): T;\n}\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?: 'both' | 'vertical' | 'horizontal' | 'disabled';\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps {\n  tag:\n  {\n    /** name default: div */\n    props: Omit<React.HTMLProps<HTMLDivElement>, 'className'>;\n  }\n  | {\n    name: 'div';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className'>;\n  }\n  | {\n    name: 'button';\n    props?: Omit<React.HTMLProps<HTMLButtonElement>, 'className'>;\n  }\n  | {\n    name?: 'input';\n    props?: Omit<React.HTMLProps<HTMLInputElement>, 'className'>;\n  }\n  | {\n    name?: 'select';\n    props?: Omit<React.HTMLProps<HTMLSelectElement>, 'className'>;\n  }\n  | {\n    name?: 'section';\n    props?: Omit<React.HTMLProps<HTMLDivElement>, 'className'>;\n  }\n  | {\n    name?: 'a';\n    props?: Omit<React.HTMLProps<HTMLAnchorElement>, 'className'>;\n  }\n  // TODO: heading paragraph\n}\n\n/** \n * Add to add support for mixing in NestedCSSProperties \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface GLSProps extends ScrollProp, StylesProp, TagProps {\n  className: string,\n}\n\n/** \n * Constrained set of supported flex ratios\n */\nexport type FlexGrow =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12;\n\n/** \n * Specifies `flex` interaction with parent \n */\nexport interface FlexProp {\n  /** \n   * Specifies `flex` interaction with parent \n   */\n  flex?:\n  | 'content' /** default */\n  | 'flex' /** Same as `1` */\n  | FlexGrow;\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * If you expect a child somewhere down in the tree to scroll\n * you need to tell the browser to prevent a scroll bar. \n * Example use : `parent(scrollDisabled) > child(scroll)`\n */\nexport const scrollDisabled: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\nimport { FlexGrow } from \"../common\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\n\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const flex = (flex: FlexGrow = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': flex,\n    '-webkit-flex': flex,\n    flex: flex\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { BoxUnit, GLSProps, FlexProp, GLSDefaults } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, flex } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function boxUnitToString(value: BoxUnit): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Creates the appropriate tag\n * - Does any processing of GLSProps if required\n * - Then creates the approvate react tag\n */\nexport function createGLSTag<T extends GLSProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debuggin */\n  comment: string,\n) {\n  const { className, scroll, styles = [], tag = {}, ...otherProps } = props;\n\n  return React.createElement(\n    (('name' in tag) && tag.name != null) ? tag.name : 'div',\n    {\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && (\n            scroll == 'disabled' ? scrollHelpers.scrollDisabled\n              : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n                : scroll == 'vertical' ? scrollHelpers.scrollVertical\n                  : scrollHelpers.scrollBoth\n          ),\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n      ...(tag.props != null ? props.tag.props : {}),\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the flex interaction \n */\nexport function processFlexProp(prop: FlexProp): typestyle.types.CSSProperties {\n  const { flex: fx = 'content' } = prop;\n  return fx == 'content' ? content\n    : fx == 'flex' ? flex(1)\n      : flex(fx);\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const context = useContext(GLSDefaults);\n  return {\n    verticalSpacing: context.verticalSpacing == null ? 24 : context.verticalSpacing,\n    horizontalSpacing: context.horizontalSpacing == null ? 24 : context.horizontalSpacing\n  }\n}\n","import { BoxFunction, BoxUnit } from \"../common\";\nimport { boxUnitToString } from \"../internal/utils\";\n\n/**\n * @param mapFromBox function that expects a full `BoxUnit` set\n * @returns a function that can work with any partial `BoxUnit`\n */\nfunction createBoxFunction<T>(mapFromBox: (a: BoxUnit, b: BoxUnit, c: BoxUnit, d: BoxUnit) => T): BoxFunction<T> {\n  const result: BoxFunction<T> = (a: BoxUnit, b?: BoxUnit, c?: BoxUnit, d?: BoxUnit) => {\n    if (b === undefined && c === undefined && d === undefined) {\n      b = c = d = a;\n    }\n    else if (c === undefined && d === undefined) {\n      c = a;\n      d = b;\n    }\n\n    return mapFromBox(\n      boxUnitToString(a),\n      boxUnitToString(b!),\n      boxUnitToString(c!),\n      boxUnitToString(d!)\n    );\n  }\n  return result;\n}\n\n/** \n * Padding \n */\nexport const padding = createBoxFunction((top, right, bottom, left) => {\n  return {\n    paddingTop: top,\n    paddingRight: right,\n    paddingBottom: bottom,\n    paddingLeft: left\n  };\n});\n\n/** \n * Border \n */\nexport const border = createBoxFunction((top, right, bottom, left) => {\n  return {\n    borderTop: top,\n    borderRight: right,\n    borderBottom: bottom,\n    borderLeft: left\n  };\n});\n\n/** \n * Width \n */\nexport const width = (value: BoxUnit) => {\n  return { width: boxUnitToString(value) };\n}\n\n/** \n * Height\n */\nexport const height = (value: BoxUnit) => {\n  return { height: boxUnitToString(value) };\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BoxUnit, GLSProps } from '../common';\nimport { boxUnitToString, createGLSTag, useGLSDefaults } from '../internal/utils';\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight: BoxUnit): string;\nexport function gridSpaced(topAndBottom: BoxUnit, leftAndRight = topAndBottom): string {\n  const vertical = boxUnitToString(topAndBottom);\n  const horizontal = boxUnitToString(leftAndRight);\n  return typestyle.style(\n    {\n      marginTop: '-' + vertical,\n      marginLeft: '-' + horizontal,\n      $nest: {\n        '&>*': {\n          marginTop: vertical,\n          marginLeft: horizontal,\n        }\n      }\n    }\n  );\n};\n\nexport interface GridProps extends GLSProps {\n  spacing?:\n  | BoxUnit\n  | [BoxUnit, BoxUnit]\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid: React.FC<GridProps> = (props) => {\n  const { spacing, ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = gridSpaced(verticalSpacing, horizontalSpacing);\n  return (\n    createGLSTag(otherProps, klass, 'Grid')\n  );\n}\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, BoxUnit, FlexProp } from '../common';\nimport { createGLSTag, boxUnitToString, processFlexProp, useGLSDefaults } from '../internal/utils';\nimport { types } from 'typestyle';\nimport { vertical, centerJustified, endJustified, end, center } from '../styles/flex';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginBottom: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginBottom: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface VerticalProps extends GLSProps, FlexProp {\n  spacing?: number,\n\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical: React.FC<VerticalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    flex,\n    ...otherProps\n  } = props;\n\n  const { verticalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processFlexProp(props),\n    vertical,\n    verticallySpaced(props.spacing == null ? verticalSpacing : props.spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'right' && end,\n    horizontalAlign == 'center' && center,\n  );\n  return createGLSTag(otherProps, klass, 'Vertical');\n}\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, FlexProp, BoxUnit } from '../common';\nimport { createGLSTag, processFlexProp, boxUnitToString, useGLSDefaults } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end } from '../styles/flex';\nimport { types } from 'typestyle';\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: BoxUnit) => {\n  const spacing = boxUnitToString(margin);\n  return (\n    {\n      '&>*': {\n        marginRight: spacing + ' !important'\n      },\n      '&>*:last-child': {\n        marginRight: '0px !important',\n      }\n    } as types.CSSProperties\n  );\n};\n\nexport interface HorizontalProps extends GLSProps, FlexProp {\n  spacing?: number,\n\n  horizontalAlign?: 'left' /** default */ | 'center' | 'right',\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal: React.FC<HorizontalProps> = (props) => {\n  const {\n    horizontalAlign,\n    verticalAlign,\n    flex,\n    ...otherProps } = props;\n\n  const { horizontalSpacing } = useGLSDefaults();\n\n  const klass = typestyle.style(\n    processFlexProp(props),\n    horizontal,\n    horizontallySpaced(props.spacing == null ? horizontalSpacing : props.spacing),\n    horizontalAlign == 'right' && endJustified,\n    horizontalAlign == 'center' && centerJustified,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n  );\n  return createGLSTag(otherProps, klass, 'Horizontal');\n}\nHorizontal.displayName = 'Horizontal';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { GLSProps, FlexGrow } from '../common';\nimport { createGLSTag } from '../internal/utils';\nimport { content, flex } from '../styles/flex';\n\nexport interface FlexProps extends GLSProps {\n  flex?: FlexGrow;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Flex: React.FC<FlexProps> = (props) => {\n  const klass = typestyle.style(flex(props.flex))\n  return createGLSTag(props, klass, 'Flex');\n};\nFlex.displayName = 'Flex';\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content: React.FC<GLSProps> = (props) => {\n  const klass = typestyle.style(content)\n  return createGLSTag(props, klass, 'Content');\n};\nContent.displayName = 'Content';\n","/** Common */\nexport * from './common';\n\n/** Styles */\nexport * from './styles/box';\nexport * from './styles/scroll';\n\n/** Components */\nexport * from './components/grid';\nexport * from './components/vertical';\nexport * from './components/horizontal';\nexport * from './components/containers';\n"],"sourceRoot":""}