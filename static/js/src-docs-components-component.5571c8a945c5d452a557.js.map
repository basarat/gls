{"version":3,"sources":["/home/travis/build/basarat/gls/src/docs/components/component.mdx"],"names":["layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","_home_travis_build_basarat_gls_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","_demos__WEBPACK_IMPORTED_MODULE_5__","id","parentName","docz__WEBPACK_IMPORTED_MODULE_3__","__position","__code","__scope","this","Playground","Vertical","Horizontal","Responsive","demos","placeholder","href","___WEBPACK_IMPORTED_MODULE_4__","sizing","style","height","className","breakpoint","isMDXComponent"],"mappings":"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","file":"static/js/src-docs-components-component.46d71634.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground } from 'docz';\nimport { Vertical, Horizontal, Responsive } from '../..'; \nimport * as demos from '../../demos'; \n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <demos.Star />\n    <h1 {...{\n      \"id\": \"component\"\n    }}>{`Component`}</h1>\n    <p>{`GLS can easily work with components without any special requirements, so you can bring your own or add explicit support for `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{`. We cover these below.`}</p>\n    <h2 {...{\n      \"id\": \"bring-your-own\"\n    }}>{`Bring your own`}</h2>\n    <p>{`For example, here is a simple `}<inlineCode parentName=\"p\">{`<input/>`}</inlineCode>{` without any gls use: `}</p>\n    <Playground __position={1} __code={'<input placeholder=\\\"Example\\\" />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <input placeholder='Example' />\n    </Playground>\n    <p>{`You can easily place these (raw `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{`s) in a `}<a parentName=\"p\" {...{\n        \"href\": \"../vertical/\"\n      }}>{`vertical`}</a>{` and you can see that they get nicely vertically-spaced, and `}<inlineCode parentName=\"p\">{`stretch`}</inlineCode>{` nicely (thanks to `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`'s default `}<inlineCode parentName=\"p\">{`horizontalAlignment`}</inlineCode>{`):`}</p>\n    <Playground __position={2} __code={'<Vertical>\\n  <input placeholder=\\\"Example\\\" />\\n  <input placeholder=\\\"Example\\\" />\\n  <input placeholder=\\\"Example\\\" />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <input placeholder='Example' />\n    <input placeholder='Example' />\n    <input placeholder='Example' />\n  </Vertical>\n    </Playground>\n    <p>{`You can even have a `}<em parentName=\"p\">{`single`}</em>{` input in a `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` and it essentially stretches (horizontally) to match the parent: `}</p>\n    <Playground __position={3} __code={'<Vertical>\\n  <input placeholder=\\\"Example\\\" />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <input placeholder='Example' />\n  </Vertical>\n    </Playground>\n    <p>{`This allows you to create a reusable (`}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{`) pair that you can provide various `}<a parentName=\"p\" {...{\n        \"href\": \"../common-types/\"\n      }}>{`BaseProps`}</a>{` for (using the `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{` pair).`}</p>\n    <p>{`And you can control various props using either of the `}<inlineCode parentName=\"p\">{`Vertical`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` e.g. you can `}<inlineCode parentName=\"p\">{`flex`}</inlineCode>{` on the Vertical (as explained in the `}<a parentName=\"p\" {...{\n        \"href\": \"../princile-sizing/\"\n      }}>{`sizing principle`}</a>{`) allowing two flexing `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{`s in a Horziontal: `}</p>\n    <Playground __position={4} __code={'<Horizontal>\\n  <Vertical sizing=\\\"flex\\\">\\n    <input placeholder=\\\"Example\\\" />\\n  </Vertical>\\n  <Vertical sizing=\\\"flex\\\">\\n    <input placeholder=\\\"Example\\\" />\\n  </Vertical>\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <Vertical sizing=\"flex\" mdxType=\"Vertical\">\n      <input placeholder='Example' />\n    </Vertical>\n    <Vertical sizing=\"flex\" mdxType=\"Vertical\">\n      <input placeholder='Example' />\n    </Vertical>\n  </Horizontal>\n    </Playground>\n    <p>{`You can props to the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` as well e.g. an explicit height can be set: `}</p>\n    <Playground __position={5} __code={'<Vertical sizing=\\\"flex\\\">\\n  <input placeholder=\\\"Example\\\" style={{ height: \\'30px\\' }} />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical sizing=\"flex\" mdxType=\"Vertical\">\n    <input placeholder='Example' style={{\n          height: '30px'\n        }} />\n  </Vertical>\n    </Playground>\n    <p>{`Of course you can create a component out of the `}<inlineCode parentName=\"p\">{`Vertical>input`}</inlineCode>{` pair. However if you want to compose a component that supports various gls props in a single tag, you can use `}<inlineCode parentName=\"p\">{`gls.ComponentProps`}</inlineCode>{` / `}<inlineCode parentName=\"p\">{`gls.component`}</inlineCode>{` which we cover next. `}</p>\n    <h2 {...{\n      \"id\": \"componentprops\"\n    }}>{`ComponentProps`}</h2>\n    <p><inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` is a grouping of a set of common props that allow you to hook into the layout principles provided by gls:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ClassNameProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Allows you to pass in CSS class names`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ScrollProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify scrolling behaviours`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`PaddingProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specifies padding`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SizingProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify implicit size control`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SizeProps`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Specify explicit size control`}</a>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`StylesProp`}</inlineCode>{`: `}<a parentName=\"li\" {...{\n          \"href\": \"../common-types/\"\n        }}>{`Allows you to use TypeStyle CSS mixins`}</a>{`. `}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"component-1\"\n    }}>{`component`}</h2>\n    <p>{`There is `}<inlineCode parentName=\"p\">{`gls.component(props) => props`}</inlineCode>{` function which is a simple map:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`OtherProps + ComponentProps (subset or fullset) + { className? }\n  => OtherProps + { className (including existing className if present) }\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`gls.component`}</inlineCode>{` function that takes any set (subset or fullset) of `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` and returns props with any `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` omitted + processsed and placed into the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` prop (taking into account any existing `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` as well). You then use the `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` in your component.`}</p>\n    <p>{`We look at examples below.`}</p>\n    <h2 {...{\n      \"id\": \"creating-a-component\"\n    }}>{`Creating a component`}</h2>\n    <p>{`You can use any partial set of `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` in your component e.g here we just use the `}<inlineCode parentName=\"p\">{`SizeProps`}</inlineCode>{`: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface OnlySomeProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.SizeProps {\n}\n\nexport const OnlySomePropsButton: React.FC<OnlySomeProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n`}</code></pre>\n    <p>{`or you can use all the `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{`: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface AllTheProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.ComponentProps {\n}\nexport const AllThePropsButton: React.FC<AllTheProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n`}</code></pre>\n    <p>{`Any props that are not a part of `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` are yours to handle and returned as is from `}<inlineCode parentName=\"p\">{`gls.component`}</inlineCode>{` e.g. below you can see the `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` prop passing-through the `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` function without any processing: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface LimitedButtonProps extends\n  gls.ComponentProps {\n  /** Turns red if in error state */\n  error?: boolean\n}\nexport const LimitedButton: React.FC<LimitedButtonProps> = (props) => {\n  /** \n   * Generates a className from component props \n   * + returns the rest\n   **/\n  const {className, error} = gls.component(props);\n  \n  /** Handle the error */\n  const errorStyle = error ? { backgroundColor: 'red' } : {};\n  \n  return <button className={className} style={errorStyle} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"defaults\"\n    }}>{`defaults`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` function takes a second `}<inlineCode parentName=\"p\">{`defaults: ComponentProps`}</inlineCode>{` argument.`}</p>\n    <p>{`You can use it to provide defaults for any `}<inlineCode parentName=\"p\">{`ComponentProps`}</inlineCode>{` e.g.\nit is good practice to have an `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` with default `}<inlineCode parentName=\"p\">{`sizing:'flex'`}</inlineCode>{`(`}<a parentName=\"p\" {...{\n        \"href\": \"../guidance-components/\"\n      }}>{`later we also cover best layout practices for components`}</a>{`): `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`export interface DefaultInputProps extends\n  React.InputHTMLAttributes<HTMLInputElement>,\n  gls.ComponentProps {\n}\n\nexport const DefaultInput: React.FC<DefaultInputProps> = (props) => {\n  const { className, ...otherProps } =\n    gls.component(props, { sizing: 'flex' });\n\n  return <input className={className} {...otherProps} />\n};\n`}</code></pre>\n    <p>{`Such an input behaves nicely in common vertical, horizontal and responsive layouts: `}</p>\n    <Playground __position={6} __code={'<Vertical>\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n</Vertical>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Vertical mdxType=\"Vertical\">\n    <demos.DefaultInput placeholder=\"Example\" />\n    <demos.DefaultInput placeholder=\"Example\" />\n  </Vertical>\n    </Playground>\n    <Playground __position={7} __code={'<Horizontal>\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n</Horizontal>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Horizontal mdxType=\"Horizontal\">\n    <demos.DefaultInput placeholder=\"Example\" />\n    <demos.DefaultInput placeholder=\"Example\" />\n  </Horizontal>\n    </Playground>\n    <Playground __position={8} __code={'<Responsive breakpoint={650}>\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n  <demos.DefaultInput placeholder=\\\"Example\\\" />\\n</Responsive>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Vertical,\n      Horizontal,\n      Responsive,\n      demos\n    }} mdxType=\"Playground\">\n  <Responsive breakpoint={650} mdxType=\"Responsive\">\n    <demos.DefaultInput placeholder=\"Example\" />\n    <demos.DefaultInput placeholder=\"Example\" />\n  </Responsive>\n    </Playground>\n    <h2 {...{\n      \"id\": \"using-third-party-libraries\"\n    }}>{`Using third party libraries`}</h2>\n    <p>{`Since the `}<inlineCode parentName=\"p\">{`component`}</inlineCode>{` function just returns a `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{` you can easily use its features with any third party components that support the className prop e.g. material-ui`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`// Use \\`gls.component\\`\nconst className = gls.component({width: '100%'});\n\n// With any library\nimport Button from '@material-ui/core/Button';\n\n<Button className={className} variant=\"contained\" color=\"primary\">\n  Hello World\n</Button>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}