{"version":3,"sources":["/home/travis/build/basarat/gls/src/demos/index.tsx","/home/travis/build/basarat/gls/src/common.tsx","/home/travis/build/basarat/gls/src/base/normalize.ts","/home/travis/build/basarat/gls/src/base/base.tsx","/home/travis/build/basarat/gls/src/styles/scroll.ts","/home/travis/build/basarat/gls/src/styles/flex.ts","/home/travis/build/basarat/gls/src/internal/utils.tsx","/home/travis/build/basarat/gls/src/component/component.tsx","/home/travis/build/basarat/gls/src/components/containers.tsx","/home/travis/build/basarat/gls/src/styles/spacing.ts","/home/travis/build/basarat/gls/src/components/vertical.tsx","/home/travis/build/basarat/gls/src/components/horizontal.tsx","/home/travis/build/basarat/gls/src/components/responsive.tsx","/home/travis/build/basarat/gls/src/components/grid.tsx","/home/travis/build/basarat/gls/src/components/spacers.tsx"],"names":["Star","link","style","marginTop","marginRight","href","target","src","border","marginBottom","scrolling","width","height","BlueDiv","props","backgroundColor","children","PinkDiv","labelClass","typestyle","Label","className","inputClass","fontSize","Input","_props","buttonClass","fontFamily","cursor","padding","borderRadius","color","textDecoration","lineHeight","outline","transition","display","$nest","outlineColor","Button","otherProps","type","DemoProfile","size","OnlySomePropsButton","processedProps","gls","AllThePropsButton","LimitedButton","errorStyle","error","DefaultInput","sizing","ExampleInput","GLSDefaults","React","createContext","verticalSpacing","horizontalSpacing","breakpoint","normalize","cssRaw","trim","base","rootSelector","cssRule","boxSizing","margin","flexDirection","scrollBoth","overflow","scrollHorizontal","overflowX","scrollVertical","overflowY","scrollHidden","flexRoot","horizontal","extend","horizontalReverse","vertical","wrap","flexWrap","content","flexShrink","flexBasis","stretch","flex","start","alignItems","center","end","baseline","startJustified","justifyContent","centerJustified","endJustified","betweenJustified","aroundJustified","crossAxisStretch","alignSelf","crossAxisStart","crossAxisCenter","crossAxisEnd","cssLengthToString","value","_processPadding","box","name","Array","isArray","length","map","topBottom","leftRight","top","right","bottom","left","toReturn","boxToFullBox","_processScroll","scroll","scrollHelpers","createBaseTag","klass","comment","ref","minHeight","maxHeight","minWidth","maxWidth","styles","tag","createElement","_processSizing","fx","_processCrossAxisAlign","align","useGLSDefaults","useContext","component","defaults","stylesToProcess","crossAxisAlign","result","push","concat","Stretch","verticalAlign","horizontalAlign","displayName","Content","wrapInSpan","Box","verticallySpaced","horizontallySpaced","marginLeft","horizontallyReverseSpaced","gridSpaced","topAndBottom","leftAndRight","Vertical","spacing","Horizontal","reverse","Responsive","forwardRef","defaultVerticalSpacing","defaultHorizontalSpacing","bp","verticalOptions","horizontalOptions","verticalScroll","horizontalScroll","verticalPadding","horizontalPadding","verticalHeight","horizontalHeight","verticalMinHeight","horizontalMinHeight","verticalMaxHeight","horizontalMaxHeight","verticalWidth","horizontalWidth","verticalMinWidth","horizontalMinWidth","verticalMaxWidth","horizontalMaxWidth","verticalSizing","horizontalSizing","verticalCrossAxisAlign","horizontalCrossAxisAlign","verticalModeVerticalAlign","verticalModeHorizontalAlign","horizontalModeVerticalAlign","horizontalModeHorizontalAlign","Grid","justify","StretchSpacer","data-comment","HorizontalSpacer","space","VerticalSpacer"],"mappings":"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","file":"static/js/src-docs-base-base~src-docs-common-common-types~src-docs-common-defaults~src-docs-components-compone~c8b2120e.aafefafb.js","sourcesContent":["/** \n * Demo components for docs \n */\n\nimport React from \"react\";\nimport * as typestyle from \"typestyle\";\nimport * as gls from \"..\";\n\nexport const Star: React.FC = () => {\n  const link = \"https://ghbtns.com/github-btn.html?user=basarat&repo=gls&type=star&count=true\"\n  return (\n    <div style={{ marginTop: '20px' }}>\n      <a\n        style={{ marginRight: '15px' }}\n        href={link}\n        target=\"_blank\">Powered by your ⭐s</a>\n      <iframe\n        src={link}\n        style={{ border: 'none', marginBottom: '-3px' }}\n        scrolling=\"0\"\n        width=\"170px\" height=\"20px\" />\n    </div>\n  );\n}\n\nexport const BlueDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightskyblue\" }} children={props.children} />;\nexport const PinkDiv: React.FC = (props) => <div style={{ backgroundColor: \"lightpink\" }} children={props.children} />;\n\n/** \n * Label \n */\nconst labelClass = typestyle.style({\n});\nexport const Label: React.FC = (props) => {\n  return <label className={labelClass} children={props.children} />;\n}\n\n/** \n * Input\n */\nconst inputClass = typestyle.style({\n  width: 'calc(100% - 5px)' /** Docz weirdness */,\n  fontSize: '20px',\n});\nexport const Input: React.FC = (_props) => {\n  return <input className={inputClass} />;\n}\n\n/** \n * Button \n */\nexport const buttonClass = typestyle.style(\n  {\n    fontFamily: 'helvetica',\n    cursor: 'pointer',\n    height: 'auto',\n    padding: \"12px 30px 11px\",\n    border: `1px solid #333`,\n    borderRadius: '3px',\n    color: `white`,\n    backgroundColor: '#333',\n    fontSize: '15px',\n    textDecoration: \"none\",\n    lineHeight: \"1em\",\n    outline: 'none',\n    transition: 'color .2s, background-color .2s',\n    display: 'inline-block',\n    $nest: {\n      '&:hover': {\n        backgroundColor: '#666',\n      },\n      '&:active': {\n        backgroundColor: '#666',\n      },\n      '&:focus': {\n        outline: 'thin dotted',\n        outlineColor: `#333`\n      }\n    }\n  });\nexport const Button\n  = (props: React.HTMLProps<HTMLButtonElement>) => {\n    const { className, ...otherProps } = props;\n    return (\n      <button {...otherProps}\n        type=\"button\"\n        className={typestyle.classes(buttonClass, props.className)}\n      />\n    );\n  };\n\n\nexport const DemoProfile: React.FC<{ size: number }> = ({ size }) => {\n  return (\n    <img\n      style={{\n        borderRadius: '50%',\n        // Explicit size\n        width: `${size}px`,\n        height: `${size}px`,\n      }}\n      src={`http://placekitten.com/g/${size}/${size}`} />\n  );\n}\n\n\n/** \n * Example creating a button component \n */\nexport interface OnlySomeProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.SizeProps {\n}\nexport const OnlySomePropsButton: React.FC<OnlySomeProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n\nexport interface AllTheProps extends\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  gls.ComponentProps {\n}\nexport const AllThePropsButton: React.FC<AllTheProps> = (props) => {\n  const processedProps = gls.component(props);\n\n  return <button {...processedProps} />;\n}\n\nexport interface LimitedButtonProps extends\n  gls.ComponentProps {\n  /** Turns red if in error state */\n  error?: boolean\n}\nexport const LimitedButton: React.FC<LimitedButtonProps> = (props) => {\n  /** \n   * Generates a className from component props \n   * + returns the rest\n   **/\n  const { className, error } = gls.component(props);\n\n  /** Handle the error */\n  const errorStyle = error ? { backgroundColor: 'red' } : {};\n\n  return <button className={className} style={errorStyle} />;\n}\n\n\n/** \n * Example creating a default component prop \n */\nexport interface DefaultInputProps extends\n  React.InputHTMLAttributes<HTMLInputElement>,\n  gls.ComponentProps {\n}\n\nexport const DefaultInput: React.FC<DefaultInputProps> = (props) => {\n  const { className, ...otherProps } =\n    gls.component(props, { sizing: 'stretch' });\n\n  return <input className={className} {...otherProps} />\n};\n\n/** \n * Example creating an input component \n */\nexport interface ExampleInputProps extends\n  React.InputHTMLAttributes<HTMLInputElement>,\n  gls.ComponentProps {\n}\n\nexport const ExampleInput: React.FC<ExampleInputProps> = (props) => {\n  const { className, ...otherProps } =\n    gls.component(props, { sizing: 'stretch' });\n\n  return <input className={className} {...otherProps} />\n};\n","import { types } from \"typestyle\";\nimport React from 'react';\n\n/**\n * Default values for components \n */\nexport const GLSDefaults = React.createContext<{\n  verticalSpacing?: CSSLength,\n  horizontalSpacing?: CSSLength,\n  breakpoint?: number\n}>({\n  verticalSpacing: 24,\n  horizontalSpacing: 24,\n  breakpoint: 480,\n});\n\n/** \n * Example: \n * - 5 (implies 5px)\n * - '5rem'\n */\nexport type CSSLength = number | string;\n\n/** \n * Various versions of providing common shorthand properties\n */\nexport type CSSBox =\n  /** top,right,left,bottom */\n  | CSSLength\n  /** [top & bottom, left & right] */\n  | [CSSLength, CSSLength]\n  /** [top,right,bottom,left] */\n  | [CSSLength, CSSLength, CSSLength, CSSLength]\n  /** Individual */\n  | { top?: CSSLength, right?: CSSLength, bottom?: CSSLength, left?: CSSLength }\n\nexport type Sizing =\n  | 'content' /** default */\n  | 'stretch' /** Same as `1` */\n  | number /** A flex ratio */\n\n/** \n * Specifies sizing interaction\n */\nexport interface SizingProp {\n  /** \n   * Specifies `sizing` interaction in the main axis\n   */\n  sizing?: Sizing,\n}\n\nexport interface CrossAxisAlignProp {\n  /** \n   * Allows an item to override its alignment in the parents cross axis\n   * e.g. \n   * - allows an item to stretch horizontally in a Vertical(horizontalAlign='left')\n   * - allows an item to stretch vertically in a Horizontal(verticalAlign='top')\n   */\n  crossAxisAlign?: 'start' | 'center' | 'end' | 'stretch';\n}\n\nexport interface SpacingProp {\n  /** Spacing between each child */\n  spacing?: CSSLength,\n}\n\nexport interface VerticalsAlignProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'top' /** default */ | 'center' | 'bottom',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'stretch' /** default */ | 'left' | 'center' | 'right',\n}\n\nexport interface HorizontalsAlignProps {\n  /** Child alignment in vertical axis */\n  verticalAlign?: 'stretch' /** default */ | 'top' | 'center' | 'bottom' | 'baseline',\n  /** Child alignment in horizontal axis */\n  horizontalAlign?: 'left' /** default if `reverse = false` */ | 'center' | 'right' /** default if `reverse = true` */,\n}\n\n/** \n * Props accepted by all our container components\n */\nexport interface BaseProps extends\n  ScrollProp,\n  PaddingProp,\n  SizeProps,\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps {\n}\n\n/** \n * Add support for padding\n */\nexport interface PaddingProp {\n  padding?: CSSBox,\n}\n\n\n/** \n * Add support for explicit size\n */\nexport interface SizeProps {\n  height?: CSSLength,\n  minHeight?: CSSLength,\n  maxHeight?: CSSLength,\n\n  width?: CSSLength,\n  minWidth?: CSSLength,\n  maxWidth?: CSSLength,\n}\n\nexport type Scroll =\n  | 'overflow' /** default */\n  | 'both'\n  | 'vertical'\n  | 'horizontal'\n  | 'hidden';\n\n/** \n * Add on anything to add support for controlling the scroll\n */\nexport interface ScrollProp {\n  scroll?: Scroll;\n}\n\n/** \n * Support for mixing in TypeStyle NestedCSSProperties (style function arguments) \n */\nexport interface StylesProp {\n  styles?: (types.NestedCSSProperties | null | false)[];\n}\n\n/** \n * Support for React `style` property\n */\nexport interface StyleProp {\n  style?: React.CSSProperties\n}\n\n/** \n * Support for React `className` property \n */\nexport interface ClassNameProp {\n  className?: string\n}\n\n/** \n * Props supported by the underlying tag \n */\nexport interface TagProps extends Omit<React.HTMLProps<HTMLDivElement>, 'className' | 'style'> {\n  tag?: string,\n}\n","import { cssRaw } from 'typestyle';\n\n/**\n * Adds normalize.css\n */\nexport function normalize() {\n  /**\n   * To update:\n   * - https://cdnjs.com/libraries/normalize\n   * - then latest. Currently https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css\n   * - then copy paste raw below\n   * - remove:\n   *   - the heading comment\n   *   - the sourcemap at the end of the file\n   *\n   * Release\n   * - All changes to normalize will be considered minor\n   **/\n  cssRaw(\n    `\n    html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}\n    `.trim()\n  );\n}\n","import { cssRule } from \"typestyle\";\nimport { normalize } from \"./normalize\";\n\n/** \n * Setups: \n * - normalize \n * - border box\n * - fill body into page\n * - fill root-selector into body\n */\nexport function base(rootSelector?: string) {\n  /** normalize */\n  normalize();\n\n  /** Use border box */\n  cssRule('html', {\n    '-moz-box-sizing': 'border-box',\n    '-webkit-box-sizing': 'border-box',\n    boxSizing: 'border-box'\n  });\n  cssRule('*,*:before,*:after', {\n    boxSizing: 'inherit',\n  });\n\n  /** Use full window size for application */\n  cssRule('html, body', {\n    height: '100%',\n    width: '100%',\n    padding: 0,\n    margin: 0\n  });\n\n  if (rootSelector) {\n    /** Root should fill parent and start a vertical flex layout */\n    cssRule(rootSelector, {\n      width: '100%',\n      height: '100%',\n      display: [\n        '-ms-flexbox',\n        '-webkit-flex',\n        'flex',\n      ],\n      '-ms-flex-direction': 'column',\n      '-webkit-flex-direction': 'column',\n      flexDirection: 'column'\n    });\n  }\n}\n","/**\n * @module scroll helpers\n */\nimport { types } from 'typestyle';\n\nexport const scrollBoth: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflow: 'auto'\n};\n\nexport const scrollHorizontal: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowX: 'auto'\n};\n\nexport const scrollVertical: types.NestedCSSProperties = {\n  '-webkit-overflow-scrolling': 'touch',\n  overflowY: 'auto'\n};\n\n/**\n * Cuts off the exccess content and disables the scroll bar\n */\nexport const scrollHidden: types.NestedCSSProperties = {\n  overflow: 'hidden'\n};\n","import { types, extend } from \"typestyle\";\n\n/**\n * \n * If you have more than one child prefer horizontal,vertical\n */\nexport const flexRoot: types.CSSProperties = {\n  display: [\n    '-ms-flexbox',\n    '-webkit-flex',\n    'flex',\n  ]\n};\n\nexport const horizontal: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row',\n  '-webkit-flex-direction': 'row',\n  flexDirection: 'row'\n});\nexport const horizontalReverse: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'row-reverse',\n  '-webkit-flex-direction': 'row-reverse',\n  flexDirection: 'row-reverse'\n});\nexport const vertical: types.CSSProperties = extend(flexRoot, {\n  '-ms-flex-direction': 'column',\n  '-webkit-flex-direction': 'column',\n  flexDirection: 'column'\n});\nexport const wrap: types.CSSProperties = {\n  '-ms-flex-wrap': 'wrap',\n  '-webkit-flex-wrap': 'wrap',\n  flexWrap: 'wrap'\n} as types.CSSProperties;\n\n/**\n * If you want items to be sized automatically by their children use this\n * This is because of a bug in various flexbox implementations: http://philipwalton.com/articles/normalizing-cross-browser-flexbox-bugs/\n * Specifically bug 1 : https://github.com/philipwalton/flexbugs#1-minimum-content-sizing-of-flex-items-not-honored\n */\nexport const content: types.CSSProperties = {\n  '-ms-flex-negative': 0,\n  '-webkit-flex-shrink': 0,\n  flexShrink: 0,\n  flexBasis: 'auto',\n} as types.CSSProperties;\n\nexport const stretch = (stretch: number = 1): types.CSSProperties => {\n  return {\n    '-ms-flex': stretch,\n    '-webkit-flex': stretch,\n    flex: stretch\n  };\n};\n\n/////////////////////////////\n// Alignment in cross axis //\n/////////////////////////////\n\nexport const start: types.CSSProperties = {\n  '-ms-flex-align': 'start',\n  '-webkit-align-items': 'flex-start',\n  alignItems: 'flex-start'\n} as types.CSSProperties;\nexport const center: types.CSSProperties = {\n  '-ms-flex-align': 'center',\n  '-webkit-align-items': 'center',\n  alignItems: 'center'\n} as types.CSSProperties;\nexport const end: types.CSSProperties = {\n  '-ms-flex-align': 'end',\n  '-webkit-align-items': 'flex-end',\n  alignItems: 'flex-end'\n} as types.CSSProperties;\nexport const baseline: types.CSSProperties = {\n  '-ms-flex-align': 'baseline',\n  '-webkit-align-items': 'baseline',\n  alignItems: 'baseline'\n} as types.CSSProperties;\n\n////////////////////////////\n// Alignment in main axis //\n////////////////////////////\n\nexport const startJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'start',\n  '-webkit-justify-content': 'flex-start',\n  justifyContent: 'flex-start'\n} as types.CSSProperties;\nexport const centerJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'center',\n  '-webkit-justify-content': 'center',\n  justifyContent: 'center'\n} as types.CSSProperties;\nexport const endJustified: types.CSSProperties = {\n  '-ms-flex-pack': 'end',\n  '-webkit-justify-content': 'flex-end',\n  justifyContent: 'flex-end'\n} as types.CSSProperties;\n\n/////////////////////////////////////////////////////////////\n// Alignment in main axis - specific to our Grid component //\n/////////////////////////////////////////////////////////////\nexport const betweenJustified = {\n  '-ms-flex-pack': 'justify',\n  '-webkit-justify-content': 'space-between',\n  justifyContent: 'space-between'\n} as types.CSSProperties;\n\nexport const aroundJustified = {\n  '-ms-flex-pack': 'distribute',\n  '-webkit-justify-content': 'space-around',\n  justifyContent: 'space-around'\n} as types.CSSProperties;\n\n////////////////////\n// Self alignment //\n////////////////////\nexport const crossAxisStretch = {\n  '-ms-flex-item-align': 'stretch',\n  '-webkit-align-self': 'stretch',\n  alignSelf: 'stretch',\n} as types.CSSProperties;\nexport const crossAxisStart = {\n  '-ms-flex-item-align': 'start',\n  '-webkit-align-self': 'flex-start',\n  alignSelf: 'flex-start'\n} as types.CSSProperties;\nexport const crossAxisCenter = {\n  '-ms-flex-item-align': 'center',\n  '-webkit-align-self': 'center',\n  alignSelf: 'center'\n} as types.CSSProperties;\nexport const crossAxisEnd = {\n  '-ms-flex-item-align': 'end',\n  '-webkit-align-self': 'flex-end',\n  alignSelf: 'flex-end'\n} as types.CSSProperties;\n","import * as typestyle from 'typestyle';\nimport { CSSLength, BaseProps, GLSDefaults, CSSBox, Scroll, Sizing } from \"../common\";\nimport * as scrollHelpers from \"../styles/scroll\";\nimport { content, stretch, crossAxisStart, crossAxisCenter, crossAxisEnd, crossAxisStretch } from '../styles/flex';\nimport React, { useContext } from 'react';\n\n/**\n * For `number` we assume pixels e.g. 5 => '5px'\n * For `string` *you* should provide the unit e.g. '5px'\n */\nexport function cssLengthToString(value: CSSLength): string {\n  return typeof value === 'number' ? value + 'px' : value;\n}\n\n/** \n * Ensures all four members of box are present\n */\nfunction boxToFullBox(box: CSSBox, name: string): typestyle.types.NestedCSSProperties {\n  if (typeof box == 'number' || typeof box == 'string') {\n    const value = cssLengthToString(box);\n    return {\n      [name + 'Top']: value,\n      [name + 'Right']: value,\n      [name + 'Bottom']: value,\n      [name + 'Left']: value,\n    };\n  } else if (!Array.isArray(box)) {\n    const toReturn: any = {};\n    if (box.top != null) toReturn[name + 'Top'] = cssLengthToString(box.top);\n    if (box.right != null) toReturn[name + 'Right'] = cssLengthToString(box.right);\n    if (box.bottom != null) toReturn[name + 'Bottom'] = cssLengthToString(box.bottom);\n    if (box.left != null) toReturn[name + 'Left'] = cssLengthToString(box.left);\n    return toReturn;\n  } else if (box.length == 2) {\n    const [topBottom, leftRight] = box.map(cssLengthToString);\n    return {\n      [name + 'Top']: topBottom,\n      [name + 'Right']: leftRight,\n      [name + 'Bottom']: topBottom,\n      [name + 'Left']: leftRight,\n    };\n  } else {\n    const [top, right, bottom, left] = box.map(cssLengthToString);\n    return {\n      [name + 'Top']: top,\n      [name + 'Right']: right,\n      [name + 'Bottom']: bottom,\n      [name + 'Left']: left,\n    };\n  }\n}\n\n/** \n * Utility to unwrap the three ways a padding might be provided \n */\nexport function _processPadding(box: CSSBox)\n  : typestyle.types.NestedCSSProperties {\n  return boxToFullBox(box, 'padding');\n}\n\nexport function _processScroll(scroll: Scroll) {\n  return (\n    scroll == 'hidden' ? scrollHelpers.scrollHidden\n      : scroll == 'horizontal' ? scrollHelpers.scrollHorizontal\n        : scroll == 'vertical' ? scrollHelpers.scrollVertical\n          : scrollHelpers.scrollBoth\n  );\n}\n\n/** \n * Creates the React tag\n * - Does any processing of `BaseProps` if required\n * - Then creates the appropriate tag\n */\nexport function createBaseTag<T extends BaseProps>(\n  props: T,\n\n  /** Any additional customizations done by the component */\n  klass: string,\n\n  /** Comment to help with debugging */\n  comment: string,\n\n  /** Ref to allow you to use dom element if you want */\n  ref: React.LegacyRef<HTMLDivElement>\n) {\n  const {\n    className,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    scroll,\n    styles = [],\n    tag,\n    ...otherProps } = props;\n\n  return React.createElement(\n    (tag != null) ? tag : 'div',\n    {\n      ref,\n      className: typestyle.classes(\n        className,\n        klass,\n        typestyle.style(\n          /** Scroll */\n          scroll != null && _processScroll(scroll),\n          /** Padding */\n          padding != null && _processPadding(padding),\n          /** Size props */\n          height != null && { height: cssLengthToString(height) },\n          minHeight != null && { minHeight: cssLengthToString(minHeight) },\n          maxHeight != null && { maxHeight: cssLengthToString(maxHeight) },\n          width != null && { width: cssLengthToString(width) },\n          minWidth != null && { minWidth: cssLengthToString(minWidth) },\n          maxWidth != null && { maxWidth: cssLengthToString(maxWidth) },\n          /** Any user customizations */\n          ...styles,\n        )\n      ),\n      'data-comment': comment,\n      ...otherProps,\n    }\n  )\n}\n\n/** \n * Generates the appropriate styles to handle the sizing interaction \n */\nexport function _processSizing(fx: Sizing = 'content'): typestyle.types.CSSProperties {\n  return fx == 'content' ? content\n    : fx == 'stretch' ? stretch(1)\n      : stretch(fx);\n}\n\nexport function _processCrossAxisAlign(align: 'start' | 'center' | 'end' | 'stretch'): typestyle.types.CSSProperties {\n  return align == 'start' ? crossAxisStart\n    : align == 'center' ? crossAxisCenter\n      : align == 'end' ? crossAxisEnd\n        : crossAxisStretch;\n}\n\n/** \n * Uses the defaults safely \n */\nexport function useGLSDefaults() {\n  const {\n    verticalSpacing = 24,\n    horizontalSpacing = 24,\n    breakpoint = 480\n  } = useContext(GLSDefaults);\n  return {\n    verticalSpacing,\n    horizontalSpacing,\n    breakpoint,\n  }\n}\n","import { PaddingProp, ClassNameProp, ScrollProp, SizeProps, StylesProp, SizingProp, CrossAxisAlignProp } from \"../common\";\nimport * as typestyle from \"typestyle\";\nimport { _processPadding, _processScroll, cssLengthToString, _processSizing, _processCrossAxisAlign } from \"../internal/utils\";\n\n/** \n * A set of props that can help you build layout-customizable components\n */\nexport interface ComponentProps extends\n  ClassNameProp,\n  ScrollProp,\n  PaddingProp,\n  SizingProp,\n  CrossAxisAlignProp,\n  SizeProps,\n  StylesProp {\n}\n\n/** \n * Takes a set of component props \n * - actions certain props to update the `props` className\n * @returns `props` with actioned members omitted and className updated\n */\nexport function component<T extends ComponentProps>(props: T, defaults: ComponentProps = {})\n  : Omit<\n    T,\n    | 'padding'\n    | 'scroll'\n    | 'sizing'\n    | 'crossAxisAlign'\n\n    | 'height'\n    | 'minHeight'\n    | 'maxHeight'\n    | 'width'\n    | 'minWidth'\n    | 'maxWidth'\n\n    | 'styles'\n  > {\n  let stylesToProcess: (typestyle.types.NestedCSSProperties | false | null)[] = [];\n\n  const {\n    padding = defaults.padding,\n    scroll = defaults.scroll,\n    sizing = defaults.sizing,\n    crossAxisAlign = defaults.crossAxisAlign,\n\n    height = defaults.height,\n    minHeight = defaults.minHeight,\n    maxHeight = defaults.maxHeight,\n    width = defaults.width,\n    minWidth = defaults.minWidth,\n    maxWidth = defaults.maxWidth,\n\n    styles = defaults.styles,\n\n    ...result\n  } = props;\n\n  if (padding != null) stylesToProcess.push(_processPadding(padding));\n  if (scroll != null) stylesToProcess.push(_processScroll(scroll));\n  /** Always size by content by default */\n  stylesToProcess.push(_processSizing(sizing));\n  if (crossAxisAlign != null) stylesToProcess.push(_processCrossAxisAlign(crossAxisAlign));\n\n  if (height != null) stylesToProcess.push({ height: cssLengthToString(height) });\n  if (minHeight != null) stylesToProcess.push({ minHeight: cssLengthToString(minHeight) });\n  if (maxHeight != null) stylesToProcess.push({ maxHeight: cssLengthToString(maxHeight) });\n  if (width != null) stylesToProcess.push({ width: cssLengthToString(width) });\n  if (minWidth != null) stylesToProcess.push({ minWidth: cssLengthToString(minWidth) });\n  if (maxWidth != null) stylesToProcess.push({ maxWidth: cssLengthToString(maxWidth) });\n\n  if (styles != null) stylesToProcess = stylesToProcess.concat(styles);\n\n  result.className = typestyle.classes(\n    props.className,\n    typestyle.style(...stylesToProcess),\n  );\n\n  return result;\n}\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, VerticalsAlignProps, CrossAxisAlignProp } from '../common';\nimport { createBaseTag, _processSizing, _processCrossAxisAlign } from '../internal/utils';\nimport { content, stretch, centerJustified, endJustified, center, end, vertical, start } from '../styles/flex';\n\nexport interface Stretch extends BaseProps, VerticalsAlignProps, CrossAxisAlignProp {\n  sizing?: number;\n}\n\n/** \n * For providing a *as much as available* amount of space for an item\n */\nexport const Stretch = React.forwardRef((props: Stretch, ref: React.LegacyRef<HTMLDivElement>) => {\n  const {\n    sizing,\n    crossAxisAlign,\n\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    stretch(sizing),\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    vertical,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Stretch', ref);\n});\nStretch.displayName = 'Stretch';\n\nexport interface ContentProps extends BaseProps, VerticalsAlignProps, CrossAxisAlignProp {\n  wrapInSpan?: boolean\n}\n\n/** \n * For providing a *as much as needed* amount of space for an item\n */\nexport const Content = React.forwardRef((props: ContentProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const {\n    crossAxisAlign,\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n    wrapInSpan,\n\n    ...otherProps\n  } = props;\n  /** \n   * Ensure single child. Without it the following would become weird\n   * `<Content><b>Hello</b> is it me you are looking for</Content>`\n   */\n  if (wrapInSpan) {\n    otherProps.children = <span>{otherProps.children}</span>;  \n  }\n  const klass = typestyle.style(\n    content,\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    vertical,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Content', ref);\n});\nContent.displayName = 'Content';\n\nexport interface BoxProps extends BaseProps, VerticalsAlignProps, SizingProp, CrossAxisAlignProp {\n}\n\n/** \n * A general purpose single item container\n */\nexport const Box = React.forwardRef((props: BoxProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const {\n    sizing,\n    crossAxisAlign,\n    verticalAlign = 'top',\n    horizontalAlign = 'left',\n\n    ...otherProps\n  } = props;\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    vertical,\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Box', ref);\n});\nBox.displayName = 'Box';\n","import * as typestyle from 'typestyle';\nimport { CSSLength } from \"../common\";\nimport { cssLengthToString } from '../internal/utils';\n\n/**\n * Puts a vertical margin between each child\n */\nexport const verticallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*+*': {\n        marginTop: spacing + ' !important'\n      }\n    } as typestyle.types.NestedCSSProperties\n  );\n};\n\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallySpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*+*': {\n        marginLeft: spacing + ' !important'\n      }\n    } as typestyle.types.CSSProperties\n  );\n};\n/**\n * Puts a horizontal margin between each child\n */\nexport const horizontallyReverseSpaced = (margin: CSSLength) => {\n  const spacing = cssLengthToString(margin);\n  return (\n    {\n      '&>*+*': {\n        marginRight: spacing + ' !important'\n      }\n    } as typestyle.types.CSSProperties\n  );\n};\n\n/**\n * Puts a (horizontal AND vertical) margin between each child\n */\nexport function gridSpaced(both: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight: CSSLength): typestyle.types.NestedCSSProperties;\nexport function gridSpaced(topAndBottom: CSSLength, leftAndRight = topAndBottom): typestyle.types.NestedCSSProperties {\n  const verticalSpacing = cssLengthToString(topAndBottom);\n  const horizontalSpacing = cssLengthToString(leftAndRight);\n  return {\n    // -margin on parent to cancel the internal margin leaking\n    // However this negative margins defeats any margin pushed by a parent (vertical/horizontal etc)\n    // We handle this in our grid component rendering `<span>` before itself. So\n    // <Vertical> <Something>                                              <Grid>  </Vertical>\n    // Renders as:\n    // <Vertical> <Something>        <span to accept parent pushed margin> <Grid>  </Vertical>\n    marginTop: '-' + verticalSpacing + ' !important',\n    marginLeft: '-' + horizontalSpacing + ' !important',\n    $nest: {\n      '&>*': {\n        marginTop: verticalSpacing + ' !important',\n        marginLeft: horizontalSpacing + ' !important',\n      }\n    }\n  };\n};\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, VerticalsAlignProps, CrossAxisAlignProp } from '../common';\nimport { createBaseTag, _processSizing, useGLSDefaults, _processCrossAxisAlign } from '../internal/utils';\nimport { vertical, centerJustified, endJustified, end, center, start } from '../styles/flex';\nimport { verticallySpaced } from '../styles/spacing';\n\nexport interface VerticalProps extends BaseProps, SizingProp, SpacingProp, VerticalsAlignProps, CrossAxisAlignProp {\n}\n\n/** \n * Layout out children vertically with a margin between them\n */\nexport const Vertical = React.forwardRef((props: VerticalProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const { verticalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n    crossAxisAlign,\n\n    spacing = verticalSpacing,\n    verticalAlign,\n    horizontalAlign,\n\n    ...otherProps\n  } = props;\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    vertical,\n    spacing !== 0 && verticallySpaced(spacing),\n    verticalAlign == 'center' && centerJustified,\n    verticalAlign == 'bottom' && endJustified,\n    horizontalAlign == 'left' && start,\n    horizontalAlign == 'center' && center,\n    horizontalAlign == 'right' && end,\n  );\n  return createBaseTag(otherProps, klass, 'Vertical', ref);\n});\nVertical.displayName = 'Vertical';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { BaseProps, SizingProp, SpacingProp, HorizontalsAlignProps, CrossAxisAlignProp } from '../common';\nimport { createBaseTag, _processSizing, useGLSDefaults, _processCrossAxisAlign } from '../internal/utils';\nimport { horizontal, endJustified, centerJustified, center, end, start, baseline, horizontalReverse, startJustified } from '../styles/flex';\nimport { horizontallySpaced, horizontallyReverseSpaced } from '../styles/spacing';\n\nexport interface HorizontalProps extends BaseProps, SizingProp, SpacingProp, HorizontalsAlignProps, CrossAxisAlignProp {\n  reverse?: boolean\n}\n\n/** \n * Layout out children horizontally with a margin between them\n */\nexport const Horizontal = React.forwardRef((props: HorizontalProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const { horizontalSpacing } = useGLSDefaults();\n  const {\n    sizing,\n    crossAxisAlign,\n\n    spacing = horizontalSpacing,\n    verticalAlign,\n    horizontalAlign,\n    reverse,\n\n    ...otherProps } = props;\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    reverse === true ? horizontalReverse : horizontal,\n    spacing !== 0 && (reverse === true ? horizontallyReverseSpaced(spacing) : horizontallySpaced(spacing)),\n    horizontalAlign == 'left' && (reverse === true ? endJustified : startJustified),\n    horizontalAlign == 'center' && centerJustified,\n    horizontalAlign == 'right' && (reverse === true ? startJustified : endJustified),\n    verticalAlign == 'top' && start,\n    verticalAlign == 'center' && center,\n    verticalAlign == 'bottom' && end,\n    verticalAlign == 'baseline' && baseline,\n  );\n  return createBaseTag(otherProps, klass, 'Horizontal', ref);\n});\nHorizontal.displayName = 'Horizontal';\n","import React from 'react';\nimport * as typestyle from 'typestyle';\nimport { SizingProp, StylesProp, SpacingProp, VerticalsAlignProps, HorizontalsAlignProps, PaddingProp, SizeProps, ScrollProp, StyleProp, ClassNameProp, TagProps, CrossAxisAlignProp } from '../common';\nimport { createBaseTag, useGLSDefaults, _processSizing, _processPadding, cssLengthToString, _processScroll, _processCrossAxisAlign } from '../internal/utils';\nimport { vertical, horizontal, centerJustified, endJustified, end, center, start, baseline } from '../styles/flex';\nimport { verticallySpaced, horizontallySpaced } from '../styles/spacing';\n\n/** \n * Props that can be specified at\n * - root of `Responsive` \n * - and overridden for `vertical`/`horizontal` modes\n */\nexport interface ResponsiveOverridableProps extends\n  ScrollProp,\n  PaddingProp,\n  SizeProps,\n  SizingProp,\n  SpacingProp,\n  CrossAxisAlignProp {\n}\n\nexport interface BreakpointProp {\n  /** \n   * windowWidth <= breakpoint : it is vertical (mobile)\n   * else                      : it is horizontal (desktop)\n   **/\n  breakpoint?: number;\n}\n\n/** \n * Props for Vertical mode\n */\nexport interface ResponsiveVerticalModeProps extends\n  VerticalsAlignProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\n/** \n * Props for Horizontal mode\n */\nexport interface ResponsiveHorizontalModeProps extends\n  HorizontalsAlignProps,\n  StylesProp,\n  ResponsiveOverridableProps {\n}\n\nexport interface ResponsiveModesProps {\n  /** Vertical mode configuration */\n  vertical?: ResponsiveVerticalModeProps;\n  /** Horizontal mode configuration */\n  horizontal?: ResponsiveHorizontalModeProps;\n}\n\n/** \n * Props that can only be specified at the root of the `Responsive` \n */\nexport interface ResponsiveRootOnlyProps extends\n  StylesProp,\n  StyleProp,\n  ClassNameProp,\n  TagProps,\n  BreakpointProp {\n}\n\n/** \n * Props for the Responsive component\n */\nexport interface ResponsiveProps extends\n  ResponsiveRootOnlyProps,\n  ResponsiveModesProps,\n  ResponsiveOverridableProps {\n}\n\n/**\n * Layout out children\n * - vertically till breakpoint\n * - horizontally above breakpoint\n */\nexport const Responsive = React.forwardRef((props: ResponsiveProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const {\n    verticalSpacing: defaultVerticalSpacing,\n    horizontalSpacing: defaultHorizontalSpacing,\n    breakpoint: bp\n  } = useGLSDefaults();\n\n  const {\n    breakpoint = bp,\n    vertical: verticalOptions,\n    horizontal: horizontalOptions,\n\n    /** Overridable */\n    scroll,\n    padding,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    sizing,\n    crossAxisAlign,\n    spacing,\n\n    ...otherProps\n  } = props;\n\n  /** Determine scroll */\n  const verticalScroll = (verticalOptions && verticalOptions.scroll != null) ? verticalOptions.scroll\n    : scroll;\n  const horizontalScroll = (horizontalOptions && horizontalOptions.scroll != null) ? horizontalOptions.scroll\n    : scroll;\n\n  /** Determine paddings */\n  const verticalPadding = (verticalOptions && verticalOptions.padding != null) ? verticalOptions.padding\n    : padding;\n  const horizontalPadding = (horizontalOptions && horizontalOptions.padding != null) ? horizontalOptions.padding\n    : padding;\n\n  /** Determine size */\n  const verticalHeight = (verticalOptions && verticalOptions.height != null) ? verticalOptions.height\n    : height;\n  const horizontalHeight = (horizontalOptions && horizontalOptions.height != null) ? horizontalOptions.height\n    : height;\n  const verticalMinHeight = (verticalOptions && verticalOptions.minHeight != null) ? verticalOptions.minHeight\n    : minHeight;\n  const horizontalMinHeight = (horizontalOptions && horizontalOptions.minHeight != null) ? horizontalOptions.minHeight\n    : minHeight;\n  const verticalMaxHeight = (verticalOptions && verticalOptions.maxHeight != null) ? verticalOptions.maxHeight\n    : maxHeight;\n  const horizontalMaxHeight = (horizontalOptions && horizontalOptions.maxHeight != null) ? horizontalOptions.maxHeight\n    : maxHeight;\n  const verticalWidth = (verticalOptions && verticalOptions.width != null) ? verticalOptions.width\n    : width;\n  const horizontalWidth = (horizontalOptions && horizontalOptions.width != null) ? horizontalOptions.width\n    : width;\n  const verticalMinWidth = (verticalOptions && verticalOptions.minWidth != null) ? verticalOptions.minWidth\n    : minWidth;\n  const horizontalMinWidth = (horizontalOptions && horizontalOptions.minWidth != null) ? horizontalOptions.minWidth\n    : minWidth;\n  const verticalMaxWidth = (verticalOptions && verticalOptions.maxWidth != null) ? verticalOptions.maxWidth\n    : maxWidth;\n  const horizontalMaxWidth = (horizontalOptions && horizontalOptions.maxWidth != null) ? horizontalOptions.maxWidth\n    : maxWidth;\n\n  /** Determine sizings */\n  const verticalSizing = (verticalOptions && verticalOptions.sizing != null)\n    ? verticalOptions.sizing\n    : sizing;\n  const horizontalSizing = (horizontalOptions && horizontalOptions.sizing != null)\n    ? horizontalOptions.sizing\n    : sizing;\n\n  const verticalCrossAxisAlign = (verticalOptions && verticalOptions.crossAxisAlign != null)\n    ? verticalOptions.crossAxisAlign\n    : crossAxisAlign;\n  const horizontalCrossAxisAlign = (horizontalOptions && horizontalOptions.crossAxisAlign != null)\n    ? horizontalOptions.crossAxisAlign\n    : crossAxisAlign;\n\n  /** Determine spacings  */\n  const verticalSpacing = (verticalOptions && verticalOptions.spacing != null) ? verticalOptions.spacing\n    : spacing != null ? spacing\n      : defaultVerticalSpacing;\n  const horizontalSpacing = (horizontalOptions && horizontalOptions.spacing != null) ? horizontalOptions.spacing\n    : spacing != null ? spacing\n      : defaultHorizontalSpacing;\n\n  /** Determine alignments */\n  const verticalModeVerticalAlign =\n    (verticalOptions && verticalOptions.verticalAlign != null)\n      ? verticalOptions.verticalAlign\n      : null;\n  const verticalModeHorizontalAlign =\n    (verticalOptions && verticalOptions.horizontalAlign != null)\n      ? verticalOptions.horizontalAlign\n      : null;\n  const horizontalModeVerticalAlign =\n    (horizontalOptions && horizontalOptions.verticalAlign != null)\n      ? horizontalOptions.verticalAlign\n      : null;\n  const horizontalModeHorizontalAlign =\n    (horizontalOptions && horizontalOptions.horizontalAlign != null)\n      ? horizontalOptions.horizontalAlign\n      : null;\n\n  const klass = typestyle.style(\n    /** Till breakpoint: Vertical */\n    typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      _processSizing(verticalSizing),\n      verticalCrossAxisAlign != null && _processCrossAxisAlign(verticalCrossAxisAlign),\n      verticalPadding != null && _processPadding(verticalPadding),\n      vertical,\n      verticalSpacing !== 0 && verticallySpaced(verticalSpacing),\n      verticalModeVerticalAlign == 'center' && centerJustified,\n      verticalModeVerticalAlign == 'bottom' && endJustified,\n      verticalModeHorizontalAlign == 'left' && start,\n      verticalModeHorizontalAlign == 'right' && end,\n      verticalModeHorizontalAlign == 'center' && center,\n      verticalHeight != null && { height: cssLengthToString(verticalHeight) },\n      verticalMinHeight != null && { minHeight: cssLengthToString(verticalMinHeight) },\n      verticalMaxHeight != null && { maxHeight: cssLengthToString(verticalMaxHeight) },\n      verticalWidth != null && { width: cssLengthToString(verticalWidth) },\n      verticalMinWidth != null && { minWidth: cssLengthToString(verticalMinWidth) },\n      verticalMaxWidth != null && { maxWidth: cssLengthToString(verticalMaxWidth) },\n      verticalScroll != null && _processScroll(verticalScroll),\n    ),\n    verticalOptions && verticalOptions.styles && typestyle.media({ minWidth: 0, maxWidth: breakpoint },\n      ...verticalOptions.styles),\n\n    /** Bigger than breakpoint: Horizontal */\n    typestyle.media({ minWidth: breakpoint + 1 },\n      _processSizing(horizontalSizing),\n      horizontalCrossAxisAlign != null && _processCrossAxisAlign(horizontalCrossAxisAlign),\n      horizontalPadding != null && _processPadding(horizontalPadding),\n      horizontal,\n      horizontalSpacing !== 0 && horizontallySpaced(horizontalSpacing),\n      horizontalModeHorizontalAlign == 'right' && endJustified,\n      horizontalModeHorizontalAlign == 'center' && centerJustified,\n      horizontalModeVerticalAlign == 'top' && start,\n      horizontalModeVerticalAlign == 'center' && center,\n      horizontalModeVerticalAlign == 'bottom' && end,\n      horizontalModeVerticalAlign == 'baseline' && baseline,\n      horizontalHeight != null && { height: cssLengthToString(horizontalHeight) },\n      horizontalMinHeight != null && { minHeight: cssLengthToString(horizontalMinHeight) },\n      horizontalMaxHeight != null && { maxHeight: cssLengthToString(horizontalMaxHeight) },\n      horizontalWidth != null && { width: cssLengthToString(horizontalWidth) },\n      horizontalMinWidth != null && { minWidth: cssLengthToString(horizontalMinWidth) },\n      horizontalMaxWidth != null && { maxWidth: cssLengthToString(horizontalMaxWidth) },\n      horizontalScroll != null && _processScroll(horizontalScroll),\n    ),\n    horizontalOptions && horizontalOptions.styles && typestyle.media({ minWidth: breakpoint + 1 },\n      ...horizontalOptions.styles),\n  );\n  return createBaseTag(otherProps, klass, 'Responsive', ref);\n});\nResponsive.displayName = 'Responsive';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength, BaseProps, SizingProp, CrossAxisAlignProp } from '../common';\nimport { createBaseTag, useGLSDefaults, _processSizing, _processCrossAxisAlign } from '../internal/utils';\nimport { horizontal, wrap, endJustified, centerJustified, betweenJustified, aroundJustified } from '../styles/flex';\nimport { gridSpaced } from '../styles/spacing';\n\nexport interface GridProps extends BaseProps, SizingProp, CrossAxisAlignProp {\n  /** \n   * Minimum spacing between children\n   */\n  spacing?:\n  | CSSLength\n  | [/** Vertical */ CSSLength, /** Horizontal */ CSSLength]\n\n  /** \n   * Controls how the extra space around the children is handled\n   */\n  justify?:\n  /** Controls by content */\n  | 'left' /** default */\n  | 'center'\n  | 'right'\n  /** Controls by space */\n  | 'space-between'\n  | 'space-around'\n}\n\n/** \n * Lays out children with a margin between them (horizontal and vertical)\n */\nexport const Grid = React.forwardRef((props: GridProps, ref: React.LegacyRef<HTMLDivElement>) => {\n  const {\n    sizing,\n    crossAxisAlign,\n    spacing,\n    justify,\n    ...otherProps } = props;\n\n  /** \n   * Figure out the spacing requested \n   */\n  let { verticalSpacing, horizontalSpacing } = useGLSDefaults();\n  if (spacing != null) {\n    if (typeof spacing == 'number' || typeof spacing == 'string') {\n      horizontalSpacing = spacing;\n      verticalSpacing = horizontalSpacing;\n    } else {\n      [verticalSpacing, horizontalSpacing] = spacing;\n    }\n  }\n\n  const klass = typestyle.style(\n    _processSizing(sizing),\n    crossAxisAlign != null && _processCrossAxisAlign(crossAxisAlign),\n    horizontal, wrap,\n    gridSpaced(verticalSpacing, horizontalSpacing),\n    justify == 'center' && centerJustified,\n    justify == 'right' && endJustified,\n    justify == 'space-between' && betweenJustified,\n    justify == 'space-around' && aroundJustified,\n  );\n  return (<>\n    <span />\n    {createBaseTag(otherProps, klass, 'Grid', ref)}\n  </>);\n});\nGrid.displayName = 'Grid';\n","import * as typestyle from 'typestyle';\nimport * as React from 'react';\nimport { CSSLength } from '../common';\nimport { cssLengthToString, useGLSDefaults } from '../internal/utils';\nimport { stretch } from '../styles/flex';\n\nexport interface StretchSpacerProps extends React.HTMLProps<HTMLDivElement> {\n  sizing?: number;\n}\n\n/** \n * Flexes into any available space \n */\nexport const StretchSpacer: React.FC<StretchSpacerProps> = (props) => {\n  const { className, sizing, ...otherProps } = props;\n  const klass = typestyle.classes(\n    className,\n    typestyle.style(stretch(sizing))\n  );\n  return (\n    <div {...otherProps} className={klass} data-comment='StretchSpacer' />\n  );\n};\nStretchSpacer.displayName = 'StretchSpacer';\n\n/** \n * Common interface for space props \n */\nexport interface SpacerProps extends React.HTMLProps<HTMLDivElement> {\n  space?: CSSLength;\n}\n\n/**\n * Takes a fixed amount of horizontal space\n */\nexport const HorizontalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { horizontalSpacing } = useGLSDefaults();\n  const width = cssLengthToString(props.space == null ? horizontalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    display: 'inline-block',\n    width: width,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='HorizontalSpacer' />;\n};\nHorizontalSpacer.displayName = 'HorizontalSpacer';\n\n\n/**\n * Takes a fixed amount of vertical space\n */\nexport const VerticalSpacer: React.FC<SpacerProps> = (props) => {\n  const { style, ...otherProps } = props;\n  const { verticalSpacing } = useGLSDefaults();\n  const height = cssLengthToString(props.space == null ? verticalSpacing : props.space);\n  const styles: React.CSSProperties = {\n    height: height,\n    ...style\n  };\n  return <div {...otherProps} style={styles} data-comment='VerticalSpacer' />;\n};\nVerticalSpacer.displayName = 'VerticalSpacer';\n"],"sourceRoot":""}